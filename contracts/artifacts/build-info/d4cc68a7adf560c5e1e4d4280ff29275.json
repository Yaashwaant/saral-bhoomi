{"id":"d4cc68a7adf560c5e1e4d4280ff29275","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/LandRecordsContract.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\n/**\r\n * @title LandRecordsContract\r\n * @dev Enhanced smart contract for tracking land records with comprehensive hash generation\r\n * @author SARAL Bhoomi Team\r\n */\r\ncontract LandRecordsContract is Ownable, ReentrancyGuard {\r\n    using Strings for uint256;\r\n    \r\n    // Constructor\r\n    constructor() Ownable(msg.sender) {\r\n        // Initialize contract with deployer as owner\r\n        _initializeDeployer();\r\n    }\r\n    \r\n    // Structs\r\n    struct LandRecord {\r\n        string surveyNumber;\r\n        string eventType;\r\n        address officer;\r\n        uint256 timestamp;\r\n        string metadata;\r\n        uint256 blockNumber;\r\n        bool isValid;\r\n        string previousHash;\r\n        string currentHash;\r\n        uint256 nonce;\r\n        string dataHash; // Hash of all survey number related data\r\n    }\r\n    \r\n    struct SurveyData {\r\n        string surveyNumber;\r\n        string ownerId;\r\n        string landType;\r\n        string landArea;\r\n        string location;\r\n        string projectDetails;\r\n        uint256 lastUpdated;\r\n        bool isActive;\r\n    }\r\n    \r\n    struct Officer {\r\n        address officerAddress;\r\n        string name;\r\n        string designation;\r\n        string district;\r\n        string taluka;\r\n        bool isActive;\r\n        uint256 registrationDate;\r\n    }\r\n    \r\n    // NEW: Timeline Event struct for de-land inspired features\r\n    struct TimelineEvent {\r\n        string eventType;           // AwardDeclared, Compensated, OwnershipUpdated, etc.\r\n        string ownerId;             // Current owner at time of event\r\n        string surveyNumber;        // Survey number\r\n        string landType;            // Land classification\r\n        string details;             // Detailed description\r\n        uint256 timestamp;          // When event occurred\r\n        address officer;            // Officer who recorded event\r\n        string eventHash;           // Hash of this specific event\r\n        string previousHash;        // Hash of previous event\r\n        uint256 eventIndex;         // Index in timeline\r\n        bool isValid;               // Event validity status\r\n    }\r\n    \r\n    // NEW: Integrity verification struct\r\n    struct IntegrityCheck {\r\n        string surveyNumber;\r\n        string databaseHash;\r\n        string blockchainHash;\r\n        uint256 lastChecked;\r\n        bool isCompromised;\r\n        string compromiseReason;\r\n    }\r\n    \r\n    // State variables\r\n    mapping(string => LandRecord[]) public landRecords;\r\n    mapping(string => SurveyData) public surveyData;\r\n    mapping(address => Officer) public officers;\r\n    mapping(address => bool) public authorizedOfficers;\r\n    mapping(string => string) public surveyDataHashes; // Current hash for each survey number\r\n    \r\n    // NEW: Timeline and integrity state variables\r\n    mapping(string => TimelineEvent[]) public surveyTimeline; // Timeline for each survey\r\n    mapping(string => uint256) public surveyTimelineCount;   // Count of timeline events\r\n    mapping(string => string) public surveyCurrentTimelineHash; // Current timeline hash\r\n    mapping(string => bool) public surveyIntegrityStatus;   // Integrity verification status\r\n    mapping(string => IntegrityCheck) public integrityChecks; // Integrity check results\r\n    \r\n    // Events\r\n    event LandRecordUpdated(\r\n        string indexed surveyNumber,\r\n        string eventType,\r\n        address indexed officer,\r\n        uint256 timestamp,\r\n        string metadata,\r\n        uint256 blockNumber,\r\n        string dataHash\r\n    );\r\n    \r\n    event SurveyDataUpdated(\r\n        string indexed surveyNumber,\r\n        string ownerId,\r\n        string landType,\r\n        string dataHash,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    event OfficerRegistered(\r\n        address indexed officerAddress,\r\n        string name,\r\n        string designation,\r\n        string district,\r\n        string taluka\r\n    );\r\n    \r\n    event OfficerStatusChanged(\r\n        address indexed officerAddress,\r\n        bool isActive\r\n    );\r\n    \r\n    // NEW: Events for timeline and integrity\r\n    event TimelineEventAdded(\r\n        string indexed surveyNumber,\r\n        string eventType,\r\n        string ownerId,\r\n        uint256 timestamp,\r\n        string eventHash,\r\n        uint256 eventIndex\r\n    );\r\n    \r\n    event IntegrityCheckPerformed(\r\n        string indexed surveyNumber,\r\n        bool isCompromised,\r\n        string reason\r\n    );\r\n    \r\n    event SurveyBlockCreated(\r\n        string indexed surveyNumber,\r\n        string initialHash,\r\n        uint256 timestamp\r\n    );\r\n    \r\n    // Modifiers\r\n    modifier onlyAuthorizedOfficer() {\r\n        require(authorizedOfficers[msg.sender], \"Only authorized officers can perform this action\");\r\n        _;\r\n    }\r\n    \r\n    modifier onlyValidSurveyNumber(string memory surveyNumber) {\r\n        require(bytes(surveyNumber).length > 0, \"Survey number cannot be empty\");\r\n        _;\r\n    }\r\n    \r\n    // Register the contract deployer as the first authorized officer\r\n    function _initializeDeployer() internal {\r\n        authorizedOfficers[msg.sender] = true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Generate comprehensive hash from all survey number related data\r\n     * @param surveyNumber The survey number\r\n     * @param ownerId Owner ID\r\n     * @param landType Type of land\r\n     * @param landArea Area of land\r\n     * @param location Location details\r\n     * @param projectDetails Project information\r\n     * @param timestamp Current timestamp\r\n     * @return dataHash The generated hash\r\n     */\r\n    function generateSurveyDataHash(\r\n        string memory surveyNumber,\r\n        string memory ownerId,\r\n        string memory landType,\r\n        string memory landArea,\r\n        string memory location,\r\n        string memory projectDetails,\r\n        uint256 timestamp\r\n    ) public pure returns (string memory dataHash) {\r\n        // Combine all data into a single string for hashing\r\n        string memory combinedData = string(abi.encodePacked(\r\n            surveyNumber,\r\n            ownerId,\r\n            landType,\r\n            landArea,\r\n            location,\r\n            projectDetails,\r\n            timestamp.toString()\r\n        ));\r\n        \r\n        // Generate hash (in production, use keccak256)\r\n        return _generateHash(combinedData);\r\n    }\r\n    \r\n    /**\r\n     * @dev Update land record with comprehensive data and new hash\r\n     * @param surveyNumber The survey number of the land parcel\r\n     * @param eventType The type of event (JMR_Measurement_Uploaded, Notice_Generated, etc.)\r\n     * @param metadata Additional metadata about the event\r\n     * @param ownerId Owner ID\r\n     * @param landType Type of land\r\n     * @param landArea Area of land\r\n     * @param location Location details\r\n     * @param projectDetails Project information\r\n     */\r\n    function updateLandRecord(\r\n        string memory surveyNumber,\r\n        string memory eventType,\r\n        string memory metadata,\r\n        string memory ownerId,\r\n        string memory landType,\r\n        string memory landArea,\r\n        string memory location,\r\n        string memory projectDetails\r\n    ) external onlyAuthorizedOfficer onlyValidSurveyNumber(surveyNumber) {\r\n        require(bytes(eventType).length > 0, \"Event type cannot be empty\");\r\n        \r\n        uint256 timestamp = block.timestamp;\r\n        \r\n        // Generate new data hash\r\n        string memory newDataHash = generateSurveyDataHash(\r\n            surveyNumber,\r\n            ownerId,\r\n            landType,\r\n            landArea,\r\n            location,\r\n            projectDetails,\r\n            timestamp\r\n        );\r\n        \r\n        // Get previous hash for this survey number\r\n        string memory previousHash = surveyDataHashes[surveyNumber];\r\n        if (bytes(previousHash).length == 0) {\r\n            previousHash = \"0\";\r\n        }\r\n        \r\n        // Generate current hash\r\n        string memory currentHash = _generateHash(string(abi.encodePacked(\r\n            surveyNumber,\r\n            eventType,\r\n            msg.sender,\r\n            timestamp.toString(),\r\n            newDataHash,\r\n            previousHash\r\n        )));\r\n        \r\n        // Create new record\r\n        LandRecord memory newRecord = LandRecord({\r\n            surveyNumber: surveyNumber,\r\n            eventType: eventType,\r\n            officer: msg.sender,\r\n            timestamp: timestamp,\r\n            metadata: metadata,\r\n            blockNumber: block.number,\r\n            isValid: true,\r\n            previousHash: previousHash,\r\n            currentHash: currentHash,\r\n            nonce: block.number,\r\n            dataHash: newDataHash\r\n        });\r\n        \r\n        landRecords[surveyNumber].push(newRecord);\r\n        \r\n        // Update survey data\r\n        surveyData[surveyNumber] = SurveyData({\r\n            surveyNumber: surveyNumber,\r\n            ownerId: ownerId,\r\n            landType: landType,\r\n            landArea: landArea,\r\n            location: location,\r\n            projectDetails: projectDetails,\r\n            lastUpdated: timestamp,\r\n            isActive: true\r\n        });\r\n        \r\n        // Update current hash for this survey number\r\n        surveyDataHashes[surveyNumber] = currentHash;\r\n        \r\n        emit LandRecordUpdated(\r\n            surveyNumber,\r\n            eventType,\r\n            msg.sender,\r\n            timestamp,\r\n            metadata,\r\n            block.number,\r\n            newDataHash\r\n        );\r\n        \r\n        emit SurveyDataUpdated(\r\n            surveyNumber,\r\n            ownerId,\r\n            landType,\r\n            newDataHash,\r\n            timestamp\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Get all land records for a specific survey number with timeline\r\n     * @param surveyNumber The survey number to query\r\n     * @return recordTypes Array of event types\r\n     * @return timestamps Array of timestamps\r\n     * @return officers Array of officer addresses\r\n     * @return metadata Array of metadata strings\r\n     * @return dataHashes Array of data hashes\r\n     * @return currentHashes Array of current hashes\r\n     */\r\n    function getLandRecord(string memory surveyNumber) \r\n        external \r\n        view \r\n        onlyValidSurveyNumber(surveyNumber)\r\n        returns (\r\n            string[] memory recordTypes,\r\n            uint256[] memory timestamps,\r\n            address[] memory officers,\r\n            string[] memory metadata,\r\n            string[] memory dataHashes,\r\n            string[] memory currentHashes\r\n        ) \r\n    {\r\n        LandRecord[] memory records = landRecords[surveyNumber];\r\n        uint256 recordCount = records.length;\r\n        \r\n        recordTypes = new string[](recordCount);\r\n        timestamps = new uint256[](recordCount);\r\n        officers = new address[](recordCount);\r\n        metadata = new string[](recordCount);\r\n        dataHashes = new string[](recordCount);\r\n        currentHashes = new string[](recordCount);\r\n        \r\n        for (uint256 i = 0; i < recordCount; i++) {\r\n            recordTypes[i] = records[i].eventType;\r\n            timestamps[i] = records[i].timestamp;\r\n            officers[i] = records[i].officer;\r\n            metadata[i] = records[i].metadata;\r\n            dataHashes[i] = records[i].dataHash;\r\n            currentHashes[i] = records[i].currentHash;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Get current survey data for a survey number\r\n     * @param surveyNumber The survey number to query\r\n     * @return data The current survey data\r\n     */\r\n    function getSurveyData(string memory surveyNumber) \r\n        external \r\n        view \r\n        onlyValidSurveyNumber(surveyNumber)\r\n        returns (SurveyData memory data) \r\n    {\r\n        return surveyData[surveyNumber];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get the current hash for a survey number\r\n     * @param surveyNumber The survey number to query\r\n     * @return currentHash The current hash\r\n     */\r\n    function getCurrentHash(string memory surveyNumber) \r\n        external \r\n        view \r\n        onlyValidSurveyNumber(surveyNumber)\r\n        returns (string memory currentHash) \r\n    {\r\n        return surveyDataHashes[surveyNumber];\r\n    }\r\n    \r\n    /**\r\n     * @dev Verify if a specific record is valid\r\n     * @param surveyNumber The survey number to verify\r\n     * @param blockNumber The block number to verify\r\n     * @return isValid Whether the record is valid\r\n     */\r\n    function verifyRecord(string memory surveyNumber, uint256 blockNumber) \r\n        external \r\n        view \r\n        onlyValidSurveyNumber(surveyNumber)\r\n        returns (bool isValid) \r\n    {\r\n        LandRecord[] memory records = landRecords[surveyNumber];\r\n        \r\n        for (uint256 i = 0; i < records.length; i++) {\r\n            if (records[i].blockNumber == blockNumber) {\r\n                return records[i].isValid;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    /**\r\n     * @dev Get the total number of records for a survey number\r\n     * @param surveyNumber The survey number to query\r\n     * @return count Total number of records\r\n     */\r\n    function getRecordCount(string memory surveyNumber) \r\n        external \r\n        view \r\n        onlyValidSurveyNumber(surveyNumber)\r\n        returns (uint256 count) \r\n    {\r\n        return landRecords[surveyNumber].length;\r\n    }\r\n    \r\n    /**\r\n     * @dev Register a new officer\r\n     * @param officerAddress The address of the officer\r\n     * @param name The name of the officer\r\n     * @param designation The designation of the officer\r\n     * @param district The district where the officer is posted\r\n     * @param taluka The taluka where the officer is posted\r\n     */\r\n    function registerOfficer(\r\n        address officerAddress,\r\n        string memory name,\r\n        string memory designation,\r\n        string memory district,\r\n        string memory taluka\r\n    ) external onlyOwner {\r\n        require(officerAddress != address(0), \"Invalid officer address\");\r\n        require(bytes(name).length > 0, \"Name cannot be empty\");\r\n        require(bytes(designation).length > 0, \"Designation cannot be empty\");\r\n        require(bytes(district).length > 0, \"District cannot be empty\");\r\n        require(bytes(taluka).length > 0, \"Taluka cannot be empty\");\r\n        \r\n        officers[officerAddress] = Officer({\r\n            officerAddress: officerAddress,\r\n            name: name,\r\n            designation: designation,\r\n            district: district,\r\n            taluka: taluka,\r\n            isActive: true,\r\n            registrationDate: block.timestamp\r\n        });\r\n        \r\n        authorizedOfficers[officerAddress] = true;\r\n        \r\n        emit OfficerRegistered(officerAddress, name, designation, district, taluka);\r\n    }\r\n    \r\n    /**\r\n     * @dev Change officer status (active/inactive)\r\n     * @param officerAddress The address of the officer\r\n     * @param isActive The new status\r\n     */\r\n    function setOfficerStatus(address officerAddress, bool isActive) external onlyOwner {\r\n        require(officerAddress != address(0), \"Invalid officer address\");\r\n        require(officers[officerAddress].officerAddress != address(0), \"Officer not registered\");\r\n        \r\n        officers[officerAddress].isActive = isActive;\r\n        authorizedOfficers[officerAddress] = isActive;\r\n        \r\n        emit OfficerStatusChanged(officerAddress, isActive);\r\n    }\r\n    \r\n    /**\r\n     * @dev Get officer information\r\n     * @param officerAddress The address of the officer\r\n     * @return name Officer name\r\n     * @return designation Officer designation\r\n     * @return district Officer district\r\n     * @return taluka Officer taluka\r\n     * @return isActive Whether officer is active\r\n     * @return registrationDate When officer was registered\r\n     */\r\n    function getOfficerInfo(address officerAddress) \r\n        external \r\n        view \r\n        returns (\r\n            string memory name,\r\n            string memory designation,\r\n            string memory district,\r\n            string memory taluka,\r\n            bool isActive,\r\n            uint256 registrationDate\r\n        ) \r\n    {\r\n        Officer memory officer = officers[officerAddress];\r\n        require(officer.officerAddress != address(0), \"Officer not found\");\r\n        \r\n        return (\r\n            officer.name,\r\n            officer.designation,\r\n            officer.district,\r\n            officer.taluka,\r\n            officer.isActive,\r\n            officer.registrationDate\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Check if an address is an authorized officer\r\n     * @param officerAddress The address to check\r\n     * @return isAuthorized Whether the address is authorized\r\n     */\r\n    function isAuthorizedOfficer(address officerAddress) external view returns (bool isAuthorized) {\r\n        return authorizedOfficers[officerAddress] && officers[officerAddress].isActive;\r\n    }\r\n    \r\n    /**\r\n     * @dev Get contract statistics\r\n     * @return totalOfficers Total number of registered officers\r\n     * @return activeOfficers Number of active officers\r\n     * @return totalRecords Total number of land records\r\n     * @return totalSurveys Total number of unique survey numbers\r\n     */\r\n    function getContractStats() external view returns (\r\n        uint256 totalOfficers,\r\n        uint256 activeOfficers,\r\n        uint256 totalRecords,\r\n        uint256 totalSurveys\r\n    ) {\r\n        // This is a simplified implementation\r\n        // In a production contract, you might want to maintain counters\r\n        return (0, 0, 0, 0);\r\n    }\r\n    \r\n    /**\r\n     * @dev Emergency function to invalidate a record (only owner)\r\n     * @param surveyNumber The survey number\r\n     * @param blockNumber The block number to invalidate\r\n     */\r\n    function invalidateRecord(string memory surveyNumber, uint256 blockNumber) \r\n        external \r\n        onlyOwner \r\n        onlyValidSurveyNumber(surveyNumber) \r\n    {\r\n        LandRecord[] storage records = landRecords[surveyNumber];\r\n        \r\n        for (uint256 i = 0; i < records.length; i++) {\r\n            if (records[i].blockNumber == blockNumber) {\r\n                records[i].isValid = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Internal hash generation function\r\n     * @param data The data to hash\r\n     * @return hash The generated hash\r\n     */\r\n    function _generateHash(string memory data) internal pure returns (string memory hash) {\r\n        // Simple hash function for demo purposes\r\n        // In production, use keccak256 or similar cryptographic hash\r\n        uint256 hashValue = 0;\r\n        for (uint256 i = 0; i < bytes(data).length; i++) {\r\n            hashValue = ((hashValue << 5) + hashValue) + uint8(bytes(data)[i]);\r\n        }\r\n        return hashValue.toHexString();\r\n    }\r\n    \r\n    // ===== NEW: De-Land Inspired Timeline Functions =====\r\n    \r\n    /**\r\n     * @dev Create initial survey block with all current data\r\n     * @param surveyNumber The survey number\r\n     * @param jmrData JMR measurement data\r\n     * @param awardData Award and compensation data\r\n     * @param landRecordData Land record details\r\n     * @param ownerId Current owner ID\r\n     * @param landType Land classification\r\n     */\r\n    function createSurveyBlock(\r\n        string memory surveyNumber,\r\n        string memory jmrData,\r\n        string memory awardData,\r\n        string memory landRecordData,\r\n        string memory ownerId,\r\n        string memory landType\r\n    ) external onlyAuthorizedOfficer onlyValidSurveyNumber(surveyNumber) {\r\n        require(bytes(surveyCurrentTimelineHash[surveyNumber]).length == 0, \"Survey block already exists\");\r\n        \r\n        // Generate initial hash from all data\r\n        string memory initialHash = _generateHash(string(abi.encodePacked(\r\n            surveyNumber,\r\n            jmrData,\r\n            awardData,\r\n            landRecordData,\r\n            ownerId,\r\n            landType,\r\n            block.timestamp.toString()\r\n        )));\r\n        \r\n        // Create initial timeline event\r\n        TimelineEvent memory initialEvent = TimelineEvent({\r\n            eventType: \"SurveyBlockCreated\",\r\n            ownerId: ownerId,\r\n            surveyNumber: surveyNumber,\r\n            landType: landType,\r\n            details: \"Initial survey block created with all land data\",\r\n            timestamp: block.timestamp,\r\n            officer: msg.sender,\r\n            eventHash: initialHash,\r\n            previousHash: \"0\",\r\n            eventIndex: 0,\r\n            isValid: true\r\n        });\r\n        \r\n        // Store in timeline\r\n        surveyTimeline[surveyNumber].push(initialEvent);\r\n        surveyTimelineCount[surveyNumber] = 1;\r\n        surveyCurrentTimelineHash[surveyNumber] = initialHash;\r\n        surveyIntegrityStatus[surveyNumber] = true;\r\n        \r\n        emit SurveyBlockCreated(surveyNumber, initialHash, block.timestamp);\r\n        emit TimelineEventAdded(surveyNumber, \"SurveyBlockCreated\", ownerId, block.timestamp, initialHash, 0);\r\n    }\r\n    \r\n    /**\r\n     * @dev Add new timeline event for survey changes\r\n     * @param surveyNumber The survey number\r\n     * @param eventType Type of event (AwardDeclared, Compensated, etc.)\r\n     * @param ownerId Current owner ID\r\n     * @param landType Land classification\r\n     * @param details Detailed description of the event\r\n     */\r\n    function addTimelineEvent(\r\n        string memory surveyNumber,\r\n        string memory eventType,\r\n        string memory ownerId,\r\n        string memory landType,\r\n        string memory details\r\n    ) external onlyAuthorizedOfficer onlyValidSurveyNumber(surveyNumber) {\r\n        require(bytes(surveyCurrentTimelineHash[surveyNumber]).length > 0, \"Survey block does not exist\");\r\n        require(bytes(eventType).length > 0, \"Event type cannot be empty\");\r\n        \r\n        // Get previous hash\r\n        string memory previousHash = surveyCurrentTimelineHash[surveyNumber];\r\n        \r\n        // Generate new event hash\r\n        string memory newEventHash = _generateHash(string(abi.encodePacked(\r\n            surveyNumber,\r\n            eventType,\r\n            ownerId,\r\n            landType,\r\n            details,\r\n            previousHash,\r\n            block.timestamp.toString()\r\n        )));\r\n        \r\n        // Create new timeline event\r\n        uint256 eventIndex = surveyTimelineCount[surveyNumber];\r\n        TimelineEvent memory newEvent = TimelineEvent({\r\n            eventType: eventType,\r\n            ownerId: ownerId,\r\n            surveyNumber: surveyNumber,\r\n            landType: landType,\r\n            details: details,\r\n            timestamp: block.timestamp,\r\n            officer: msg.sender,\r\n            eventHash: newEventHash,\r\n            previousHash: previousHash,\r\n            eventIndex: eventIndex,\r\n            isValid: true\r\n        });\r\n        \r\n        // Store in timeline\r\n        surveyTimeline[surveyNumber].push(newEvent);\r\n        surveyTimelineCount[surveyNumber] = eventIndex + 1;\r\n        surveyCurrentTimelineHash[surveyNumber] = newEventHash;\r\n        \r\n        emit TimelineEventAdded(surveyNumber, eventType, ownerId, block.timestamp, newEventHash, eventIndex);\r\n    }\r\n    \r\n    /**\r\n     * @dev Get complete timeline for a survey number\r\n     * @param surveyNumber The survey number\r\n     * @return eventTypes Array of event types\r\n     * @return ownerIds Array of owner IDs\r\n     * @return landTypes Array of land types\r\n     * @return details Array of event details\r\n     * @return timestamps Array of timestamps\r\n     * @return officers Array of officer addresses\r\n     * @return eventHashes Array of event hashes\r\n     * @return eventIndexes Array of event indexes\r\n     */\r\n    function getSurveyTimeline(string memory surveyNumber) \r\n        external \r\n        view \r\n        onlyValidSurveyNumber(surveyNumber)\r\n        returns (\r\n            string[] memory eventTypes,\r\n            string[] memory ownerIds,\r\n            string[] memory landTypes,\r\n            string[] memory details,\r\n            uint256[] memory timestamps,\r\n            address[] memory officers,\r\n            string[] memory eventHashes,\r\n            uint256[] memory eventIndexes\r\n        ) \r\n    {\r\n        TimelineEvent[] memory timeline = surveyTimeline[surveyNumber];\r\n        uint256 eventCount = timeline.length;\r\n        \r\n        eventTypes = new string[](eventCount);\r\n        ownerIds = new string[](eventCount);\r\n        landTypes = new string[](eventCount);\r\n        details = new string[](eventCount);\r\n        timestamps = new uint256[](eventCount);\r\n        officers = new address[](eventCount);\r\n        eventHashes = new string[](eventCount);\r\n        eventIndexes = new uint256[](eventCount);\r\n        \r\n        for (uint256 i = 0; i < eventCount; i++) {\r\n            eventTypes[i] = timeline[i].eventType;\r\n            ownerIds[i] = timeline[i].ownerId;\r\n            landTypes[i] = timeline[i].landType;\r\n            details[i] = timeline[i].details;\r\n            timestamps[i] = timeline[i].timestamp;\r\n            officers[i] = timeline[i].officer;\r\n            eventHashes[i] = timeline[i].eventHash;\r\n            eventIndexes[i] = timeline[i].eventIndex;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Verify survey integrity by comparing database hash with blockchain hash\r\n     * @param surveyNumber The survey number\r\n     * @param databaseHash Hash from database\r\n     * @return isCompromised Whether data integrity is compromised\r\n     * @return reason Reason for compromise if any\r\n     */\r\n    function verifySurveyIntegrity(\r\n        string memory surveyNumber,\r\n        string memory databaseHash\r\n    ) external onlyAuthorizedOfficer onlyValidSurveyNumber(surveyNumber) returns (bool isCompromised, string memory reason) {\r\n        string memory blockchainHash = surveyCurrentTimelineHash[surveyNumber];\r\n        \r\n        if (bytes(blockchainHash).length == 0) {\r\n            isCompromised = true;\r\n            reason = \"Survey block does not exist on blockchain\";\r\n        } else if (keccak256(abi.encodePacked(databaseHash)) != keccak256(abi.encodePacked(blockchainHash))) {\r\n            isCompromised = true;\r\n            reason = \"Database hash does not match blockchain hash - data may be tampered\";\r\n        } else {\r\n            isCompromised = false;\r\n            reason = \"Data integrity verified - no tampering detected\";\r\n        }\r\n        \r\n        // Store integrity check result\r\n        integrityChecks[surveyNumber] = IntegrityCheck({\r\n            surveyNumber: surveyNumber,\r\n            databaseHash: databaseHash,\r\n            blockchainHash: blockchainHash,\r\n            lastChecked: block.timestamp,\r\n            isCompromised: isCompromised,\r\n            compromiseReason: reason\r\n        });\r\n        \r\n        // Update survey integrity status\r\n        surveyIntegrityStatus[surveyNumber] = !isCompromised;\r\n        \r\n        emit IntegrityCheckPerformed(surveyNumber, isCompromised, reason);\r\n        \r\n        return (isCompromised, reason);\r\n    }\r\n    \r\n    /**\r\n     * @dev Get current timeline hash for a survey number\r\n     * @param surveyNumber The survey number\r\n     * @return currentHash Current timeline hash\r\n     */\r\n    function getCurrentTimelineHash(string memory surveyNumber) \r\n        external \r\n        view \r\n        onlyValidSurveyNumber(surveyNumber)\r\n        returns (string memory currentHash) \r\n    {\r\n        return surveyCurrentTimelineHash[surveyNumber];\r\n    }\r\n    \r\n    /**\r\n     * @dev Get integrity status for a survey number\r\n     * @param surveyNumber The survey number\r\n     * @return isIntegrityValid Whether survey integrity is valid\r\n     * @return lastChecked When integrity was last checked\r\n     * @return compromiseReason Reason for compromise if any\r\n     */\r\n    function getSurveyIntegrityStatus(string memory surveyNumber) \r\n        external \r\n        view \r\n        onlyValidSurveyNumber(surveyNumber)\r\n        returns (\r\n            bool isIntegrityValid,\r\n            uint256 lastChecked,\r\n            string memory compromiseReason\r\n        ) \r\n    {\r\n        IntegrityCheck memory check = integrityChecks[surveyNumber];\r\n        return (\r\n            surveyIntegrityStatus[surveyNumber],\r\n            check.lastChecked,\r\n            check.compromiseReason\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Get timeline count for a survey number\r\n     * @param surveyNumber The survey number\r\n     * @return count Number of timeline events\r\n     */\r\n    function getTimelineCount(string memory surveyNumber) \r\n        external \r\n        view \r\n        onlyValidSurveyNumber(surveyNumber)\r\n        returns (uint256 count) \r\n    {\r\n        return surveyTimelineCount[surveyNumber];\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/LandRecordsContract.sol:322:13:\n    |\n322 |             address[] memory officers,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/LandRecordsContract.sol:86:5:\n   |\n86 |     mapping(address => Officer) public officers;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":2808,"file":"contracts/LandRecordsContract.sol","message":"The shadowed declaration is here:","start":2765}],"severity":"warning","sourceLocation":{"end":10547,"file":"contracts/LandRecordsContract.sol","start":10522},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/LandRecordsContract.sol:696:13:\n    |\n696 |             address[] memory officers,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/LandRecordsContract.sol:86:5:\n   |\n86 |     mapping(address => Officer) public officers;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":2808,"file":"contracts/LandRecordsContract.sol","message":"The shadowed declaration is here:","start":2765}],"severity":"warning","sourceLocation":{"end":24232,"file":"contracts/LandRecordsContract.sol","start":24207},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> contracts/LandRecordsContract.sol:515:5:\n    |\n515 |     function getContractStats() external view returns (\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":17696,"file":"contracts/LandRecordsContract.sol","start":17351},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[229]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"125:489:2","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":229,"linearizedBaseContracts":[229],"name":"Panic","nameLocation":"665:5:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"677:36:2","text":"@dev generic / unspecified error"},"id":184,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:2","nodeType":"VariableDeclaration","scope":229,"src":"718:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"764:37:2","text":"@dev used by the assert() builtin"},"id":188,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:2","nodeType":"VariableDeclaration","scope":229,"src":"806:39:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"851:41:2","text":"@dev arithmetic underflow or overflow"},"id":192,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:2","nodeType":"VariableDeclaration","scope":229,"src":"897:47:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:2","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"950:35:2","text":"@dev division or modulo by zero"},"id":196,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:2","nodeType":"VariableDeclaration","scope":229,"src":"990:49:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"1045:30:2","text":"@dev enum conversion error"},"id":200,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:2","nodeType":"VariableDeclaration","scope":229,"src":"1080:54:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:2","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"1140:36:2","text":"@dev invalid encoding in storage"},"id":204,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:2","nodeType":"VariableDeclaration","scope":229,"src":"1181:55:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:2","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"1242:24:2","text":"@dev empty array pop"},"id":208,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:2","nodeType":"VariableDeclaration","scope":229,"src":"1271:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:2","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1325:35:2","text":"@dev array out of bounds access"},"id":212,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:2","nodeType":"VariableDeclaration","scope":229,"src":"1365:52:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:2","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"1423:65:2","text":"@dev resource error (too large allocation or too large array)"},"id":216,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:2","nodeType":"VariableDeclaration","scope":229,"src":"1493:47:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:2","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"1546:42:2","text":"@dev calling invalid internal function"},"id":220,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:2","nodeType":"VariableDeclaration","scope":229,"src":"1593:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:2","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":227,"nodeType":"Block","src":"1819:151:2","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:2","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:2","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:2"},"nodeType":"YulFunctionCall","src":"1868:24:2"},"nodeType":"YulExpressionStatement","src":"1868:24:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:2","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:2"},"nodeType":"YulFunctionCall","src":"1905:18:2"},"nodeType":"YulExpressionStatement","src":"1905:18:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:2","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:2"},"nodeType":"YulFunctionCall","src":"1936:18:2"},"nodeType":"YulExpressionStatement","src":"1936:18:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":223,"isOffset":false,"isSlot":false,"src":"1918:4:2","valueSize":1}],"flags":["memory-safe"],"id":226,"nodeType":"InlineAssembly","src":"1829:135:2"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"1658:113:2","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":228,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:2","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"code","nameLocation":"1799:4:2","nodeType":"VariableDeclaration","scope":228,"src":"1791:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:2"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"1819:0:2"},"scope":229,"src":"1776:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":230,"src":"657:1315:2","usedErrors":[],"usedEvents":[]}],"src":"99:1874:2"},"id":2},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[298]},"id":299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"135:894:3","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":298,"linearizedBaseContracts":[298],"name":"ReentrancyGuard","nameLocation":"1048:15:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":235,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:3","nodeType":"VariableDeclaration","scope":298,"src":"1818:40:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":238,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:3","nodeType":"VariableDeclaration","scope":298,"src":"1864:36:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":240,"mutability":"mutable","name":"_status","nameLocation":"1923:7:3","nodeType":"VariableDeclaration","scope":298,"src":"1907:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"1937:52:3","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":243,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:3","nodeType":"ErrorDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"2028:2:3"},"src":"1994:37:3"},{"body":{"id":250,"nodeType":"Block","src":"2051:38:3","statements":[{"expression":{"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":246,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"2061:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":247,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"2071:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":249,"nodeType":"ExpressionStatement","src":"2061:21:3"}]},"id":251,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"2048:2:3"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"2051:0:3"},"scope":298,"src":"2037:52:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":261,"nodeType":"Block","src":"2490:79:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":254,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2500:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"2500:21:3"},{"id":257,"nodeType":"PlaceholderStatement","src":"2531:1:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":258,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"2542:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":260,"nodeType":"ExpressionStatement","src":"2542:20:3"}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"2095:366:3","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":262,"name":"nonReentrant","nameLocation":"2475:12:3","nodeType":"ModifierDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[],"src":"2487:2:3"},"src":"2466:103:3","virtual":false,"visibility":"internal"},{"body":{"id":277,"nodeType":"Block","src":"2614:268:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":265,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"2702:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":266,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2713:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"IfStatement","src":"2698:86:3","trueBody":{"id":271,"nodeType":"Block","src":"2722:62:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":268,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"2743:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":270,"nodeType":"RevertStatement","src":"2736:37:3"}]}},{"expression":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":273,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"2858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":274,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2868:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":276,"nodeType":"ExpressionStatement","src":"2858:17:3"}]},"id":278,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:3","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"2603:2:3"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"2614:0:3"},"scope":298,"src":"2575:307:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":285,"nodeType":"Block","src":"2926:170:3","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":281,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3068:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":282,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"3078:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":284,"nodeType":"ExpressionStatement","src":"3068:21:3"}]},"id":286,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:3","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[],"src":"2915:2:3"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"2926:0:3"},"scope":298,"src":"2888:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":296,"nodeType":"Block","src":"3339:42:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":292,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3356:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":293,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"3367:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":291,"id":295,"nodeType":"Return","src":"3349:25:3"}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"3102:168:3","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":297,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:3","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"3307:2:3"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"3333:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":289,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:3"},"scope":298,"src":"3275:106:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":299,"src":"1030:2353:3","usedErrors":[243],"usedEvents":[]}],"src":"109:3275:3"},"id":3},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3321],"SafeCast":[5086],"SignedMath":[5230],"Strings":[1700]},"id":1701,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":300,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1701,"sourceUnit":3322,"src":"127:37:4","symbolAliases":[{"foreign":{"id":301,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"135:4:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":304,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1701,"sourceUnit":5087,"src":"165:45:4","symbolAliases":[{"foreign":{"id":303,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"173:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":306,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1701,"sourceUnit":5231,"src":"211:49:4","symbolAliases":[{"foreign":{"id":305,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"219:10:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"262:34:4","text":" @dev String operations."},"fullyImplemented":true,"id":1700,"linearizedBaseContracts":[1700],"name":"Strings","nameLocation":"305:7:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":309,"libraryName":{"id":308,"name":"SafeCast","nameLocations":["325:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":5086,"src":"325:8:4"},"nodeType":"UsingForDirective","src":"319:21:4"},{"constant":true,"id":312,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:4","nodeType":"VariableDeclaration","scope":1700,"src":"346:56:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":310,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":315,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:4","nodeType":"VariableDeclaration","scope":1700,"src":"408:42:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":313,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":351,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:4","nodeType":"VariableDeclaration","scope":1700,"src":"456:302:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:4","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:4","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:4","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:4","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:4","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:4","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:4","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:4","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:4","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:4","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:4","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:4","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:4","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:4","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:4","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:4","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:4","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:4","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:4","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:4","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:4","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:4","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:4","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:4","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:4","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"778:81:4","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":358,"name":"StringsInsufficientHexLength","nameLocation":"870:28:4","nodeType":"ErrorDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"value","nameLocation":"907:5:4","nodeType":"VariableDeclaration","scope":358,"src":"899:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"length","nameLocation":"922:6:4","nodeType":"VariableDeclaration","scope":358,"src":"914:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:4"},"src":"864:66:4"},{"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"936:108:4","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":361,"name":"StringsInvalidChar","nameLocation":"1055:18:4","nodeType":"ErrorDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"1073:2:4"},"src":"1049:27:4"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1082:84:4","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":364,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:4","nodeType":"ErrorDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"1204:2:4"},"src":"1171:36:4"},{"body":{"id":411,"nodeType":"Block","src":"1379:563:4","statements":[{"id":410,"nodeType":"UncheckedBlock","src":"1389:547:4","statements":[{"assignments":[373],"declarations":[{"constant":false,"id":373,"mutability":"mutable","name":"length","nameLocation":"1421:6:4","nodeType":"VariableDeclaration","scope":410,"src":"1413:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":380,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"1441:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":374,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"1430:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3321_$","typeString":"type(library Math)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:4","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3153,"src":"1430:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:4"},{"assignments":[382],"declarations":[{"constant":false,"id":382,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:4","nodeType":"VariableDeclaration","scope":410,"src":"1465:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":381,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":387,"initialValue":{"arguments":[{"id":385,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"1499:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":383,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:4"},{"assignments":[389],"declarations":[{"constant":false,"id":389,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:4","nodeType":"VariableDeclaration","scope":410,"src":"1520:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":390,"nodeType":"VariableDeclarationStatement","src":"1520:11:4"},{"AST":{"nodeType":"YulBlock","src":"1570:69:4","statements":[{"nodeType":"YulAssignment","src":"1588:37:4","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:4"},"nodeType":"YulFunctionCall","src":"1599:17:4"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:4"},"nodeType":"YulFunctionCall","src":"1595:30:4"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":382,"isOffset":false,"isSlot":false,"src":"1603:6:4","valueSize":1},{"declaration":373,"isOffset":false,"isSlot":false,"src":"1618:6:4","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"1588:3:4","valueSize":1}],"flags":["memory-safe"],"id":391,"nodeType":"InlineAssembly","src":"1545:94:4"},{"body":{"id":406,"nodeType":"Block","src":"1665:234:4","statements":[{"expression":{"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:4","subExpression":{"id":393,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"1683:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":395,"nodeType":"ExpressionStatement","src":"1683:5:4"},{"AST":{"nodeType":"YulBlock","src":"1731:86:4","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:4"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:4","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:4"},"nodeType":"YulFunctionCall","src":"1771:14:4"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:4"},"nodeType":"YulFunctionCall","src":"1766:32:4"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:4"},"nodeType":"YulFunctionCall","src":"1753:46:4"},"nodeType":"YulExpressionStatement","src":"1753:46:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":312,"isOffset":false,"isSlot":false,"src":"1787:10:4","valueSize":1},{"declaration":389,"isOffset":false,"isSlot":false,"src":"1761:3:4","valueSize":1},{"declaration":367,"isOffset":false,"isSlot":false,"src":"1775:5:4","valueSize":1}],"flags":["memory-safe"],"id":396,"nodeType":"InlineAssembly","src":"1706:111:4"},{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"1834:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"1834:11:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"1867:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":405,"nodeType":"IfStatement","src":"1863:21:4","trueBody":{"id":404,"nodeType":"Break","src":"1879:5:4"}}]},"condition":{"hexValue":"74727565","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":407,"nodeType":"WhileStatement","src":"1652:247:4"},{"expression":{"id":408,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"1919:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":371,"id":409,"nodeType":"Return","src":"1912:13:4"}]}]},"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"1213:90:4","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":412,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:4","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"value","nameLocation":"1334:5:4","nodeType":"VariableDeclaration","scope":412,"src":"1326:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:4"},"returnParameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"1364:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":369,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:4"},"scope":1700,"src":"1308:634:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"2118:92:4","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2149:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:4","trueExpression":{"hexValue":"2d","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2195:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":430,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5230,"src":"2180:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5230_$","typeString":"type(library SignedMath)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:4","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5229,"src":"2180:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":429,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"2171:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":420,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:4","typeDescriptions":{}}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:4","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:4","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":419,"id":436,"nodeType":"Return","src":"2128:75:4"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"1948:89:4","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:4","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"value","nameLocation":"2073:5:4","nodeType":"VariableDeclaration","scope":438,"src":"2066:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":414,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:4"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"2103:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":417,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:4"},"scope":1700,"src":"2042:168:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"2389:100:4","statements":[{"id":456,"nodeType":"UncheckedBlock","src":"2399:84:4","statements":[{"expression":{"arguments":[{"id":447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"2442:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"2461:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":448,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"2449:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3321_$","typeString":"type(library Math)"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:4","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3264,"src":"2449:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":446,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[458,541,561],"referencedDeclaration":541,"src":"2430:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":445,"id":455,"nodeType":"Return","src":"2423:49:4"}]}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"2216:94:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:4","nodeType":"FunctionDefinition","parameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"value","nameLocation":"2344:5:4","nodeType":"VariableDeclaration","scope":458,"src":"2336:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":440,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:4"},"returnParameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":458,"src":"2374:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":443,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:4"},"scope":1700,"src":"2315:174:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":540,"nodeType":"Block","src":"2702:435:4","statements":[{"assignments":[469],"declarations":[{"constant":false,"id":469,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:4","nodeType":"VariableDeclaration","scope":540,"src":"2712:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":471,"initialValue":{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"2733:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:4"},{"assignments":[473],"declarations":[{"constant":false,"id":473,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:4","nodeType":"VariableDeclaration","scope":540,"src":"2748:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":472,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":482,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":477,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"2784:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":474,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:4"},{"expression":{"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":483,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"2805:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":485,"indexExpression":{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":488,"nodeType":"ExpressionStatement","src":"2805:15:4"},{"expression":{"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":489,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"2830:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":491,"indexExpression":{"hexValue":"31","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":494,"nodeType":"ExpressionStatement","src":"2830:15:4"},{"body":{"id":523,"nodeType":"Block","src":"2900:95:4","statements":[{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":509,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"2914:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":511,"indexExpression":{"id":510,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"2921:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":512,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"2926:10:4","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":516,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":513,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"2937:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:4","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":518,"nodeType":"ExpressionStatement","src":"2914:40:4"},{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":519,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"2968:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ExpressionStatement","src":"2968:16:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"2888:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":524,"initializationExpression":{"assignments":[496],"declarations":[{"constant":false,"id":496,"mutability":"mutable","name":"i","nameLocation":"2868:1:4","nodeType":"VariableDeclaration","scope":524,"src":"2860:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":502,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":498,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"2876:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:4"},"loopExpression":{"expression":{"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:4","subExpression":{"id":506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"2897:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":508,"nodeType":"ExpressionStatement","src":"2895:3:4"},"nodeType":"ForStatement","src":"2855:140:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"3008:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":534,"nodeType":"IfStatement","src":"3004:96:4","trueBody":{"id":533,"nodeType":"Block","src":"3025:75:4","statements":[{"errorCall":{"arguments":[{"id":529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"3075:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":530,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"3082:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":528,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"3046:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":532,"nodeType":"RevertStatement","src":"3039:50:4"}]}},{"expression":{"arguments":[{"id":537,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"3123:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":535,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:4","typeDescriptions":{}}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":467,"id":539,"nodeType":"Return","src":"3109:21:4"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"2495:112:4","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":541,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:4","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"value","nameLocation":"2641:5:4","nodeType":"VariableDeclaration","scope":541,"src":"2633:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"length","nameLocation":"2656:6:4","nodeType":"VariableDeclaration","scope":541,"src":"2648:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:4"},"returnParameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"2687:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":465,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:4"},"scope":1700,"src":"2612:525:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":560,"nodeType":"Block","src":"3369:75:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":554,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3414:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":552,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:4","typeDescriptions":{}}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:4","typeDescriptions":{}}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":557,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3422:14:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":549,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[458,541,561],"referencedDeclaration":541,"src":"3386:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":548,"id":559,"nodeType":"Return","src":"3379:58:4"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"3143:148:4","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":561,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:4","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"addr","nameLocation":"3325:4:4","nodeType":"VariableDeclaration","scope":561,"src":"3317:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:4"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":561,"src":"3354:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":546,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:4"},"scope":1700,"src":"3296:148:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":625,"nodeType":"Block","src":"3701:642:4","statements":[{"assignments":[570],"declarations":[{"constant":false,"id":570,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:4","nodeType":"VariableDeclaration","scope":625,"src":"3711:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":569,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":577,"initialValue":{"arguments":[{"arguments":[{"id":574,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"3751:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":573,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[458,541,561],"referencedDeclaration":561,"src":"3739:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":571,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:4","typeDescriptions":{}}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:4"},{"assignments":[579],"declarations":[{"constant":false,"id":579,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:4","nodeType":"VariableDeclaration","scope":625,"src":"3842:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":580,"nodeType":"VariableDeclarationStatement","src":"3842:17:4"},{"AST":{"nodeType":"YulBlock","src":"3894:78:4","statements":[{"nodeType":"YulAssignment","src":"3908:54:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:4","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:4","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:4"},"nodeType":"YulFunctionCall","src":"3939:17:4"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:4","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:4"},"nodeType":"YulFunctionCall","src":"3929:32:4"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:4"},"nodeType":"YulFunctionCall","src":"3921:41:4"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":570,"isOffset":false,"isSlot":false,"src":"3943:6:4","valueSize":1},{"declaration":579,"isOffset":false,"isSlot":false,"src":"3908:9:4","valueSize":1}],"flags":["memory-safe"],"id":581,"nodeType":"InlineAssembly","src":"3869:103:4"},{"body":{"id":618,"nodeType":"Block","src":"4015:291:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":592,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4121:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:4","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:4","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":599,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4150:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":601,"indexExpression":{"id":600,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4157:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":597,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:4","typeDescriptions":{}}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:4","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":613,"nodeType":"IfStatement","src":"4117:150:4","trueBody":{"id":612,"nodeType":"Block","src":"4167:100:4","statements":[{"expression":{"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":606,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4235:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":608,"indexExpression":{"id":607,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4242:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":611,"nodeType":"ExpressionStatement","src":"4235:17:4"}]}},{"expression":{"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":614,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4280:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":617,"nodeType":"ExpressionStatement","src":"4280:15:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":586,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4003:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":619,"initializationExpression":{"assignments":[583],"declarations":[{"constant":false,"id":583,"mutability":"mutable","name":"i","nameLocation":"3995:1:4","nodeType":"VariableDeclaration","scope":619,"src":"3987:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":585,"initialValue":{"hexValue":"3431","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:4","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:4"},"loopExpression":{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:4","subExpression":{"id":589,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4012:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"4010:3:4"},"nodeType":"ForStatement","src":"3982:324:4"},{"expression":{"arguments":[{"id":622,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4329:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":620,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:4","typeDescriptions":{}}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":568,"id":624,"nodeType":"Return","src":"4315:21:4"}]},"documentation":{"id":562,"nodeType":"StructuredDocumentation","src":"3450:165:4","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":626,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:4","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"addr","nameLocation":"3657:4:4","nodeType":"VariableDeclaration","scope":626,"src":"3649:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:4"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":626,"src":"3686:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":566,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:4"},"scope":1700,"src":"3620:723:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":662,"nodeType":"Block","src":"4498:104:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":638,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4521:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":636,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:4","typeDescriptions":{}}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:4","memberName":"length","nodeType":"MemberAccess","src":"4515:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":643,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"4540:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":641,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:4","typeDescriptions":{}}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:4","memberName":"length","nodeType":"MemberAccess","src":"4534:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":650,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4569:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":648,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:4","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":647,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":656,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"4592:1:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":654,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:4","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":653,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":635,"id":661,"nodeType":"Return","src":"4508:87:4"}]},"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"4349:66:4","text":" @dev Returns true if the two strings are equal."},"id":663,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:4","nodeType":"FunctionDefinition","parameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"a","nameLocation":"4449:1:4","nodeType":"VariableDeclaration","scope":663,"src":"4435:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":628,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"b","nameLocation":"4466:1:4","nodeType":"VariableDeclaration","scope":663,"src":"4452:15:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":630,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:4"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"4492:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":633,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:4"},"scope":1700,"src":"4420:182:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":681,"nodeType":"Block","src":"4899:64:4","statements":[{"expression":{"arguments":[{"id":672,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"4926:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":676,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"4942:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":674,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:4","typeDescriptions":{}}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:4","memberName":"length","nodeType":"MemberAccess","src":"4936:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":671,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[682,713],"referencedDeclaration":713,"src":"4916:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":670,"id":680,"nodeType":"Return","src":"4909:47:4"}]},"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"4608:214:4","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:4","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"input","nameLocation":"4860:5:4","nodeType":"VariableDeclaration","scope":682,"src":"4846:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":665,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:4"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"4890:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:4"},"scope":1700,"src":"4827:136:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":712,"nodeType":"Block","src":"5368:153:4","statements":[{"assignments":[695,697],"declarations":[{"constant":false,"id":695,"mutability":"mutable","name":"success","nameLocation":"5384:7:4","nodeType":"VariableDeclaration","scope":712,"src":"5379:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":694,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"5401:5:4","nodeType":"VariableDeclaration","scope":712,"src":"5393:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":703,"initialValue":{"arguments":[{"id":699,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5423:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":700,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"5430:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":701,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5437:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":698,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[734,771],"referencedDeclaration":771,"src":"5410:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:4"},{"condition":{"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:4","subExpression":{"id":704,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5456:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"5451:41:4","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":706,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5472:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"RevertStatement","src":"5465:27:4"}},{"expression":{"id":710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5509:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":693,"id":711,"nodeType":"Return","src":"5502:12:4"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"4969:294:4","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":713,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:4","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"input","nameLocation":"5301:5:4","nodeType":"VariableDeclaration","scope":713,"src":"5287:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":684,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"begin","nameLocation":"5316:5:4","nodeType":"VariableDeclaration","scope":713,"src":"5308:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"end","nameLocation":"5331:3:4","nodeType":"VariableDeclaration","scope":713,"src":"5323:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:4"},"returnParameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":713,"src":"5359:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":691,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:4"},"scope":1700,"src":"5268:253:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":733,"nodeType":"Block","src":"5842:83:4","statements":[{"expression":{"arguments":[{"id":724,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"5888:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":728,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"5904:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":726,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:4","typeDescriptions":{}}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:4","memberName":"length","nodeType":"MemberAccess","src":"5898:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":723,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"5859:28:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":722,"id":732,"nodeType":"Return","src":"5852:66:4"}]},"documentation":{"id":714,"nodeType":"StructuredDocumentation","src":"5527:215:4","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":734,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:4","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"input","nameLocation":"5783:5:4","nodeType":"VariableDeclaration","scope":734,"src":"5769:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":715,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:4"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"success","nameLocation":"5818:7:4","nodeType":"VariableDeclaration","scope":734,"src":"5813:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":718,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"value","nameLocation":"5835:5:4","nodeType":"VariableDeclaration","scope":734,"src":"5827:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:4"},"scope":1700,"src":"5747:178:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":770,"nodeType":"Block","src":"6327:144:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":748,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6341:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6353:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":749,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:4","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:4","memberName":"length","nodeType":"MemberAccess","src":"6347:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":755,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6370:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":756,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6378:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":763,"nodeType":"IfStatement","src":"6337:63:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":747,"id":762,"nodeType":"Return","src":"6383:17:4"}},{"expression":{"arguments":[{"id":765,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"6446:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":766,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6453:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":767,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6460:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":764,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"6417:28:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":747,"id":769,"nodeType":"Return","src":"6410:54:4"}]},"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"5931:238:4","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":771,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:4","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"input","nameLocation":"6219:5:4","nodeType":"VariableDeclaration","scope":771,"src":"6205:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":736,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"begin","nameLocation":"6242:5:4","nodeType":"VariableDeclaration","scope":771,"src":"6234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"end","nameLocation":"6265:3:4","nodeType":"VariableDeclaration","scope":771,"src":"6257:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:4"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"success","nameLocation":"6303:7:4","nodeType":"VariableDeclaration","scope":771,"src":"6298:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":743,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"value","nameLocation":"6320:5:4","nodeType":"VariableDeclaration","scope":771,"src":"6312:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:4"},"scope":1700,"src":"6174:297:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"6874:347:4","statements":[{"assignments":[786],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:4","nodeType":"VariableDeclaration","scope":840,"src":"6884:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":785,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":791,"initialValue":{"arguments":[{"id":789,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"6912:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":787,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:4","typeDescriptions":{}}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:4"},{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"result","nameLocation":"6937:6:4","nodeType":"VariableDeclaration","scope":840,"src":"6929:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":795,"initialValue":{"hexValue":"30","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:4"},{"body":{"id":834,"nodeType":"Block","src":"6995:189:4","statements":[{"assignments":[807],"declarations":[{"constant":false,"id":807,"mutability":"mutable","name":"chr","nameLocation":"7015:3:4","nodeType":"VariableDeclaration","scope":834,"src":"7009:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":806,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":817,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":812,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"7064:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":813,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"7072:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":811,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7041:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":809,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:4","typeDescriptions":{}}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":808,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"7021:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":818,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"7094:3:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:4","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":825,"nodeType":"IfStatement","src":"7090:30:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":784,"id":824,"nodeType":"Return","src":"7103:17:4"}},{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":826,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7134:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"7134:12:4"},{"expression":{"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7160:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":831,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"7170:3:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":833,"nodeType":"ExpressionStatement","src":"7160:13:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":800,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"6981:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":801,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"6985:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":835,"initializationExpression":{"assignments":[797],"declarations":[{"constant":false,"id":797,"mutability":"mutable","name":"i","nameLocation":"6970:1:4","nodeType":"VariableDeclaration","scope":835,"src":"6962:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":799,"initialValue":{"id":798,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"6974:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:4"},"loopExpression":{"expression":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:4","subExpression":{"id":803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"6992:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":805,"nodeType":"ExpressionStatement","src":"6990:3:4"},"nodeType":"ForStatement","src":"6957:227:4"},{"expression":{"components":[{"hexValue":"74727565","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":837,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"7207:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":784,"id":839,"nodeType":"Return","src":"7193:21:4"}]},"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"6477:224:4","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":841,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:4","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"input","nameLocation":"6767:5:4","nodeType":"VariableDeclaration","scope":841,"src":"6753:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":773,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"begin","nameLocation":"6790:5:4","nodeType":"VariableDeclaration","scope":841,"src":"6782:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"end","nameLocation":"6813:3:4","nodeType":"VariableDeclaration","scope":841,"src":"6805:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:4"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"success","nameLocation":"6850:7:4","nodeType":"VariableDeclaration","scope":841,"src":"6845:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":780,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":783,"mutability":"mutable","name":"value","nameLocation":"6867:5:4","nodeType":"VariableDeclaration","scope":841,"src":"6859:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:4"},"scope":1700,"src":"6706:515:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":859,"nodeType":"Block","src":"7518:63:4","statements":[{"expression":{"arguments":[{"id":850,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"7544:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":854,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"7560:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":852,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:4","typeDescriptions":{}}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:4","memberName":"length","nodeType":"MemberAccess","src":"7554:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":849,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[860,891],"referencedDeclaration":891,"src":"7535:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":848,"id":858,"nodeType":"Return","src":"7528:46:4"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"7227:216:4","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":860,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:4","nodeType":"FunctionDefinition","parameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"input","nameLocation":"7480:5:4","nodeType":"VariableDeclaration","scope":860,"src":"7466:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":843,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:4"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":860,"src":"7510:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":846,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:4"},"scope":1700,"src":"7448:133:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":890,"nodeType":"Block","src":"7986:151:4","statements":[{"assignments":[873,875],"declarations":[{"constant":false,"id":873,"mutability":"mutable","name":"success","nameLocation":"8002:7:4","nodeType":"VariableDeclaration","scope":890,"src":"7997:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":872,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"value","nameLocation":"8018:5:4","nodeType":"VariableDeclaration","scope":890,"src":"8011:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":874,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":881,"initialValue":{"arguments":[{"id":877,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"8039:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":878,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8046:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":879,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8053:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":876,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[912,954],"referencedDeclaration":954,"src":"8027:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:4"},{"condition":{"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:4","subExpression":{"id":882,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"8072:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":887,"nodeType":"IfStatement","src":"8067:41:4","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":884,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"8088:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":886,"nodeType":"RevertStatement","src":"8081:27:4"}},{"expression":{"id":888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"8125:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":871,"id":889,"nodeType":"Return","src":"8118:12:4"}]},"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"7587:296:4","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":891,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:4","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"input","nameLocation":"7920:5:4","nodeType":"VariableDeclaration","scope":891,"src":"7906:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":862,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"begin","nameLocation":"7935:5:4","nodeType":"VariableDeclaration","scope":891,"src":"7927:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"end","nameLocation":"7950:3:4","nodeType":"VariableDeclaration","scope":891,"src":"7942:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:4"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":891,"src":"7978:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":869,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:4"},"scope":1700,"src":"7888:249:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"8528:82:4","statements":[{"expression":{"arguments":[{"id":902,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"8573:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":906,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"8589:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":904,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:4","typeDescriptions":{}}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:4","memberName":"length","nodeType":"MemberAccess","src":"8583:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":901,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"8545:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":900,"id":910,"nodeType":"Return","src":"8538:65:4"}]},"documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"8143:287:4","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:4","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"input","nameLocation":"8470:5:4","nodeType":"VariableDeclaration","scope":912,"src":"8456:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"success","nameLocation":"8505:7:4","nodeType":"VariableDeclaration","scope":912,"src":"8500:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":896,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"value","nameLocation":"8521:5:4","nodeType":"VariableDeclaration","scope":912,"src":"8514:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":898,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:4"},"scope":1700,"src":"8435:175:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":917,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:4","nodeType":"VariableDeclaration","scope":1700,"src":"8616:50:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:4","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:4","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":953,"nodeType":"Block","src":"9132:143:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":931,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9146:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":934,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"9158:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":932,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:4","typeDescriptions":{}}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:4","memberName":"length","nodeType":"MemberAccess","src":"9152:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":938,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"9175:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":939,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9183:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"IfStatement","src":"9142:63:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":930,"id":945,"nodeType":"Return","src":"9188:17:4"}},{"expression":{"arguments":[{"id":948,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"9250:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":949,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"9257:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":950,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9264:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":947,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"9222:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":930,"id":952,"nodeType":"Return","src":"9215:53:4"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"8673:303:4","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:4","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"input","nameLocation":"9025:5:4","nodeType":"VariableDeclaration","scope":954,"src":"9011:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":919,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"begin","nameLocation":"9048:5:4","nodeType":"VariableDeclaration","scope":954,"src":"9040:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"end","nameLocation":"9071:3:4","nodeType":"VariableDeclaration","scope":954,"src":"9063:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:4"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"success","nameLocation":"9109:7:4","nodeType":"VariableDeclaration","scope":954,"src":"9104:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":926,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"value","nameLocation":"9125:5:4","nodeType":"VariableDeclaration","scope":954,"src":"9118:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":928,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:4"},"scope":1700,"src":"8981:294:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1074,"nodeType":"Block","src":"9675:812:4","statements":[{"assignments":[969],"declarations":[{"constant":false,"id":969,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:4","nodeType":"VariableDeclaration","scope":1074,"src":"9685:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":968,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":974,"initialValue":{"arguments":[{"id":972,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"9713:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:4","typeDescriptions":{}}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:4"},{"assignments":[976],"declarations":[{"constant":false,"id":976,"mutability":"mutable","name":"sign","nameLocation":"9783:4:4","nodeType":"VariableDeclaration","scope":1074,"src":"9776:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":975,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":992,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":977,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"9790:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":978,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"9799:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":987,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"9847:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":988,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"9855:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":986,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"9824:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":984,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:4","typeDescriptions":{}}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:4","trueExpression":{"arguments":[{"hexValue":"30","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":980,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:4","typeDescriptions":{}}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:4"},{"assignments":[994],"declarations":[{"constant":false,"id":994,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:4","nodeType":"VariableDeclaration","scope":1074,"src":"9943:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":993,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1001,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":995,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"9963:4:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":996,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:4","typeDescriptions":{}}},"id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:4"},{"assignments":[1003],"declarations":[{"constant":false,"id":1003,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:4","nodeType":"VariableDeclaration","scope":1074,"src":"9992:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1002,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1010,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1004,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"10012:4:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1005,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:4","typeDescriptions":{}}},"id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:4"},{"assignments":[1012],"declarations":[{"constant":false,"id":1012,"mutability":"mutable","name":"offset","nameLocation":"10049:6:4","nodeType":"VariableDeclaration","scope":1074,"src":"10041:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1019,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1013,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"10059:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1014,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"10075:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"10058:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:4"},{"assignments":[1021,1023],"declarations":[{"constant":false,"id":1021,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:4","nodeType":"VariableDeclaration","scope":1074,"src":"10109:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1020,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:4","nodeType":"VariableDeclaration","scope":1074,"src":"10126:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1031,"initialValue":{"arguments":[{"id":1025,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"10159:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1026,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"10166:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1027,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"10174:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1029,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10182:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1024,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[734,771],"referencedDeclaration":771,"src":"10146:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1032,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"10201:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"10215:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1034,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"10226:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1052,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"10343:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1053,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"10357:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1055,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"10373:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1056,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"10385:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":967,"id":1071,"nodeType":"Return","src":"10463:17:4"},"id":1072,"nodeType":"IfStatement","src":"10339:141:4","trueBody":{"id":1067,"nodeType":"Block","src":"10401:56:4","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1061,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:4","memberName":"min","nodeType":"MemberAccess","src":"10429:16:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":967,"id":1066,"nodeType":"Return","src":"10415:31:4"}]}},"id":1073,"nodeType":"IfStatement","src":"10197:283:4","trueBody":{"id":1051,"nodeType":"Block","src":"10242:91:4","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":1038,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"10270:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1046,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"10312:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1044,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:4","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:4","trueExpression":{"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:4","subExpression":{"arguments":[{"id":1041,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"10293:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1039,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:4","typeDescriptions":{}}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":967,"id":1050,"nodeType":"Return","src":"10256:66:4"}]}}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"9281:223:4","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1075,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:4","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"input","nameLocation":"9569:5:4","nodeType":"VariableDeclaration","scope":1075,"src":"9555:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":956,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"begin","nameLocation":"9592:5:4","nodeType":"VariableDeclaration","scope":1075,"src":"9584:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"end","nameLocation":"9615:3:4","nodeType":"VariableDeclaration","scope":1075,"src":"9607:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:4"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"success","nameLocation":"9652:7:4","nodeType":"VariableDeclaration","scope":1075,"src":"9647:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":963,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"value","nameLocation":"9668:5:4","nodeType":"VariableDeclaration","scope":1075,"src":"9661:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":965,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:4"},"scope":1700,"src":"9509:978:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1093,"nodeType":"Block","src":"10832:67:4","statements":[{"expression":{"arguments":[{"id":1084,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"10862:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1088,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"10878:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1086,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:4","typeDescriptions":{}}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:4","memberName":"length","nodeType":"MemberAccess","src":"10872:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1083,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1094,1125],"referencedDeclaration":1125,"src":"10849:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1082,"id":1092,"nodeType":"Return","src":"10842:50:4"}]},"documentation":{"id":1076,"nodeType":"StructuredDocumentation","src":"10493:259:4","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1094,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:4","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1078,"mutability":"mutable","name":"input","nameLocation":"10793:5:4","nodeType":"VariableDeclaration","scope":1094,"src":"10779:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1077,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:4"},"returnParameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1094,"src":"10823:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:4"},"scope":1700,"src":"10757:142:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"11320:156:4","statements":[{"assignments":[1107,1109],"declarations":[{"constant":false,"id":1107,"mutability":"mutable","name":"success","nameLocation":"11336:7:4","nodeType":"VariableDeclaration","scope":1124,"src":"11331:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1106,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"value","nameLocation":"11353:5:4","nodeType":"VariableDeclaration","scope":1124,"src":"11345:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1115,"initialValue":{"arguments":[{"id":1111,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"11378:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1112,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"11385:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1113,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"11392:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1110,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[1146,1183],"referencedDeclaration":1183,"src":"11362:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:4"},{"condition":{"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:4","subExpression":{"id":1116,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"11411:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1121,"nodeType":"IfStatement","src":"11406:41:4","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1118,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"11427:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"RevertStatement","src":"11420:27:4"}},{"expression":{"id":1122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"11464:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1105,"id":1123,"nodeType":"Return","src":"11457:12:4"}]},"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"10905:307:4","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:4","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"input","nameLocation":"11253:5:4","nodeType":"VariableDeclaration","scope":1125,"src":"11239:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1096,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"begin","nameLocation":"11268:5:4","nodeType":"VariableDeclaration","scope":1125,"src":"11260:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"end","nameLocation":"11283:3:4","nodeType":"VariableDeclaration","scope":1125,"src":"11275:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:4"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1125,"src":"11311:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:4"},"scope":1700,"src":"11217:259:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1145,"nodeType":"Block","src":"11803:86:4","statements":[{"expression":{"arguments":[{"id":1136,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"11852:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1140,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"11868:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1138,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:4","typeDescriptions":{}}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:4","memberName":"length","nodeType":"MemberAccess","src":"11862:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1135,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"11820:31:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1134,"id":1144,"nodeType":"Return","src":"11813:69:4"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"11482:218:4","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1146,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:4","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"input","nameLocation":"11744:5:4","nodeType":"VariableDeclaration","scope":1146,"src":"11730:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1127,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:4"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"success","nameLocation":"11779:7:4","nodeType":"VariableDeclaration","scope":1146,"src":"11774:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1130,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"value","nameLocation":"11796:5:4","nodeType":"VariableDeclaration","scope":1146,"src":"11788:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:4"},"scope":1700,"src":"11705:184:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"12297:147:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1160,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"12311:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1163,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"12323:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1161,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:4","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:4","memberName":"length","nodeType":"MemberAccess","src":"12317:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1167,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"12340:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1168,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"12348:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1175,"nodeType":"IfStatement","src":"12307:63:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1173,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1159,"id":1174,"nodeType":"Return","src":"12353:17:4"}},{"expression":{"arguments":[{"id":1177,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"12419:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1178,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"12426:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1179,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"12433:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1176,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"12387:31:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1159,"id":1181,"nodeType":"Return","src":"12380:57:4"}]},"documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"11895:241:4","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:4","nodeType":"FunctionDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"input","nameLocation":"12189:5:4","nodeType":"VariableDeclaration","scope":1183,"src":"12175:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1148,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"begin","nameLocation":"12212:5:4","nodeType":"VariableDeclaration","scope":1183,"src":"12204:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"end","nameLocation":"12235:3:4","nodeType":"VariableDeclaration","scope":1183,"src":"12227:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:4"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"success","nameLocation":"12273:7:4","nodeType":"VariableDeclaration","scope":1183,"src":"12268:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1155,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"value","nameLocation":"12290:5:4","nodeType":"VariableDeclaration","scope":1183,"src":"12282:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:4"},"scope":1700,"src":"12141:303:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1285,"nodeType":"Block","src":"12853:881:4","statements":[{"assignments":[1198],"declarations":[{"constant":false,"id":1198,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:4","nodeType":"VariableDeclaration","scope":1285,"src":"12863:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1197,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1203,"initialValue":{"arguments":[{"id":1201,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"12891:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1199,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:4","typeDescriptions":{}}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:4"},{"assignments":[1205],"declarations":[{"constant":false,"id":1205,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:4","nodeType":"VariableDeclaration","scope":1285,"src":"12945:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1204,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1225,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1206,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"12963:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1207,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"12969:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1215,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"13013:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1216,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"13021:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1214,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"12990:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1212,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:4","typeDescriptions":{}}},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1219,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:4","typeDescriptions":{}}},"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:4"},{"assignments":[1227],"declarations":[{"constant":false,"id":1227,"mutability":"mutable","name":"offset","nameLocation":"13133:6:4","nodeType":"VariableDeclaration","scope":1285,"src":"13125:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1233,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1228,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"13142:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"13142:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:4"},{"assignments":[1235],"declarations":[{"constant":false,"id":1235,"mutability":"mutable","name":"result","nameLocation":"13183:6:4","nodeType":"VariableDeclaration","scope":1285,"src":"13175:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1237,"initialValue":{"hexValue":"30","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:4"},{"body":{"id":1279,"nodeType":"Block","src":"13250:447:4","statements":[{"assignments":[1251],"declarations":[{"constant":false,"id":1251,"mutability":"mutable","name":"chr","nameLocation":"13270:3:4","nodeType":"VariableDeclaration","scope":1279,"src":"13264:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1250,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1261,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1256,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"13319:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1257,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"13327:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1255,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"13296:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1253,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:4","typeDescriptions":{}}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1252,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"13276:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1262,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"13349:3:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:4","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1269,"nodeType":"IfStatement","src":"13345:31:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1196,"id":1268,"nodeType":"Return","src":"13359:17:4"}},{"expression":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1270,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"13390:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1273,"nodeType":"ExpressionStatement","src":"13390:12:4"},{"id":1278,"nodeType":"UncheckedBlock","src":"13416:271:4","statements":[{"expression":{"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"13659:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1275,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"13669:3:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1277,"nodeType":"ExpressionStatement","src":"13659:13:4"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1244,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"13236:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1245,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"13240:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1280,"initializationExpression":{"assignments":[1239],"declarations":[{"constant":false,"id":1239,"mutability":"mutable","name":"i","nameLocation":"13216:1:4","nodeType":"VariableDeclaration","scope":1280,"src":"13208:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1243,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1240,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"13220:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1241,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"13228:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:4"},"loopExpression":{"expression":{"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:4","subExpression":{"id":1247,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"13247:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"nodeType":"ExpressionStatement","src":"13245:3:4"},"nodeType":"ForStatement","src":"13203:494:4"},{"expression":{"components":[{"hexValue":"74727565","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"13720:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1196,"id":1284,"nodeType":"Return","src":"13706:21:4"}]},"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"12450:227:4","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:4","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"input","nameLocation":"12746:5:4","nodeType":"VariableDeclaration","scope":1286,"src":"12732:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1185,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"begin","nameLocation":"12769:5:4","nodeType":"VariableDeclaration","scope":1286,"src":"12761:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"end","nameLocation":"12792:3:4","nodeType":"VariableDeclaration","scope":1286,"src":"12784:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:4"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"success","nameLocation":"12829:7:4","nodeType":"VariableDeclaration","scope":1286,"src":"12824:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1192,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"value","nameLocation":"12846:5:4","nodeType":"VariableDeclaration","scope":1286,"src":"12838:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:4"},"scope":1700,"src":"12682:1052:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1304,"nodeType":"Block","src":"14032:67:4","statements":[{"expression":{"arguments":[{"id":1295,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"14062:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1299,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"14078:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1297,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:4","typeDescriptions":{}}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:4","memberName":"length","nodeType":"MemberAccess","src":"14072:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1294,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[1305,1336],"referencedDeclaration":1336,"src":"14049:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1293,"id":1303,"nodeType":"Return","src":"14042:50:4"}]},"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"13740:212:4","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1305,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:4","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"input","nameLocation":"13993:5:4","nodeType":"VariableDeclaration","scope":1305,"src":"13979:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1288,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:4"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1305,"src":"14023:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:4"},"scope":1700,"src":"13957:142:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1335,"nodeType":"Block","src":"14472:165:4","statements":[{"assignments":[1318,1320],"declarations":[{"constant":false,"id":1318,"mutability":"mutable","name":"success","nameLocation":"14488:7:4","nodeType":"VariableDeclaration","scope":1335,"src":"14483:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1317,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"value","nameLocation":"14505:5:4","nodeType":"VariableDeclaration","scope":1335,"src":"14497:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1326,"initialValue":{"arguments":[{"id":1322,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"14530:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1323,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"14537:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1324,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"14544:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1321,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1357,1461],"referencedDeclaration":1461,"src":"14514:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:4"},{"condition":{"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:4","subExpression":{"id":1327,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"14563:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1332,"nodeType":"IfStatement","src":"14558:50:4","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1329,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"14579:27:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"RevertStatement","src":"14572:36:4"}},{"expression":{"id":1333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"14625:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1316,"id":1334,"nodeType":"Return","src":"14618:12:4"}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"14105:259:4","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1336,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:4","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"input","nameLocation":"14405:5:4","nodeType":"VariableDeclaration","scope":1336,"src":"14391:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1307,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"begin","nameLocation":"14420:5:4","nodeType":"VariableDeclaration","scope":1336,"src":"14412:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"end","nameLocation":"14435:3:4","nodeType":"VariableDeclaration","scope":1336,"src":"14427:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:4"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1336,"src":"14463:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:4"},"scope":1700,"src":"14369:268:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1356,"nodeType":"Block","src":"14944:70:4","statements":[{"expression":{"arguments":[{"id":1347,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"14977:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1351,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"14993:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1349,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:4","typeDescriptions":{}}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:4","memberName":"length","nodeType":"MemberAccess","src":"14987:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1346,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1357,1461],"referencedDeclaration":1461,"src":"14961:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1345,"id":1355,"nodeType":"Return","src":"14954:53:4"}]},"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"14643:198:4","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:4","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"input","nameLocation":"14885:5:4","nodeType":"VariableDeclaration","scope":1357,"src":"14871:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1338,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:4"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"success","nameLocation":"14920:7:4","nodeType":"VariableDeclaration","scope":1357,"src":"14915:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1341,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"value","nameLocation":"14937:5:4","nodeType":"VariableDeclaration","scope":1357,"src":"14929:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:4"},"scope":1700,"src":"14846:168:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1460,"nodeType":"Block","src":"15407:733:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1371,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"15421:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1374,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"15433:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1372,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:4","typeDescriptions":{}}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:4","memberName":"length","nodeType":"MemberAccess","src":"15427:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"15450:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1379,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"15458:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1389,"nodeType":"IfStatement","src":"15417:72:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:4","typeDescriptions":{}}},"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1370,"id":1388,"nodeType":"Return","src":"15463:26:4"}},{"assignments":[1391],"declarations":[{"constant":false,"id":1391,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:4","nodeType":"VariableDeclaration","scope":1460,"src":"15500:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1390,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1414,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1392,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"15518:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1393,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"15524:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1403,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"15574:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1401,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:4","typeDescriptions":{}}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1405,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"15582:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1400,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"15545:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1398,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:4","typeDescriptions":{}}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1408,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:4","typeDescriptions":{}}},"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:4"},{"assignments":[1416],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:4","nodeType":"VariableDeclaration","scope":1460,"src":"15686:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1415,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1424,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:4","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1418,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"15716:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"15716:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"15803:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1426,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"15809:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1428,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"15818:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1458,"nodeType":"Block","src":"16083:51:4","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:4","typeDescriptions":{}}},"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1370,"id":1457,"nodeType":"Return","src":"16097:26:4"}]},"id":1459,"nodeType":"IfStatement","src":"15799:335:4","trueBody":{"id":1450,"nodeType":"Block","src":"15834:243:4","statements":[{"assignments":[1431,1433],"declarations":[{"constant":false,"id":1431,"mutability":"mutable","name":"s","nameLocation":"15955:1:4","nodeType":"VariableDeclaration","scope":1450,"src":"15950:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1430,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"v","nameLocation":"15966:1:4","nodeType":"VariableDeclaration","scope":1450,"src":"15958:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1439,"initialValue":{"arguments":[{"id":1435,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"16003:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1436,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"16010:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1437,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"16017:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1434,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"15971:31:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:4"},{"expression":{"components":[{"id":1440,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"16043:1:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":1445,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"16062:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1443,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:4","typeDescriptions":{}}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:4","typeDescriptions":{}}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1370,"id":1449,"nodeType":"Return","src":"16035:31:4"}]}}]},"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"15020:226:4","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:4","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"input","nameLocation":"15299:5:4","nodeType":"VariableDeclaration","scope":1461,"src":"15285:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1359,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"begin","nameLocation":"15322:5:4","nodeType":"VariableDeclaration","scope":1461,"src":"15314:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"end","nameLocation":"15345:3:4","nodeType":"VariableDeclaration","scope":1461,"src":"15337:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:4"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"success","nameLocation":"15383:7:4","nodeType":"VariableDeclaration","scope":1461,"src":"15378:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1366,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"value","nameLocation":"15400:5:4","nodeType":"VariableDeclaration","scope":1461,"src":"15392:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:4"},"scope":1700,"src":"15251:889:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1520,"nodeType":"Block","src":"16209:461:4","statements":[{"assignments":[1469],"declarations":[{"constant":false,"id":1469,"mutability":"mutable","name":"value","nameLocation":"16225:5:4","nodeType":"VariableDeclaration","scope":1520,"src":"16219:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1468,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1474,"initialValue":{"arguments":[{"id":1472,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"16239:3:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1470,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:4","typeDescriptions":{}}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:4"},{"id":1517,"nodeType":"UncheckedBlock","src":"16403:238:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"16431:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:4","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"16445:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:4","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"16491:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:4","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"16505:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:4","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"16552:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":1498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"16566:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:4","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1509,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:4","memberName":"max","nodeType":"MemberAccess","src":"16615:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1467,"id":1513,"nodeType":"Return","src":"16608:22:4"},"id":1514,"nodeType":"IfStatement","src":"16548:82:4","trueBody":{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"16578:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:4","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1507,"nodeType":"ExpressionStatement","src":"16578:11:4"}},"id":1515,"nodeType":"IfStatement","src":"16487:143:4","trueBody":{"expression":{"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"16518:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:4","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1496,"nodeType":"ExpressionStatement","src":"16518:11:4"}},"id":1516,"nodeType":"IfStatement","src":"16427:203:4","trueBody":{"expression":{"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"16457:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:4","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1485,"nodeType":"ExpressionStatement","src":"16457:11:4"}}]},{"expression":{"id":1518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"16658:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1467,"id":1519,"nodeType":"Return","src":"16651:12:4"}]},"id":1521,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:4","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"chr","nameLocation":"16175:3:4","nodeType":"VariableDeclaration","scope":1521,"src":"16168:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1462,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:4"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1521,"src":"16202:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1465,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:4"},"scope":1700,"src":"16146:524:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1686,"nodeType":"Block","src":"17336:1331:4","statements":[{"assignments":[1530],"declarations":[{"constant":false,"id":1530,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:4","nodeType":"VariableDeclaration","scope":1686,"src":"17346:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1529,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1535,"initialValue":{"arguments":[{"id":1533,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"17374:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1531,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:4","typeDescriptions":{}}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:4"},{"assignments":[1537],"declarations":[{"constant":false,"id":1537,"mutability":"mutable","name":"output","nameLocation":"17403:6:4","nodeType":"VariableDeclaration","scope":1686,"src":"17390:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1536,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1545,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1541,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"17426:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:4","memberName":"length","nodeType":"MemberAccess","src":"17426:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1538,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:4"},{"assignments":[1547],"declarations":[{"constant":false,"id":1547,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:4","nodeType":"VariableDeclaration","scope":1686,"src":"17473:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1549,"initialValue":{"hexValue":"30","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:4"},{"body":{"id":1678,"nodeType":"Block","src":"17548:854:4","statements":[{"assignments":[1561],"declarations":[{"constant":false,"id":1561,"mutability":"mutable","name":"char","nameLocation":"17569:4:4","nodeType":"VariableDeclaration","scope":1678,"src":"17562:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1560,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1569,"initialValue":{"arguments":[{"arguments":[{"id":1565,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"17606:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1566,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"17614:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1564,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"17583:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1562,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:4","typeDescriptions":{}}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:4"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1570,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"17637:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":1574,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"17672:4:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1572,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:4","typeDescriptions":{}}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1676,"nodeType":"Block","src":"18330:62:4","statements":[{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1669,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"18348:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1672,"indexExpression":{"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:4","subExpression":{"id":1670,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"18355:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1673,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"18373:4:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1675,"nodeType":"ExpressionStatement","src":"18348:29:4"}]},"id":1677,"nodeType":"IfStatement","src":"17631:761:4","trueBody":{"id":1668,"nodeType":"Block","src":"17687:637:4","statements":[{"expression":{"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1583,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"17705:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1586,"indexExpression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:4","subExpression":{"id":1584,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"17712:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1589,"nodeType":"ExpressionStatement","src":"17705:29:4"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1590,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"17756:4:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1600,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"17825:4:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:4","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"17894:4:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"17963:4:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:4","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"18032:4:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:4","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"18101:4:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:4","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1650,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"18171:4:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:4","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1661,"nodeType":"IfStatement","src":"18167:143:4","trueBody":{"id":1660,"nodeType":"Block","src":"18185:125:4","statements":[{"expression":{"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1653,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"18263:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1656,"indexExpression":{"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:4","subExpression":{"id":1654,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"18270:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1659,"nodeType":"ExpressionStatement","src":"18263:28:4"}]}},"id":1662,"nodeType":"IfStatement","src":"18097:213:4","trueBody":{"expression":{"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1643,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"18115:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1646,"indexExpression":{"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:4","subExpression":{"id":1644,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"18122:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1649,"nodeType":"ExpressionStatement","src":"18115:29:4"}},"id":1663,"nodeType":"IfStatement","src":"18028:282:4","trueBody":{"expression":{"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1633,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"18046:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1636,"indexExpression":{"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:4","subExpression":{"id":1634,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"18053:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1639,"nodeType":"ExpressionStatement","src":"18046:28:4"}},"id":1664,"nodeType":"IfStatement","src":"17959:351:4","trueBody":{"expression":{"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1623,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"17977:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1626,"indexExpression":{"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:4","subExpression":{"id":1624,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"17984:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1629,"nodeType":"ExpressionStatement","src":"17977:28:4"}},"id":1665,"nodeType":"IfStatement","src":"17890:420:4","trueBody":{"expression":{"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1613,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"17908:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1616,"indexExpression":{"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:4","subExpression":{"id":1614,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"17915:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1619,"nodeType":"ExpressionStatement","src":"17908:28:4"}},"id":1666,"nodeType":"IfStatement","src":"17821:489:4","trueBody":{"expression":{"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1603,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"17839:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1606,"indexExpression":{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:4","subExpression":{"id":1604,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"17846:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1609,"nodeType":"ExpressionStatement","src":"17839:28:4"}},"id":1667,"nodeType":"IfStatement","src":"17752:558:4","trueBody":{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1593,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"17770:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1596,"indexExpression":{"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:4","subExpression":{"id":1594,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"17777:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1599,"nodeType":"ExpressionStatement","src":"17770:28:4"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"17524:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1554,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"17528:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:4","memberName":"length","nodeType":"MemberAccess","src":"17528:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1679,"initializationExpression":{"assignments":[1551],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"i","nameLocation":"17521:1:4","nodeType":"VariableDeclaration","scope":1679,"src":"17513:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1552,"nodeType":"VariableDeclarationStatement","src":"17513:9:4"},"loopExpression":{"expression":{"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:4","subExpression":{"id":1557,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"17545:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1559,"nodeType":"ExpressionStatement","src":"17543:3:4"},"nodeType":"ForStatement","src":"17508:894:4"},{"AST":{"nodeType":"YulBlock","src":"18500:129:4","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:4"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:4"},"nodeType":"YulFunctionCall","src":"18514:28:4"},"nodeType":"YulExpressionStatement","src":"18514:28:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:4","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:4","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:4","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:4"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:4","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:4"},"nodeType":"YulFunctionCall","src":"18594:21:4"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:4"},"nodeType":"YulFunctionCall","src":"18587:29:4"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:4"},"nodeType":"YulFunctionCall","src":"18580:37:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:4"},"nodeType":"YulFunctionCall","src":"18568:50:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:4"},"nodeType":"YulFunctionCall","src":"18555:64:4"},"nodeType":"YulExpressionStatement","src":"18555:64:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":1537,"isOffset":false,"isSlot":false,"src":"18521:6:4","valueSize":1},{"declaration":1537,"isOffset":false,"isSlot":false,"src":"18572:6:4","valueSize":1},{"declaration":1547,"isOffset":false,"isSlot":false,"src":"18529:12:4","valueSize":1},{"declaration":1547,"isOffset":false,"isSlot":false,"src":"18598:12:4","valueSize":1}],"flags":["memory-safe"],"id":1680,"nodeType":"InlineAssembly","src":"18475:154:4"},{"expression":{"arguments":[{"id":1683,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"18653:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1681,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:4","typeDescriptions":{}}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1528,"id":1685,"nodeType":"Return","src":"18639:21:4"}]},"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"16676:576:4","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:4","nodeType":"FunctionDefinition","parameters":{"id":1525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"input","nameLocation":"17291:5:4","nodeType":"VariableDeclaration","scope":1687,"src":"17277:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1523,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:4"},"returnParameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"17321:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1526,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:4"},"scope":1700,"src":"17257:1410:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1698,"nodeType":"Block","src":"19052:225:4","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:4","statements":[{"nodeType":"YulAssignment","src":"19215:46:4","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:4"},"nodeType":"YulFunctionCall","src":"19234:17:4"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:4"},"nodeType":"YulFunctionCall","src":"19230:30:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:4"},"nodeType":"YulFunctionCall","src":"19224:37:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1690,"isOffset":false,"isSlot":false,"src":"19238:6:4","valueSize":1},{"declaration":1692,"isOffset":false,"isSlot":false,"src":"19253:6:4","valueSize":1},{"declaration":1695,"isOffset":false,"isSlot":false,"src":"19215:5:4","valueSize":1}],"flags":["memory-safe"],"id":1697,"nodeType":"InlineAssembly","src":"19176:95:4"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"18673:268:4","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":1699,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:4","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:4","nodeType":"VariableDeclaration","scope":1699,"src":"18978:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1689,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"offset","nameLocation":"19007:6:4","nodeType":"VariableDeclaration","scope":1699,"src":"18999:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:4"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"value","nameLocation":"19045:5:4","nodeType":"VariableDeclaration","scope":1699,"src":"19037:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:4"},"scope":1700,"src":"18946:331:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1701,"src":"297:18982:4","usedErrors":[358,361,364],"usedEvents":[]}],"src":"101:19179:4"},"id":4},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3321],"Panic":[229],"SafeCast":[5086]},"id":3322,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1702,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":1704,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3322,"sourceUnit":230,"src":"129:35:5","symbolAliases":[{"foreign":{"id":1703,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"137:5:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":1706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3322,"sourceUnit":5087,"src":"165:40:5","symbolAliases":[{"foreign":{"id":1705,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"173:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"207:73:5","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3321,"linearizedBaseContracts":[3321],"name":"Math","nameLocation":"289:4:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1712,"members":[{"id":1708,"name":"Floor","nameLocation":"324:5:5","nodeType":"EnumValue","src":"324:5:5"},{"id":1709,"name":"Ceil","nameLocation":"367:4:5","nodeType":"EnumValue","src":"367:4:5"},{"id":1710,"name":"Trunc","nameLocation":"409:5:5","nodeType":"EnumValue","src":"409:5:5"},{"id":1711,"name":"Expand","nameLocation":"439:6:5","nodeType":"EnumValue","src":"439:6:5"}],"name":"Rounding","nameLocation":"305:8:5","nodeType":"EnumDefinition","src":"300:169:5"},{"body":{"id":1725,"nodeType":"Block","src":"731:112:5","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:5","statements":[{"nodeType":"YulAssignment","src":"780:16:5","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:5"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:5"},"nodeType":"YulFunctionCall","src":"787:9:5"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:5"}]},{"nodeType":"YulAssignment","src":"809:18:5","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:5"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:5"},"nodeType":"YulFunctionCall","src":"817:10:5"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1715,"isOffset":false,"isSlot":false,"src":"791:1:5","valueSize":1},{"declaration":1715,"isOffset":false,"isSlot":false,"src":"825:1:5","valueSize":1},{"declaration":1717,"isOffset":false,"isSlot":false,"src":"794:1:5","valueSize":1},{"declaration":1720,"isOffset":false,"isSlot":false,"src":"809:4:5","valueSize":1},{"declaration":1722,"isOffset":false,"isSlot":false,"src":"780:3:5","valueSize":1},{"declaration":1722,"isOffset":false,"isSlot":false,"src":"820:3:5","valueSize":1}],"flags":["memory-safe"],"id":1724,"nodeType":"InlineAssembly","src":"741:96:5"}]},"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"475:163:5","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":1726,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:5","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"a","nameLocation":"667:1:5","nodeType":"VariableDeclaration","scope":1726,"src":"659:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"b","nameLocation":"678:1:5","nodeType":"VariableDeclaration","scope":1726,"src":"670:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:5"},"returnParameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"high","nameLocation":"712:4:5","nodeType":"VariableDeclaration","scope":1726,"src":"704:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"low","nameLocation":"726:3:5","nodeType":"VariableDeclaration","scope":1726,"src":"718:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1721,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:5"},"scope":3321,"src":"643:200:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1739,"nodeType":"Block","src":"1115:462:5","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:5","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:5"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:5","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:5"},"nodeType":"YulFunctionCall","src":"1474:6:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:5"},"nodeType":"YulFunctionCall","src":"1461:20:5"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:5","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:5","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:5"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:5"},"nodeType":"YulFunctionCall","src":"1501:9:5"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:5"}]},{"nodeType":"YulAssignment","src":"1523:38:5","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:5"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:5"},"nodeType":"YulFunctionCall","src":"1535:12:5"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:5"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:5"},"nodeType":"YulFunctionCall","src":"1549:11:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:5"},"nodeType":"YulFunctionCall","src":"1531:30:5"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1729,"isOffset":false,"isSlot":false,"src":"1468:1:5","valueSize":1},{"declaration":1729,"isOffset":false,"isSlot":false,"src":"1505:1:5","valueSize":1},{"declaration":1731,"isOffset":false,"isSlot":false,"src":"1471:1:5","valueSize":1},{"declaration":1731,"isOffset":false,"isSlot":false,"src":"1508:1:5","valueSize":1},{"declaration":1734,"isOffset":false,"isSlot":false,"src":"1523:4:5","valueSize":1},{"declaration":1736,"isOffset":false,"isSlot":false,"src":"1494:3:5","valueSize":1},{"declaration":1736,"isOffset":false,"isSlot":false,"src":"1543:3:5","valueSize":1},{"declaration":1736,"isOffset":false,"isSlot":false,"src":"1556:3:5","valueSize":1}],"flags":["memory-safe"],"id":1738,"nodeType":"InlineAssembly","src":"1412:159:5"}]},"documentation":{"id":1727,"nodeType":"StructuredDocumentation","src":"849:173:5","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:5","nodeType":"FunctionDefinition","parameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"a","nameLocation":"1051:1:5","nodeType":"VariableDeclaration","scope":1740,"src":"1043:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1731,"mutability":"mutable","name":"b","nameLocation":"1062:1:5","nodeType":"VariableDeclaration","scope":1740,"src":"1054:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1730,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:5"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"high","nameLocation":"1096:4:5","nodeType":"VariableDeclaration","scope":1740,"src":"1088:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"low","nameLocation":"1110:3:5","nodeType":"VariableDeclaration","scope":1740,"src":"1102:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:5"},"scope":3321,"src":"1027:550:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1774,"nodeType":"Block","src":"1784:149:5","statements":[{"id":1773,"nodeType":"UncheckedBlock","src":"1794:133:5","statements":[{"assignments":[1753],"declarations":[{"constant":false,"id":1753,"mutability":"mutable","name":"c","nameLocation":"1826:1:5","nodeType":"VariableDeclaration","scope":1773,"src":"1818:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1757,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"1830:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1755,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"1834:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:5"},{"expression":{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1758,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"1849:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"1859:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1760,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"1864:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1763,"nodeType":"ExpressionStatement","src":"1849:16:5"},{"expression":{"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"1879:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1765,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"1888:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1768,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"1908:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1766,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"1892:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"1892:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1772,"nodeType":"ExpressionStatement","src":"1879:37:5"}]}]},"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"1583:105:5","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":1775,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:5","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"a","nameLocation":"1717:1:5","nodeType":"VariableDeclaration","scope":1775,"src":"1709:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1745,"mutability":"mutable","name":"b","nameLocation":"1728:1:5","nodeType":"VariableDeclaration","scope":1775,"src":"1720:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:5"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"success","nameLocation":"1759:7:5","nodeType":"VariableDeclaration","scope":1775,"src":"1754:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1747,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"result","nameLocation":"1776:6:5","nodeType":"VariableDeclaration","scope":1775,"src":"1768:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:5"},"scope":3321,"src":"1693:240:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1809,"nodeType":"Block","src":"2143:149:5","statements":[{"id":1808,"nodeType":"UncheckedBlock","src":"2153:133:5","statements":[{"assignments":[1788],"declarations":[{"constant":false,"id":1788,"mutability":"mutable","name":"c","nameLocation":"2185:1:5","nodeType":"VariableDeclaration","scope":1808,"src":"2177:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1792,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"2189:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1790,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2193:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:5"},{"expression":{"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1793,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"2208:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1794,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"2218:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"2223:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1798,"nodeType":"ExpressionStatement","src":"2208:16:5"},{"expression":{"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"2238:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"2247:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1803,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"2267:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1801,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"2251:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"2251:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1807,"nodeType":"ExpressionStatement","src":"2238:37:5"}]}]},"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"1939:108:5","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":1810,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:5","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"a","nameLocation":"2076:1:5","nodeType":"VariableDeclaration","scope":1810,"src":"2068:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"b","nameLocation":"2087:1:5","nodeType":"VariableDeclaration","scope":1810,"src":"2079:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:5"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"success","nameLocation":"2118:7:5","nodeType":"VariableDeclaration","scope":1810,"src":"2113:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1782,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"result","nameLocation":"2135:6:5","nodeType":"VariableDeclaration","scope":1810,"src":"2127:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:5"},"scope":3321,"src":"2052:240:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1839,"nodeType":"Block","src":"2505:391:5","statements":[{"id":1838,"nodeType":"UncheckedBlock","src":"2515:375:5","statements":[{"assignments":[1823],"declarations":[{"constant":false,"id":1823,"mutability":"mutable","name":"c","nameLocation":"2547:1:5","nodeType":"VariableDeclaration","scope":1838,"src":"2539:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1827,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1824,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"2551:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1825,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2555:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:5"},{"AST":{"nodeType":"YulBlock","src":"2595:188:5","statements":[{"nodeType":"YulAssignment","src":"2727:42:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:5"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:5"},"nodeType":"YulFunctionCall","src":"2744:9:5"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:5"},"nodeType":"YulFunctionCall","src":"2741:16:5"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:5"},"nodeType":"YulFunctionCall","src":"2759:9:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:5"},"nodeType":"YulFunctionCall","src":"2738:31:5"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1813,"isOffset":false,"isSlot":false,"src":"2751:1:5","valueSize":1},{"declaration":1813,"isOffset":false,"isSlot":false,"src":"2766:1:5","valueSize":1},{"declaration":1815,"isOffset":false,"isSlot":false,"src":"2755:1:5","valueSize":1},{"declaration":1823,"isOffset":false,"isSlot":false,"src":"2748:1:5","valueSize":1},{"declaration":1818,"isOffset":false,"isSlot":false,"src":"2727:7:5","valueSize":1}],"flags":["memory-safe"],"id":1828,"nodeType":"InlineAssembly","src":"2570:213:5"},{"expression":{"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1829,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"2842:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"2851:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1833,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"2871:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1831,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"2855:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"2855:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1837,"nodeType":"ExpressionStatement","src":"2842:37:5"}]}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"2298:111:5","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":1840,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:5","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"a","nameLocation":"2438:1:5","nodeType":"VariableDeclaration","scope":1840,"src":"2430:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"b","nameLocation":"2449:1:5","nodeType":"VariableDeclaration","scope":1840,"src":"2441:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:5"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"success","nameLocation":"2480:7:5","nodeType":"VariableDeclaration","scope":1840,"src":"2475:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1817,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1820,"mutability":"mutable","name":"result","nameLocation":"2497:6:5","nodeType":"VariableDeclaration","scope":1840,"src":"2489:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:5"},"scope":3321,"src":"2414:482:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1860,"nodeType":"Block","src":"3111:231:5","statements":[{"id":1859,"nodeType":"UncheckedBlock","src":"3121:215:5","statements":[{"expression":{"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1852,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3145:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1853,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"3155:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1857,"nodeType":"ExpressionStatement","src":"3145:15:5"},{"AST":{"nodeType":"YulBlock","src":"3199:127:5","statements":[{"nodeType":"YulAssignment","src":"3293:19:5","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:5"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:5"},"nodeType":"YulFunctionCall","src":"3303:9:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1843,"isOffset":false,"isSlot":false,"src":"3307:1:5","valueSize":1},{"declaration":1845,"isOffset":false,"isSlot":false,"src":"3310:1:5","valueSize":1},{"declaration":1850,"isOffset":false,"isSlot":false,"src":"3293:6:5","valueSize":1}],"flags":["memory-safe"],"id":1858,"nodeType":"InlineAssembly","src":"3174:152:5"}]}]},"documentation":{"id":1841,"nodeType":"StructuredDocumentation","src":"2902:113:5","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1861,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:5","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"a","nameLocation":"3044:1:5","nodeType":"VariableDeclaration","scope":1861,"src":"3036:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1842,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1845,"mutability":"mutable","name":"b","nameLocation":"3055:1:5","nodeType":"VariableDeclaration","scope":1861,"src":"3047:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:5"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"success","nameLocation":"3086:7:5","nodeType":"VariableDeclaration","scope":1861,"src":"3081:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1847,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"result","nameLocation":"3103:6:5","nodeType":"VariableDeclaration","scope":1861,"src":"3095:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:5"},"scope":3321,"src":"3020:322:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1881,"nodeType":"Block","src":"3567:231:5","statements":[{"id":1880,"nodeType":"UncheckedBlock","src":"3577:215:5","statements":[{"expression":{"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1873,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"3601:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1874,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"3611:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1878,"nodeType":"ExpressionStatement","src":"3601:15:5"},{"AST":{"nodeType":"YulBlock","src":"3655:127:5","statements":[{"nodeType":"YulAssignment","src":"3749:19:5","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:5"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:5"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:5"},"nodeType":"YulFunctionCall","src":"3759:9:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1864,"isOffset":false,"isSlot":false,"src":"3763:1:5","valueSize":1},{"declaration":1866,"isOffset":false,"isSlot":false,"src":"3766:1:5","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"3749:6:5","valueSize":1}],"flags":["memory-safe"],"id":1879,"nodeType":"InlineAssembly","src":"3630:152:5"}]}]},"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"3348:123:5","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1882,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:5","nodeType":"FunctionDefinition","parameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"mutability":"mutable","name":"a","nameLocation":"3500:1:5","nodeType":"VariableDeclaration","scope":1882,"src":"3492:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"b","nameLocation":"3511:1:5","nodeType":"VariableDeclaration","scope":1882,"src":"3503:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:5"},"returnParameters":{"id":1872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"success","nameLocation":"3542:7:5","nodeType":"VariableDeclaration","scope":1882,"src":"3537:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1868,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1871,"mutability":"mutable","name":"result","nameLocation":"3559:6:5","nodeType":"VariableDeclaration","scope":1882,"src":"3551:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:5"},"scope":3321,"src":"3476:322:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1911,"nodeType":"Block","src":"3989:122:5","statements":[{"assignments":[1893,1895],"declarations":[{"constant":false,"id":1893,"mutability":"mutable","name":"success","nameLocation":"4005:7:5","nodeType":"VariableDeclaration","scope":1911,"src":"4000:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1892,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"result","nameLocation":"4022:6:5","nodeType":"VariableDeclaration","scope":1911,"src":"4014:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1900,"initialValue":{"arguments":[{"id":1897,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"4039:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1898,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"4042:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1896,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"4032:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:5"},{"expression":{"arguments":[{"id":1902,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"4069:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1903,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"4078:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1904,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:5","memberName":"max","nodeType":"MemberAccess","src":"4086:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1901,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"4061:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1891,"id":1910,"nodeType":"Return","src":"4054:50:5"}]},"documentation":{"id":1883,"nodeType":"StructuredDocumentation","src":"3804:103:5","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1912,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:5","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"a","nameLocation":"3943:1:5","nodeType":"VariableDeclaration","scope":1912,"src":"3935:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1884,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"b","nameLocation":"3954:1:5","nodeType":"VariableDeclaration","scope":1912,"src":"3946:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:5"},"returnParameters":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"3980:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:5"},"scope":3321,"src":"3912:199:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1931,"nodeType":"Block","src":"4294:73:5","statements":[{"assignments":[null,1923],"declarations":[null,{"constant":false,"id":1923,"mutability":"mutable","name":"result","nameLocation":"4315:6:5","nodeType":"VariableDeclaration","scope":1931,"src":"4307:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1928,"initialValue":{"arguments":[{"id":1925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"4332:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1926,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"4335:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1924,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"4325:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:5"},{"expression":{"id":1929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"4354:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1921,"id":1930,"nodeType":"Return","src":"4347:13:5"}]},"documentation":{"id":1913,"nodeType":"StructuredDocumentation","src":"4117:95:5","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:5","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"a","nameLocation":"4248:1:5","nodeType":"VariableDeclaration","scope":1932,"src":"4240:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"b","nameLocation":"4259:1:5","nodeType":"VariableDeclaration","scope":1932,"src":"4251:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:5"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1932,"src":"4285:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:5"},"scope":3321,"src":"4217:150:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1961,"nodeType":"Block","src":"4564:122:5","statements":[{"assignments":[1943,1945],"declarations":[{"constant":false,"id":1943,"mutability":"mutable","name":"success","nameLocation":"4580:7:5","nodeType":"VariableDeclaration","scope":1961,"src":"4575:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1942,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"result","nameLocation":"4597:6:5","nodeType":"VariableDeclaration","scope":1961,"src":"4589:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1950,"initialValue":{"arguments":[{"id":1947,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"4614:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1948,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"4617:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1946,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"4607:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:5"},{"expression":{"arguments":[{"id":1952,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"4644:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"4653:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1955,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1954,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:5","memberName":"max","nodeType":"MemberAccess","src":"4661:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1951,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"4636:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1941,"id":1960,"nodeType":"Return","src":"4629:50:5"}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"4373:109:5","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1962,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:5","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"a","nameLocation":"4518:1:5","nodeType":"VariableDeclaration","scope":1962,"src":"4510:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"b","nameLocation":"4529:1:5","nodeType":"VariableDeclaration","scope":1962,"src":"4521:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:5"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1962,"src":"4555:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1939,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:5"},"scope":3321,"src":"4487:199:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"5158:207:5","statements":[{"id":1987,"nodeType":"UncheckedBlock","src":"5168:191:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"5306:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"5312:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1976,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"5316:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1981,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"5337:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1979,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"5321:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"5321:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1973,"id":1986,"nodeType":"Return","src":"5299:49:5"}]}]},"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"4692:374:5","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:5","nodeType":"FunctionDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"condition","nameLocation":"5093:9:5","nodeType":"VariableDeclaration","scope":1989,"src":"5088:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1964,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"a","nameLocation":"5112:1:5","nodeType":"VariableDeclaration","scope":1989,"src":"5104:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1969,"mutability":"mutable","name":"b","nameLocation":"5123:1:5","nodeType":"VariableDeclaration","scope":1989,"src":"5115:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:5"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1989,"src":"5149:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:5"},"scope":3321,"src":"5071:294:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2007,"nodeType":"Block","src":"5502:44:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2000,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5527:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2001,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"5531:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2003,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5534:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2004,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"5537:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1999,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"5519:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1998,"id":2006,"nodeType":"Return","src":"5512:27:5"}]},"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"5371:59:5","text":" @dev Returns the largest of two numbers."},"id":2008,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:5","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"a","nameLocation":"5456:1:5","nodeType":"VariableDeclaration","scope":2008,"src":"5448:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"b","nameLocation":"5467:1:5","nodeType":"VariableDeclaration","scope":2008,"src":"5459:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:5"},"returnParameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"5493:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:5"},"scope":3321,"src":"5435:111:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2026,"nodeType":"Block","src":"5684:44:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"5709:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"5713:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2022,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"5716:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2023,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"5719:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2018,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"5701:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2017,"id":2025,"nodeType":"Return","src":"5694:27:5"}]},"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"5552:60:5","text":" @dev Returns the smallest of two numbers."},"id":2027,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:5","nodeType":"FunctionDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"a","nameLocation":"5638:1:5","nodeType":"VariableDeclaration","scope":2027,"src":"5630:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2013,"mutability":"mutable","name":"b","nameLocation":"5649:1:5","nodeType":"VariableDeclaration","scope":2027,"src":"5641:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:5"},"returnParameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2027,"src":"5675:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:5"},"scope":3321,"src":"5617:111:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2049,"nodeType":"Block","src":"5912:82:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"5967:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2038,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"5971:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"5977:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2042,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"5981:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2044,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2036,"id":2048,"nodeType":"Return","src":"5959:28:5"}]},"documentation":{"id":2028,"nodeType":"StructuredDocumentation","src":"5734:102:5","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2050,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:5","nodeType":"FunctionDefinition","parameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2030,"mutability":"mutable","name":"a","nameLocation":"5866:1:5","nodeType":"VariableDeclaration","scope":2050,"src":"5858:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2029,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2032,"mutability":"mutable","name":"b","nameLocation":"5877:1:5","nodeType":"VariableDeclaration","scope":2050,"src":"5869:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:5"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2050,"src":"5903:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:5"},"scope":3321,"src":"5841:153:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2090,"nodeType":"Block","src":"6286:633:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2060,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"6300:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2071,"nodeType":"IfStatement","src":"6296:150:5","trueBody":{"id":2070,"nodeType":"Block","src":"6308:138:5","statements":[{"expression":{"arguments":[{"expression":{"id":2066,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6412:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"6412:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2063,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6400:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"6400:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"6400:35:5"}]}},{"id":2089,"nodeType":"UncheckedBlock","src":"6829:84:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"6876:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2072,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"6860:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"6860:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2078,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"6887:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2082,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"6896:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2059,"id":2088,"nodeType":"Return","src":"6853:49:5"}]}]},"documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"6000:210:5","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2091,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:5","nodeType":"FunctionDefinition","parameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"a","nameLocation":"6240:1:5","nodeType":"VariableDeclaration","scope":2091,"src":"6232:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2055,"mutability":"mutable","name":"b","nameLocation":"6251:1:5","nodeType":"VariableDeclaration","scope":2091,"src":"6243:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:5"},"returnParameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"6277:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:5"},"scope":3321,"src":"6215:704:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2226,"nodeType":"Block","src":"7340:3585:5","statements":[{"id":2225,"nodeType":"UncheckedBlock","src":"7350:3569:5","statements":[{"assignments":[2104,2106],"declarations":[{"constant":false,"id":2104,"mutability":"mutable","name":"high","nameLocation":"7383:4:5","nodeType":"VariableDeclaration","scope":2225,"src":"7375:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2106,"mutability":"mutable","name":"low","nameLocation":"7397:3:5","nodeType":"VariableDeclaration","scope":2225,"src":"7389:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2111,"initialValue":{"arguments":[{"id":2108,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"7411:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2109,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"7414:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2107,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"7404:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2112,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"7498:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2120,"nodeType":"IfStatement","src":"7494:365:5","trueBody":{"id":2119,"nodeType":"Block","src":"7509:350:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2115,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"7827:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2116,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"7833:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2102,"id":2118,"nodeType":"Return","src":"7820:24:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2121,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"7969:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2122,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"7984:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2139,"nodeType":"IfStatement","src":"7965:142:5","trueBody":{"id":2138,"nodeType":"Block","src":"7990:117:5","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"8028:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2131,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"8046:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"8046:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2133,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"8070:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:5","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":192,"src":"8070:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2127,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"8020:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2124,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"8008:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"8008:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2137,"nodeType":"ExpressionStatement","src":"8008:84:5"}]}},{"assignments":[2141],"declarations":[{"constant":false,"id":2141,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:5","nodeType":"VariableDeclaration","scope":2225,"src":"8359:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2140,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2142,"nodeType":"VariableDeclarationStatement","src":"8359:17:5"},{"AST":{"nodeType":"YulBlock","src":"8415:283:5","statements":[{"nodeType":"YulAssignment","src":"8484:38:5","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:5"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:5"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:5"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:5"},"nodeType":"YulFunctionCall","src":"8497:25:5"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:5"}]},{"nodeType":"YulAssignment","src":"8604:37:5","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:5"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:5"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:5"},"nodeType":"YulFunctionCall","src":"8622:18:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:5"},"nodeType":"YulFunctionCall","src":"8612:29:5"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:5"}]},{"nodeType":"YulAssignment","src":"8658:26:5","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:5"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:5"},"nodeType":"YulFunctionCall","src":"8665:19:5"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2098,"isOffset":false,"isSlot":false,"src":"8510:11:5","valueSize":1},{"declaration":2104,"isOffset":false,"isSlot":false,"src":"8604:4:5","valueSize":1},{"declaration":2104,"isOffset":false,"isSlot":false,"src":"8616:4:5","valueSize":1},{"declaration":2106,"isOffset":false,"isSlot":false,"src":"8636:3:5","valueSize":1},{"declaration":2106,"isOffset":false,"isSlot":false,"src":"8658:3:5","valueSize":1},{"declaration":2106,"isOffset":false,"isSlot":false,"src":"8669:3:5","valueSize":1},{"declaration":2141,"isOffset":false,"isSlot":false,"src":"8484:9:5","valueSize":1},{"declaration":2141,"isOffset":false,"isSlot":false,"src":"8625:9:5","valueSize":1},{"declaration":2141,"isOffset":false,"isSlot":false,"src":"8674:9:5","valueSize":1},{"declaration":2094,"isOffset":false,"isSlot":false,"src":"8504:1:5","valueSize":1},{"declaration":2096,"isOffset":false,"isSlot":false,"src":"8507:1:5","valueSize":1}],"flags":["memory-safe"],"id":2143,"nodeType":"InlineAssembly","src":"8390:308:5"},{"assignments":[2145],"declarations":[{"constant":false,"id":2145,"mutability":"mutable","name":"twos","nameLocation":"8910:4:5","nodeType":"VariableDeclaration","scope":2225,"src":"8902:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2152,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2146,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"8917:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2148,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"8936:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:5"},{"AST":{"nodeType":"YulBlock","src":"8987:359:5","statements":[{"nodeType":"YulAssignment","src":"9052:37:5","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:5"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:5"},"nodeType":"YulFunctionCall","src":"9067:22:5"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:5"}]},{"nodeType":"YulAssignment","src":"9153:21:5","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:5"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:5"},"nodeType":"YulFunctionCall","src":"9160:14:5"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:5"}]},{"nodeType":"YulAssignment","src":"9293:39:5","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:5","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:5"},"nodeType":"YulFunctionCall","src":"9309:12:5"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:5"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:5"},"nodeType":"YulFunctionCall","src":"9305:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:5","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:5"},"nodeType":"YulFunctionCall","src":"9301:31:5"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2098,"isOffset":false,"isSlot":false,"src":"9052:11:5","valueSize":1},{"declaration":2098,"isOffset":false,"isSlot":false,"src":"9071:11:5","valueSize":1},{"declaration":2106,"isOffset":false,"isSlot":false,"src":"9153:3:5","valueSize":1},{"declaration":2106,"isOffset":false,"isSlot":false,"src":"9164:3:5","valueSize":1},{"declaration":2145,"isOffset":false,"isSlot":false,"src":"9084:4:5","valueSize":1},{"declaration":2145,"isOffset":false,"isSlot":false,"src":"9169:4:5","valueSize":1},{"declaration":2145,"isOffset":false,"isSlot":false,"src":"9293:4:5","valueSize":1},{"declaration":2145,"isOffset":false,"isSlot":false,"src":"9316:4:5","valueSize":1},{"declaration":2145,"isOffset":false,"isSlot":false,"src":"9323:4:5","valueSize":1}],"flags":["memory-safe"],"id":2153,"nodeType":"InlineAssembly","src":"8962:384:5"},{"expression":{"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2154,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"9409:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2155,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2104,"src":"9416:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2156,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"9423:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2159,"nodeType":"ExpressionStatement","src":"9409:18:5"},{"assignments":[2161],"declarations":[{"constant":false,"id":2161,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:5","nodeType":"VariableDeclaration","scope":2225,"src":"9762:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2168,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2163,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"9785:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2165,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:5"},{"expression":{"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2169,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10018:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"10033:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2172,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10047:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2176,"nodeType":"ExpressionStatement","src":"10018:36:5"},{"expression":{"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2177,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10088:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2179,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"10103:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2180,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10117:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2184,"nodeType":"ExpressionStatement","src":"10088:36:5"},{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2185,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10160:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2187,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"10175:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2188,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10189:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2192,"nodeType":"ExpressionStatement","src":"10160:36:5"},{"expression":{"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2193,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10231:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"10246:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2196,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10260:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2200,"nodeType":"ExpressionStatement","src":"10231:36:5"},{"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2201,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10304:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"10319:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2204,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10333:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2208,"nodeType":"ExpressionStatement","src":"10304:36:5"},{"expression":{"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2209,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10378:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2211,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"10393:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2212,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10407:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2216,"nodeType":"ExpressionStatement","src":"10378:36:5"},{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"10859:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"10868:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2219,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10874:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"nodeType":"ExpressionStatement","src":"10859:22:5"},{"expression":{"id":2223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2101,"src":"10902:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2102,"id":2224,"nodeType":"Return","src":"10895:13:5"}]}]},"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"6925:312:5","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2227,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:5","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"x","nameLocation":"7266:1:5","nodeType":"VariableDeclaration","scope":2227,"src":"7258:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"y","nameLocation":"7277:1:5","nodeType":"VariableDeclaration","scope":2227,"src":"7269:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:5","nodeType":"VariableDeclaration","scope":2227,"src":"7280:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:5"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"result","nameLocation":"7332:6:5","nodeType":"VariableDeclaration","scope":2227,"src":"7324:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:5"},"scope":3321,"src":"7242:3683:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2263,"nodeType":"Block","src":"11164:128:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2243,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"11188:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2244,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"11191:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2245,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"11194:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2242,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2227,2264],"referencedDeclaration":2227,"src":"11181:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2250,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"11242:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}],"id":2249,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"11225:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1712_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2253,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"11262:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2254,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"11265:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2255,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"11268:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2252,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:5","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2247,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"11209:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"11209:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2241,"id":2262,"nodeType":"Return","src":"11174:111:5"}]},"documentation":{"id":2228,"nodeType":"StructuredDocumentation","src":"10931:118:5","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2264,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:5","nodeType":"FunctionDefinition","parameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"x","nameLocation":"11078:1:5","nodeType":"VariableDeclaration","scope":2264,"src":"11070:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2232,"mutability":"mutable","name":"y","nameLocation":"11089:1:5","nodeType":"VariableDeclaration","scope":2264,"src":"11081:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2231,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:5","nodeType":"VariableDeclaration","scope":2264,"src":"11092:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:5","nodeType":"VariableDeclaration","scope":2264,"src":"11113:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"},"typeName":{"id":2236,"nodeType":"UserDefinedTypeName","pathNode":{"id":2235,"name":"Rounding","nameLocations":["11113:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1712,"src":"11113:8:5"},"referencedDeclaration":1712,"src":"11113:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:5"},"returnParameters":{"id":2241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2264,"src":"11155:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:5"},"scope":3321,"src":"11054:238:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2313,"nodeType":"Block","src":"11500:245:5","statements":[{"id":2312,"nodeType":"UncheckedBlock","src":"11510:229:5","statements":[{"assignments":[2277,2279],"declarations":[{"constant":false,"id":2277,"mutability":"mutable","name":"high","nameLocation":"11543:4:5","nodeType":"VariableDeclaration","scope":2312,"src":"11535:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"low","nameLocation":"11557:3:5","nodeType":"VariableDeclaration","scope":2312,"src":"11549:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2284,"initialValue":{"arguments":[{"id":2281,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"11571:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2282,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"11574:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2280,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"11564:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"11594:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2287,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"11607:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2298,"nodeType":"IfStatement","src":"11590:86:5","trueBody":{"id":2297,"nodeType":"Block","src":"11610:66:5","statements":[{"expression":{"arguments":[{"expression":{"id":2293,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"11640:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:5","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":192,"src":"11640:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2290,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"11628:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"11628:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2296,"nodeType":"ExpressionStatement","src":"11628:33:5"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2299,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"11697:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2301,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"11712:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":2303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2306,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"11719:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2307,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"11726:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2275,"id":2311,"nodeType":"Return","src":"11689:39:5"}]}]},"documentation":{"id":2265,"nodeType":"StructuredDocumentation","src":"11298:111:5","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":2314,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:5","nodeType":"FunctionDefinition","parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"x","nameLocation":"11438:1:5","nodeType":"VariableDeclaration","scope":2314,"src":"11430:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"y","nameLocation":"11449:1:5","nodeType":"VariableDeclaration","scope":2314,"src":"11441:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"n","nameLocation":"11458:1:5","nodeType":"VariableDeclaration","scope":2314,"src":"11452:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2270,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:5"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"result","nameLocation":"11492:6:5","nodeType":"VariableDeclaration","scope":2314,"src":"11484:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:5"},"scope":3321,"src":"11414:331:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2352,"nodeType":"Block","src":"11963:113:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2330,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"11987:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2331,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"11990:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2332,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"11993:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2329,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[2314,2353],"referencedDeclaration":2314,"src":"11980:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2337,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"12031:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}],"id":2336,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"12014:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1712_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2340,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"12051:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2341,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"12054:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2343,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"12062:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2339,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:5","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2334,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"11998:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"11998:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2328,"id":2351,"nodeType":"Return","src":"11973:96:5"}]},"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"11751:109:5","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":2353,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:5","nodeType":"FunctionDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"x","nameLocation":"11889:1:5","nodeType":"VariableDeclaration","scope":2353,"src":"11881:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"y","nameLocation":"11900:1:5","nodeType":"VariableDeclaration","scope":2353,"src":"11892:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"n","nameLocation":"11909:1:5","nodeType":"VariableDeclaration","scope":2353,"src":"11903:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2320,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:5","nodeType":"VariableDeclaration","scope":2353,"src":"11912:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"},"typeName":{"id":2323,"nodeType":"UserDefinedTypeName","pathNode":{"id":2322,"name":"Rounding","nameLocations":["11912:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1712,"src":"11912:8:5"},"referencedDeclaration":1712,"src":"11912:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:5"},"returnParameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2353,"src":"11954:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:5"},"scope":3321,"src":"11865:211:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2449,"nodeType":"Block","src":"12710:1849:5","statements":[{"id":2448,"nodeType":"UncheckedBlock","src":"12720:1833:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2363,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"12748:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2368,"nodeType":"IfStatement","src":"12744:20:5","trueBody":{"expression":{"hexValue":"30","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2362,"id":2367,"nodeType":"Return","src":"12756:8:5"}},{"assignments":[2370],"declarations":[{"constant":false,"id":2370,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:5","nodeType":"VariableDeclaration","scope":2448,"src":"13235:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2374,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"13255:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2372,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"13259:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:5"},{"assignments":[2376],"declarations":[{"constant":false,"id":2376,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:5","nodeType":"VariableDeclaration","scope":2448,"src":"13274:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2378,"initialValue":{"id":2377,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"13288:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:5"},{"assignments":[2380],"declarations":[{"constant":false,"id":2380,"mutability":"mutable","name":"x","nameLocation":"13432:1:5","nodeType":"VariableDeclaration","scope":2448,"src":"13425:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2379,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2382,"initialValue":{"hexValue":"30","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:5"},{"assignments":[2384],"declarations":[{"constant":false,"id":2384,"mutability":"mutable","name":"y","nameLocation":"13458:1:5","nodeType":"VariableDeclaration","scope":2448,"src":"13451:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2383,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2386,"initialValue":{"hexValue":"31","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:5"},{"body":{"id":2423,"nodeType":"Block","src":"13501:882:5","statements":[{"assignments":[2391],"declarations":[{"constant":false,"id":2391,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:5","nodeType":"VariableDeclaration","scope":2423,"src":"13519:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2395,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2392,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"13538:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2393,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"13544:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:5"},{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2396,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"13573:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2397,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"13578:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2398,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2399,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"13678:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2400,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"13923:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2401,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"13929:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2402,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"13941:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:5","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2407,"nodeType":"ExpressionStatement","src":"13572:395:5"},{"expression":{"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2408,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"13987:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2409,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"13990:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2410,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2411,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"14072:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2412,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"14326:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2413,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"14330:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2416,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"14341:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2414,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:5","typeDescriptions":{}}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:5","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2422,"nodeType":"ExpressionStatement","src":"13986:382:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"13485:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2424,"nodeType":"WhileStatement","src":"13478:905:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"14401:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2430,"nodeType":"IfStatement","src":"14397:22:5","trueBody":{"expression":{"hexValue":"30","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2362,"id":2429,"nodeType":"Return","src":"14411:8:5"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"14470:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"14477:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:5","subExpression":{"id":2438,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"14490:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:5","typeDescriptions":{}}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2444,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"14502:1:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:5","typeDescriptions":{}}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2431,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"14462:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2362,"id":2447,"nodeType":"Return","src":"14455:50:5"}]}]},"documentation":{"id":2354,"nodeType":"StructuredDocumentation","src":"12082:553:5","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":2450,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:5","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"a","nameLocation":"12664:1:5","nodeType":"VariableDeclaration","scope":2450,"src":"12656:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"n","nameLocation":"12675:1:5","nodeType":"VariableDeclaration","scope":2450,"src":"12667:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:5"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2450,"src":"12701:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:5"},"scope":3321,"src":"12640:1919:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2470,"nodeType":"Block","src":"15159:82:5","statements":[{"id":2469,"nodeType":"UncheckedBlock","src":"15169:66:5","statements":[{"expression":{"arguments":[{"id":2462,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"15212:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2463,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"15215:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2466,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"15222:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2460,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"15200:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3321_$","typeString":"type(library Math)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:5","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":2507,"src":"15200:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2459,"id":2468,"nodeType":"Return","src":"15193:31:5"}]}]},"documentation":{"id":2451,"nodeType":"StructuredDocumentation","src":"14565:514:5","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":2471,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:5","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2453,"mutability":"mutable","name":"a","nameLocation":"15113:1:5","nodeType":"VariableDeclaration","scope":2471,"src":"15105:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"p","nameLocation":"15124:1:5","nodeType":"VariableDeclaration","scope":2471,"src":"15116:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:5"},"returnParameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2471,"src":"15150:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:5"},"scope":3321,"src":"15084:157:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2506,"nodeType":"Block","src":"16011:174:5","statements":[{"assignments":[2484,2486],"declarations":[{"constant":false,"id":2484,"mutability":"mutable","name":"success","nameLocation":"16027:7:5","nodeType":"VariableDeclaration","scope":2506,"src":"16022:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2483,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"result","nameLocation":"16044:6:5","nodeType":"VariableDeclaration","scope":2506,"src":"16036:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2492,"initialValue":{"arguments":[{"id":2488,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2474,"src":"16064:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2489,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"16067:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2490,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"16070:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2487,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2531,2613],"referencedDeclaration":2531,"src":"16054:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:5"},{"condition":{"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:5","subExpression":{"id":2493,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"16087:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2503,"nodeType":"IfStatement","src":"16082:74:5","trueBody":{"id":2502,"nodeType":"Block","src":"16096:60:5","statements":[{"expression":{"arguments":[{"expression":{"id":2498,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"16122:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"16122:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2495,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"16110:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"16110:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2501,"nodeType":"ExpressionStatement","src":"16110:35:5"}]}},{"expression":{"id":2504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"16172:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2482,"id":2505,"nodeType":"Return","src":"16165:13:5"}]},"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"15247:678:5","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":2507,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:5","nodeType":"FunctionDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"b","nameLocation":"15954:1:5","nodeType":"VariableDeclaration","scope":2507,"src":"15946:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2476,"mutability":"mutable","name":"e","nameLocation":"15965:1:5","nodeType":"VariableDeclaration","scope":2507,"src":"15957:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2478,"mutability":"mutable","name":"m","nameLocation":"15976:1:5","nodeType":"VariableDeclaration","scope":2507,"src":"15968:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2477,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:5"},"returnParameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2507,"src":"16002:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:5"},"scope":3321,"src":"15930:255:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2530,"nodeType":"Block","src":"17039:1493:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2521,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"17053:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2528,"nodeType":"IfStatement","src":"17049:29:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2520,"id":2527,"nodeType":"Return","src":"17061:17:5"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:5","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:5"},"nodeType":"YulFunctionCall","src":"17138:11:5"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:5","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:5"},"nodeType":"YulFunctionCall","src":"18050:17:5"},"nodeType":"YulExpressionStatement","src":"18050:17:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:5"},"nodeType":"YulFunctionCall","src":"18087:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:5","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:5"},"nodeType":"YulFunctionCall","src":"18080:28:5"},"nodeType":"YulExpressionStatement","src":"18080:28:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:5"},"nodeType":"YulFunctionCall","src":"18128:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:5","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:5"},"nodeType":"YulFunctionCall","src":"18121:28:5"},"nodeType":"YulExpressionStatement","src":"18121:28:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:5"},"nodeType":"YulFunctionCall","src":"18169:14:5"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:5"},"nodeType":"YulFunctionCall","src":"18162:25:5"},"nodeType":"YulExpressionStatement","src":"18162:25:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:5"},"nodeType":"YulFunctionCall","src":"18207:14:5"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:5"},"nodeType":"YulFunctionCall","src":"18200:25:5"},"nodeType":"YulExpressionStatement","src":"18200:25:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:5"},"nodeType":"YulFunctionCall","src":"18245:14:5"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:5"},"nodeType":"YulFunctionCall","src":"18238:25:5"},"nodeType":"YulExpressionStatement","src":"18238:25:5"},{"nodeType":"YulAssignment","src":"18425:57:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:5"},"nodeType":"YulFunctionCall","src":"18447:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:5","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:5","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:5","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:5"},"nodeType":"YulFunctionCall","src":"18436:46:5"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:5"}]},{"nodeType":"YulAssignment","src":"18495:21:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:5","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:5"},"nodeType":"YulFunctionCall","src":"18505:11:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2510,"isOffset":false,"isSlot":false,"src":"18185:1:5","valueSize":1},{"declaration":2512,"isOffset":false,"isSlot":false,"src":"18223:1:5","valueSize":1},{"declaration":2514,"isOffset":false,"isSlot":false,"src":"18261:1:5","valueSize":1},{"declaration":2519,"isOffset":false,"isSlot":false,"src":"18495:6:5","valueSize":1},{"declaration":2517,"isOffset":false,"isSlot":false,"src":"18425:7:5","valueSize":1}],"flags":["memory-safe"],"id":2529,"nodeType":"InlineAssembly","src":"17088:1438:5"}]},"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"16191:738:5","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":2531,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:5","nodeType":"FunctionDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"b","nameLocation":"16961:1:5","nodeType":"VariableDeclaration","scope":2531,"src":"16953:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"e","nameLocation":"16972:1:5","nodeType":"VariableDeclaration","scope":2531,"src":"16964:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"m","nameLocation":"16983:1:5","nodeType":"VariableDeclaration","scope":2531,"src":"16975:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:5"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2517,"mutability":"mutable","name":"success","nameLocation":"17014:7:5","nodeType":"VariableDeclaration","scope":2531,"src":"17009:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2516,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"result","nameLocation":"17031:6:5","nodeType":"VariableDeclaration","scope":2531,"src":"17023:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:5"},"scope":3321,"src":"16934:1598:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2566,"nodeType":"Block","src":"18729:179:5","statements":[{"assignments":[2544,2546],"declarations":[{"constant":false,"id":2544,"mutability":"mutable","name":"success","nameLocation":"18745:7:5","nodeType":"VariableDeclaration","scope":2566,"src":"18740:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2543,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"result","nameLocation":"18767:6:5","nodeType":"VariableDeclaration","scope":2566,"src":"18754:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2545,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2552,"initialValue":{"arguments":[{"id":2548,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"18787:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2549,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"18790:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2550,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"18793:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2547,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2531,2613],"referencedDeclaration":2613,"src":"18777:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:5"},{"condition":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:5","subExpression":{"id":2553,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"18810:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2563,"nodeType":"IfStatement","src":"18805:74:5","trueBody":{"id":2562,"nodeType":"Block","src":"18819:60:5","statements":[{"expression":{"arguments":[{"expression":{"id":2558,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"18845:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:5","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"18845:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2555,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"18833:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:5","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"18833:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2561,"nodeType":"ExpressionStatement","src":"18833:35:5"}]}},{"expression":{"id":2564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"18895:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2542,"id":2565,"nodeType":"Return","src":"18888:13:5"}]},"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"18538:85:5","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":2567,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:5","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"b","nameLocation":"18657:1:5","nodeType":"VariableDeclaration","scope":2567,"src":"18644:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2533,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"e","nameLocation":"18673:1:5","nodeType":"VariableDeclaration","scope":2567,"src":"18660:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2535,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"m","nameLocation":"18689:1:5","nodeType":"VariableDeclaration","scope":2567,"src":"18676:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2537,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:5"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2567,"src":"18715:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2540,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:5"},"scope":3321,"src":"18628:280:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2612,"nodeType":"Block","src":"19162:771:5","statements":[{"condition":{"arguments":[{"id":2582,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"19187:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2581,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"19176:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2591,"nodeType":"IfStatement","src":"19172:47:5","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2585,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":2589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":2580,"id":2590,"nodeType":"Return","src":"19191:28:5"}},{"assignments":[2593],"declarations":[{"constant":false,"id":2593,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:5","nodeType":"VariableDeclaration","scope":2612,"src":"19230:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2596,"initialValue":{"expression":{"id":2594,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"19245:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:5","memberName":"length","nodeType":"MemberAccess","src":"19245:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:5"},{"expression":{"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"19335:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"19361:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:5","memberName":"length","nodeType":"MemberAccess","src":"19361:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2602,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"19371:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:5","memberName":"length","nodeType":"MemberAccess","src":"19371:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2604,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"19381:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"19387:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2606,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"19390:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2607,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"19393:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2598,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2610,"nodeType":"ExpressionStatement","src":"19335:60:5"},{"AST":{"nodeType":"YulBlock","src":"19431:496:5","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:5","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:5"},"nodeType":"YulFunctionCall","src":"19460:17:5"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:5","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:5"},"nodeType":"YulFunctionCall","src":"19589:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:5","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:5"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:5"},"nodeType":"YulFunctionCall","src":"19611:13:5"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:5"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:5"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:5"},"nodeType":"YulFunctionCall","src":"19578:62:5"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:5"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:5"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:5"},"nodeType":"YulFunctionCall","src":"19789:20:5"},"nodeType":"YulExpressionStatement","src":"19789:20:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:5","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:5"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:5"},"nodeType":"YulFunctionCall","src":"19898:18:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:5"},"nodeType":"YulFunctionCall","src":"19885:32:5"},"nodeType":"YulExpressionStatement","src":"19885:32:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":2593,"isOffset":false,"isSlot":false,"src":"19635:4:5","valueSize":1},{"declaration":2593,"isOffset":false,"isSlot":false,"src":"19804:4:5","valueSize":1},{"declaration":2593,"isOffset":false,"isSlot":false,"src":"19911:4:5","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"19464:6:5","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"19617:6:5","valueSize":1},{"declaration":2579,"isOffset":false,"isSlot":false,"src":"19796:6:5","valueSize":1},{"declaration":2577,"isOffset":false,"isSlot":false,"src":"19567:7:5","valueSize":1}],"flags":["memory-safe"],"id":2611,"nodeType":"InlineAssembly","src":"19406:521:5"}]},"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"18914:88:5","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":2613,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:5","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"b","nameLocation":"19048:1:5","nodeType":"VariableDeclaration","scope":2613,"src":"19035:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2569,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"e","nameLocation":"19072:1:5","nodeType":"VariableDeclaration","scope":2613,"src":"19059:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2571,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"m","nameLocation":"19096:1:5","nodeType":"VariableDeclaration","scope":2613,"src":"19083:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2573,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:5"},"returnParameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"success","nameLocation":"19132:7:5","nodeType":"VariableDeclaration","scope":2613,"src":"19127:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2576,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"result","nameLocation":"19154:6:5","nodeType":"VariableDeclaration","scope":2613,"src":"19141:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2578,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:5"},"scope":3321,"src":"19007:926:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2645,"nodeType":"Block","src":"20088:176:5","statements":[{"body":{"id":2641,"nodeType":"Block","src":"20145:92:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2632,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"20163:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2634,"indexExpression":{"id":2633,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"20173:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2640,"nodeType":"IfStatement","src":"20159:68:5","trueBody":{"id":2639,"nodeType":"Block","src":"20182:45:5","statements":[{"expression":{"hexValue":"66616c7365","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2620,"id":2638,"nodeType":"Return","src":"20200:12:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2625,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"20118:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2626,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"20122:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:5","memberName":"length","nodeType":"MemberAccess","src":"20122:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2642,"initializationExpression":{"assignments":[2622],"declarations":[{"constant":false,"id":2622,"mutability":"mutable","name":"i","nameLocation":"20111:1:5","nodeType":"VariableDeclaration","scope":2642,"src":"20103:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2621,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2624,"initialValue":{"hexValue":"30","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:5"},"loopExpression":{"expression":{"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:5","subExpression":{"id":2629,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"20142:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2631,"nodeType":"ExpressionStatement","src":"20140:3:5"},"nodeType":"ForStatement","src":"20098:139:5"},{"expression":{"hexValue":"74727565","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2620,"id":2644,"nodeType":"Return","src":"20246:11:5"}]},"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"19939:72:5","text":" @dev Returns whether the provided byte array is zero."},"id":2646,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:5","nodeType":"FunctionDefinition","parameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:5","nodeType":"VariableDeclaration","scope":2646,"src":"20036:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2615,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:5"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2646,"src":"20082:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2618,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:5"},"scope":3321,"src":"20016:248:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2864,"nodeType":"Block","src":"20624:5124:5","statements":[{"id":2863,"nodeType":"UncheckedBlock","src":"20634:5108:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"20728:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2660,"nodeType":"IfStatement","src":"20724:53:5","trueBody":{"id":2659,"nodeType":"Block","src":"20736:41:5","statements":[{"expression":{"id":2657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"20761:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2653,"id":2658,"nodeType":"Return","src":"20754:8:5"}]}},{"assignments":[2662],"declarations":[{"constant":false,"id":2662,"mutability":"mutable","name":"aa","nameLocation":"21712:2:5","nodeType":"VariableDeclaration","scope":2863,"src":"21704:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2664,"initialValue":{"id":2663,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"21717:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:5"},{"assignments":[2666],"declarations":[{"constant":false,"id":2666,"mutability":"mutable","name":"xn","nameLocation":"21740:2:5","nodeType":"VariableDeclaration","scope":2863,"src":"21732:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2665,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2668,"initialValue":{"hexValue":"31","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"21765:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2684,"nodeType":"IfStatement","src":"21761:92:5","trueBody":{"id":2683,"nodeType":"Block","src":"21783:70:5","statements":[{"expression":{"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2675,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"21801:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2678,"nodeType":"ExpressionStatement","src":"21801:10:5"},{"expression":{"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2679,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"21829:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2682,"nodeType":"ExpressionStatement","src":"21829:9:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2685,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"21870:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2700,"nodeType":"IfStatement","src":"21866:90:5","trueBody":{"id":2699,"nodeType":"Block","src":"21887:69:5","statements":[{"expression":{"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2691,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"21905:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2694,"nodeType":"ExpressionStatement","src":"21905:9:5"},{"expression":{"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2695,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"21932:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2698,"nodeType":"ExpressionStatement","src":"21932:9:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2701,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"21973:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2716,"nodeType":"IfStatement","src":"21969:90:5","trueBody":{"id":2715,"nodeType":"Block","src":"21990:69:5","statements":[{"expression":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2707,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"22008:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2710,"nodeType":"ExpressionStatement","src":"22008:9:5"},{"expression":{"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2711,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"22035:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2714,"nodeType":"ExpressionStatement","src":"22035:9:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"22076:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:5","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2732,"nodeType":"IfStatement","src":"22072:89:5","trueBody":{"id":2731,"nodeType":"Block","src":"22093:68:5","statements":[{"expression":{"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2723,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"22111:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2726,"nodeType":"ExpressionStatement","src":"22111:9:5"},{"expression":{"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2727,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"22138:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2730,"nodeType":"ExpressionStatement","src":"22138:8:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2733,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"22178:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2748,"nodeType":"IfStatement","src":"22174:87:5","trueBody":{"id":2747,"nodeType":"Block","src":"22194:67:5","statements":[{"expression":{"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2739,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"22212:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2742,"nodeType":"ExpressionStatement","src":"22212:8:5"},{"expression":{"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2743,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"22238:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2746,"nodeType":"ExpressionStatement","src":"22238:8:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2749,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"22278:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2764,"nodeType":"IfStatement","src":"22274:87:5","trueBody":{"id":2763,"nodeType":"Block","src":"22294:67:5","statements":[{"expression":{"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2755,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"22312:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2758,"nodeType":"ExpressionStatement","src":"22312:8:5"},{"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2759,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"22338:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2762,"nodeType":"ExpressionStatement","src":"22338:8:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2765,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"22378:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2776,"nodeType":"IfStatement","src":"22374:61:5","trueBody":{"id":2775,"nodeType":"Block","src":"22394:41:5","statements":[{"expression":{"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2771,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"22412:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2774,"nodeType":"ExpressionStatement","src":"22412:8:5"}]}},{"expression":{"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2777,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"22855:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2779,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"22865:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2781,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2785,"nodeType":"ExpressionStatement","src":"22855:18:5"},{"expression":{"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2786,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"24760:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"24766:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2788,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"24771:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2789,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"24775:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2796,"nodeType":"ExpressionStatement","src":"24760:23:5"},{"expression":{"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2797,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"24869:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2798,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"24875:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"24880:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2800,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"24884:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2807,"nodeType":"ExpressionStatement","src":"24869:23:5"},{"expression":{"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2808,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"24980:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2809,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"24986:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"24991:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2811,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"24995:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2818,"nodeType":"ExpressionStatement","src":"24980:23:5"},{"expression":{"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2819,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25089:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2820,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25095:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"25100:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2822,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25104:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2829,"nodeType":"ExpressionStatement","src":"25089:23:5"},{"expression":{"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2830,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25199:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2831,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25205:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2832,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"25210:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2833,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25214:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2840,"nodeType":"ExpressionStatement","src":"25199:23:5"},{"expression":{"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2841,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25309:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2842,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25315:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2843,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"25320:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2844,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25324:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2851,"nodeType":"ExpressionStatement","src":"25309:23:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2852,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25698:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25719:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"25724:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2857,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"25728:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2853,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"25703:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"25703:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2653,"id":2862,"nodeType":"Return","src":"25691:40:5"}]}]},"documentation":{"id":2647,"nodeType":"StructuredDocumentation","src":"20270:292:5","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2865,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:5","nodeType":"FunctionDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"a","nameLocation":"20589:1:5","nodeType":"VariableDeclaration","scope":2865,"src":"20581:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:5"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2865,"src":"20615:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:5"},"scope":3321,"src":"20567:5181:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2898,"nodeType":"Block","src":"25921:171:5","statements":[{"id":2897,"nodeType":"UncheckedBlock","src":"25931:155:5","statements":[{"assignments":[2877],"declarations":[{"constant":false,"id":2877,"mutability":"mutable","name":"result","nameLocation":"25963:6:5","nodeType":"VariableDeclaration","scope":2897,"src":"25955:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2881,"initialValue":{"arguments":[{"id":2879,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"25977:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2878,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2865,2899],"referencedDeclaration":2865,"src":"25972:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"26000:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2886,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"26042:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}],"id":2885,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"26025:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1712_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"26055:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"26064:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2891,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"26073:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2883,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"26009:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"26009:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2875,"id":2896,"nodeType":"Return","src":"25993:82:5"}]}]},"documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"25754:86:5","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2899,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:5","nodeType":"FunctionDefinition","parameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"a","nameLocation":"25867:1:5","nodeType":"VariableDeclaration","scope":2899,"src":"25859:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2871,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:5","nodeType":"VariableDeclaration","scope":2899,"src":"25870:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"},"typeName":{"id":2870,"nodeType":"UserDefinedTypeName","pathNode":{"id":2869,"name":"Rounding","nameLocations":["25870:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1712,"src":"25870:8:5"},"referencedDeclaration":1712,"src":"25870:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:5"},"returnParameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2899,"src":"25912:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:5"},"scope":3321,"src":"25845:247:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2989,"nodeType":"Block","src":"26281:2334:5","statements":[{"expression":{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2907,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"26363:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"26383:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2908,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"26367:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"26367:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:5","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2917,"nodeType":"ExpressionStatement","src":"26363:64:5"},{"expression":{"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2918,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"26503:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"26525:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2922,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"26530:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2919,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"26508:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"26508:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:5","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2931,"nodeType":"ExpressionStatement","src":"26503:56:5"},{"expression":{"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2932,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"26634:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2935,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"26656:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2936,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"26661:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2933,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"26639:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"26639:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:5","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2945,"nodeType":"ExpressionStatement","src":"26634:48:5"},{"expression":{"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2946,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"26757:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"26779:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2950,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"26784:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:5","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2947,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"26762:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"26762:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2959,"nodeType":"ExpressionStatement","src":"26757:44:5"},{"expression":{"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2960,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"26874:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2963,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"26896:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2964,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"26901:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2961,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"26879:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"26879:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2973,"nodeType":"ExpressionStatement","src":"26874:42:5"},{"expression":{"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2974,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"26988:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"27010:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2978,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"27015:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:5","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2975,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"26993:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"26993:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2987,"nodeType":"ExpressionStatement","src":"26988:41:5"},{"AST":{"nodeType":"YulBlock","src":"28490:119:5","statements":[{"nodeType":"YulAssignment","src":"28504:95:5","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:5"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:5"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:5"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:5"},"nodeType":"YulFunctionCall","src":"28520:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:5","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:5"},"nodeType":"YulFunctionCall","src":"28515:83:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:5"},"nodeType":"YulFunctionCall","src":"28509:90:5"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2905,"isOffset":false,"isSlot":false,"src":"28504:1:5","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"28512:1:5","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"28524:1:5","valueSize":1},{"declaration":2902,"isOffset":false,"isSlot":false,"src":"28527:1:5","valueSize":1}],"flags":["memory-safe"],"id":2988,"nodeType":"InlineAssembly","src":"28465:144:5"}]},"documentation":{"id":2900,"nodeType":"StructuredDocumentation","src":"26098:119:5","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2990,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:5","nodeType":"FunctionDefinition","parameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"x","nameLocation":"26244:1:5","nodeType":"VariableDeclaration","scope":2990,"src":"26236:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:5"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"r","nameLocation":"26278:1:5","nodeType":"VariableDeclaration","scope":2990,"src":"26270:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:5"},"scope":3321,"src":"26222:2393:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3023,"nodeType":"Block","src":"28848:175:5","statements":[{"id":3022,"nodeType":"UncheckedBlock","src":"28858:159:5","statements":[{"assignments":[3002],"declarations":[{"constant":false,"id":3002,"mutability":"mutable","name":"result","nameLocation":"28890:6:5","nodeType":"VariableDeclaration","scope":3022,"src":"28882:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3006,"initialValue":{"arguments":[{"id":3004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"28904:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3003,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2990,3024],"referencedDeclaration":2990,"src":"28899:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"28931:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3011,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"28973:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}],"id":3010,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"28956:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1712_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3014,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"28991:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"29000:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3008,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"28940:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"28940:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3000,"id":3021,"nodeType":"Return","src":"28924:82:5"}]}]},"documentation":{"id":2991,"nodeType":"StructuredDocumentation","src":"28621:142:5","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3024,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:5","nodeType":"FunctionDefinition","parameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"value","nameLocation":"28790:5:5","nodeType":"VariableDeclaration","scope":3024,"src":"28782:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2996,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:5","nodeType":"VariableDeclaration","scope":3024,"src":"28797:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"},"typeName":{"id":2995,"nodeType":"UserDefinedTypeName","pathNode":{"id":2994,"name":"Rounding","nameLocations":["28797:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1712,"src":"28797:8:5"},"referencedDeclaration":1712,"src":"28797:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:5"},"returnParameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3024,"src":"28839:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:5"},"scope":3321,"src":"28768:255:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3152,"nodeType":"Block","src":"29216:854:5","statements":[{"assignments":[3033],"declarations":[{"constant":false,"id":3033,"mutability":"mutable","name":"result","nameLocation":"29234:6:5","nodeType":"VariableDeclaration","scope":3152,"src":"29226:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3032,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3035,"initialValue":{"hexValue":"30","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:5"},{"id":3149,"nodeType":"UncheckedBlock","src":"29254:787:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29282:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3052,"nodeType":"IfStatement","src":"29278:103:5","trueBody":{"id":3051,"nodeType":"Block","src":"29301:80:5","statements":[{"expression":{"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29319:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3046,"nodeType":"ExpressionStatement","src":"29319:17:5"},{"expression":{"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3047,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"29354:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3050,"nodeType":"ExpressionStatement","src":"29354:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29398:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3069,"nodeType":"IfStatement","src":"29394:103:5","trueBody":{"id":3068,"nodeType":"Block","src":"29417:80:5","statements":[{"expression":{"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29435:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3063,"nodeType":"ExpressionStatement","src":"29435:17:5"},{"expression":{"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"29470:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3067,"nodeType":"ExpressionStatement","src":"29470:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29514:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3086,"nodeType":"IfStatement","src":"29510:103:5","trueBody":{"id":3085,"nodeType":"Block","src":"29533:80:5","statements":[{"expression":{"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29551:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:5","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3080,"nodeType":"ExpressionStatement","src":"29551:17:5"},{"expression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3081,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"29586:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3084,"nodeType":"ExpressionStatement","src":"29586:12:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29630:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3103,"nodeType":"IfStatement","src":"29626:100:5","trueBody":{"id":3102,"nodeType":"Block","src":"29648:78:5","statements":[{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29666:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3097,"nodeType":"ExpressionStatement","src":"29666:16:5"},{"expression":{"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3098,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"29700:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3101,"nodeType":"ExpressionStatement","src":"29700:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29743:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3120,"nodeType":"IfStatement","src":"29739:100:5","trueBody":{"id":3119,"nodeType":"Block","src":"29761:78:5","statements":[{"expression":{"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29779:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3114,"nodeType":"ExpressionStatement","src":"29779:16:5"},{"expression":{"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3115,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"29813:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3118,"nodeType":"ExpressionStatement","src":"29813:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29856:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3137,"nodeType":"IfStatement","src":"29852:100:5","trueBody":{"id":3136,"nodeType":"Block","src":"29874:78:5","statements":[{"expression":{"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29892:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:5","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3131,"nodeType":"ExpressionStatement","src":"29892:16:5"},{"expression":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"29926:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3135,"nodeType":"ExpressionStatement","src":"29926:11:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"29969:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3148,"nodeType":"IfStatement","src":"29965:66:5","trueBody":{"id":3147,"nodeType":"Block","src":"29987:44:5","statements":[{"expression":{"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"30005:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3146,"nodeType":"ExpressionStatement","src":"30005:11:5"}]}}]},{"expression":{"id":3150,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"30057:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3031,"id":3151,"nodeType":"Return","src":"30050:13:5"}]},"documentation":{"id":3025,"nodeType":"StructuredDocumentation","src":"29029:120:5","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3153,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:5","nodeType":"FunctionDefinition","parameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"value","nameLocation":"29177:5:5","nodeType":"VariableDeclaration","scope":3153,"src":"29169:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:5"},"returnParameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3153,"src":"29207:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:5"},"scope":3321,"src":"29154:916:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3186,"nodeType":"Block","src":"30305:177:5","statements":[{"id":3185,"nodeType":"UncheckedBlock","src":"30315:161:5","statements":[{"assignments":[3165],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"result","nameLocation":"30347:6:5","nodeType":"VariableDeclaration","scope":3185,"src":"30339:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3169,"initialValue":{"arguments":[{"id":3167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"30362:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3166,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3153,3187],"referencedDeclaration":3153,"src":"30356:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"30389:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3174,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"30431:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}],"id":3173,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"30414:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1712_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3177,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"30450:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"30459:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3171,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"30398:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"30398:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3163,"id":3184,"nodeType":"Return","src":"30382:83:5"}]}]},"documentation":{"id":3154,"nodeType":"StructuredDocumentation","src":"30076:143:5","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3187,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:5","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"value","nameLocation":"30247:5:5","nodeType":"VariableDeclaration","scope":3187,"src":"30239:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:5","nodeType":"VariableDeclaration","scope":3187,"src":"30254:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"},"typeName":{"id":3158,"nodeType":"UserDefinedTypeName","pathNode":{"id":3157,"name":"Rounding","nameLocations":["30254:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1712,"src":"30254:8:5"},"referencedDeclaration":1712,"src":"30254:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:5"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3187,"src":"30296:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:5"},"scope":3321,"src":"30224:258:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3263,"nodeType":"Block","src":"30800:675:5","statements":[{"expression":{"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3195,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"30882:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3198,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"30902:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:5","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3196,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"30886:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"30886:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:5","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3205,"nodeType":"ExpressionStatement","src":"30882:64:5"},{"expression":{"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3206,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"31022:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"31044:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3210,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"31049:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:5","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3207,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"31027:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"31027:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:5","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3219,"nodeType":"ExpressionStatement","src":"31022:56:5"},{"expression":{"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3220,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"31153:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3223,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"31175:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3224,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"31180:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:5","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3221,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"31158:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"31158:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:5","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3233,"nodeType":"ExpressionStatement","src":"31153:48:5"},{"expression":{"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3234,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"31276:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"31298:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3238,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"31303:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:5","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3235,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"31281:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"31281:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3247,"nodeType":"ExpressionStatement","src":"31276:44:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"31426:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3254,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"31453:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3255,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"31458:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:5","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3252,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"31436:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"31436:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3194,"id":3262,"nodeType":"Return","src":"31418:50:5"}]},"documentation":{"id":3188,"nodeType":"StructuredDocumentation","src":"30488:246:5","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3264,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:5","nodeType":"FunctionDefinition","parameters":{"id":3191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3190,"mutability":"mutable","name":"x","nameLocation":"30763:1:5","nodeType":"VariableDeclaration","scope":3264,"src":"30755:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:5"},"returnParameters":{"id":3194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3193,"mutability":"mutable","name":"r","nameLocation":"30797:1:5","nodeType":"VariableDeclaration","scope":3264,"src":"30789:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:5"},"scope":3321,"src":"30739:736:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3300,"nodeType":"Block","src":"31712:184:5","statements":[{"id":3299,"nodeType":"UncheckedBlock","src":"31722:168:5","statements":[{"assignments":[3276],"declarations":[{"constant":false,"id":3276,"mutability":"mutable","name":"result","nameLocation":"31754:6:5","nodeType":"VariableDeclaration","scope":3299,"src":"31746:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3280,"initialValue":{"arguments":[{"id":3278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"31770:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3277,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3264,3301],"referencedDeclaration":3264,"src":"31763:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"31797:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3285,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"31839:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}],"id":3284,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"31822:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1712_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"31858:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"31873:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3282,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"31806:8:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:5","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"31806:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3274,"id":3298,"nodeType":"Return","src":"31790:89:5"}]}]},"documentation":{"id":3265,"nodeType":"StructuredDocumentation","src":"31481:144:5","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3301,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:5","nodeType":"FunctionDefinition","parameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"value","nameLocation":"31654:5:5","nodeType":"VariableDeclaration","scope":3301,"src":"31646:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3270,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:5","nodeType":"VariableDeclaration","scope":3301,"src":"31661:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"},"typeName":{"id":3269,"nodeType":"UserDefinedTypeName","pathNode":{"id":3268,"name":"Rounding","nameLocations":["31661:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1712,"src":"31661:8:5"},"referencedDeclaration":1712,"src":"31661:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:5"},"returnParameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3301,"src":"31703:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:5"},"scope":3321,"src":"31630:266:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3319,"nodeType":"Block","src":"32094:48:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3312,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"32117:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}],"id":3311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3310,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:5","typeDescriptions":{}}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3309,"id":3318,"nodeType":"Return","src":"32104:31:5"}]},"documentation":{"id":3302,"nodeType":"StructuredDocumentation","src":"31902:113:5","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3320,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:5","nodeType":"FunctionDefinition","parameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:5","nodeType":"VariableDeclaration","scope":3320,"src":"32046:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"},"typeName":{"id":3304,"nodeType":"UserDefinedTypeName","pathNode":{"id":3303,"name":"Rounding","nameLocations":["32046:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1712,"src":"32046:8:5"},"referencedDeclaration":1712,"src":"32046:8:5","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1712","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:5"},"returnParameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3320,"src":"32088:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3307,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:5"},"scope":3321,"src":"32020:122:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3322,"src":"281:31863:5","usedErrors":[],"usedEvents":[]}],"src":"103:32042:5"},"id":5},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5086]},"id":5087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3323,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3324,"nodeType":"StructuredDocumentation","src":"218:550:6","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5086,"linearizedBaseContracts":[5086],"name":"SafeCast","nameLocation":"777:8:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3325,"nodeType":"StructuredDocumentation","src":"792:68:6","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":3331,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:6","nodeType":"ErrorDefinition","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"bits","nameLocation":"908:4:6","nodeType":"VariableDeclaration","scope":3331,"src":"902:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3326,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"value","nameLocation":"922:5:6","nodeType":"VariableDeclaration","scope":3331,"src":"914:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:6"},"src":"865:64:6"},{"documentation":{"id":3332,"nodeType":"StructuredDocumentation","src":"935:75:6","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":3336,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:6","nodeType":"ErrorDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"value","nameLocation":"1056:5:6","nodeType":"VariableDeclaration","scope":3336,"src":"1049:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3333,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:6"},"src":"1015:48:6"},{"documentation":{"id":3337,"nodeType":"StructuredDocumentation","src":"1069:67:6","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":3343,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:6","nodeType":"ErrorDefinition","parameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"bits","nameLocation":"1183:4:6","nodeType":"VariableDeclaration","scope":3343,"src":"1177:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3338,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3341,"mutability":"mutable","name":"value","nameLocation":"1196:5:6","nodeType":"VariableDeclaration","scope":3343,"src":"1189:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3340,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:6"},"src":"1141:62:6"},{"documentation":{"id":3344,"nodeType":"StructuredDocumentation","src":"1209:75:6","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":3348,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:6","nodeType":"ErrorDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3346,"mutability":"mutable","name":"value","nameLocation":"1331:5:6","nodeType":"VariableDeclaration","scope":3348,"src":"1323:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:6"},"src":"1289:49:6"},{"body":{"id":3375,"nodeType":"Block","src":"1695:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"1709:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3358,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:6","memberName":"max","nodeType":"MemberAccess","src":"1717:17:6","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3369,"nodeType":"IfStatement","src":"1705:105:6","trueBody":{"id":3368,"nodeType":"Block","src":"1736:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:6","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"1793:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3363,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"1757:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3367,"nodeType":"RevertStatement","src":"1750:49:6"}]}},{"expression":{"arguments":[{"id":3372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"1834:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3370,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:6","typeDescriptions":{}}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3355,"id":3374,"nodeType":"Return","src":"1819:21:6"}]},"documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"1344:280:6","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3376,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:6","nodeType":"FunctionDefinition","parameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"value","nameLocation":"1656:5:6","nodeType":"VariableDeclaration","scope":3376,"src":"1648:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:6"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3376,"src":"1686:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3353,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:6","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:6"},"scope":5086,"src":"1629:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3403,"nodeType":"Block","src":"2204:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"2218:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3386,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3385,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:6","memberName":"max","nodeType":"MemberAccess","src":"2226:17:6","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3397,"nodeType":"IfStatement","src":"2214:105:6","trueBody":{"id":3396,"nodeType":"Block","src":"2245:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:6","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"2302:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3391,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"2266:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3395,"nodeType":"RevertStatement","src":"2259:49:6"}]}},{"expression":{"arguments":[{"id":3400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"2343:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3398,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:6","typeDescriptions":{}}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3383,"id":3402,"nodeType":"Return","src":"2328:21:6"}]},"documentation":{"id":3377,"nodeType":"StructuredDocumentation","src":"1853:280:6","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3404,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:6","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"value","nameLocation":"2165:5:6","nodeType":"VariableDeclaration","scope":3404,"src":"2157:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:6"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3404,"src":"2195:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3381,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:6","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:6"},"scope":5086,"src":"2138:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3431,"nodeType":"Block","src":"2713:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"2727:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3414,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3413,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:6","memberName":"max","nodeType":"MemberAccess","src":"2735:17:6","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3425,"nodeType":"IfStatement","src":"2723:105:6","trueBody":{"id":3424,"nodeType":"Block","src":"2754:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:6","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"2811:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3419,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"2775:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3423,"nodeType":"RevertStatement","src":"2768:49:6"}]}},{"expression":{"arguments":[{"id":3428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"2852:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3426,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:6","typeDescriptions":{}}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3411,"id":3430,"nodeType":"Return","src":"2837:21:6"}]},"documentation":{"id":3405,"nodeType":"StructuredDocumentation","src":"2362:280:6","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3432,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:6","nodeType":"FunctionDefinition","parameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"value","nameLocation":"2674:5:6","nodeType":"VariableDeclaration","scope":3432,"src":"2666:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:6"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3432,"src":"2704:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3409,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:6","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:6"},"scope":5086,"src":"2647:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3459,"nodeType":"Block","src":"3222:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"3236:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3442,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3441,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:6","memberName":"max","nodeType":"MemberAccess","src":"3244:17:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3453,"nodeType":"IfStatement","src":"3232:105:6","trueBody":{"id":3452,"nodeType":"Block","src":"3263:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:6","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"3320:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3447,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"3284:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3451,"nodeType":"RevertStatement","src":"3277:49:6"}]}},{"expression":{"arguments":[{"id":3456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"3361:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3454,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:6","typeDescriptions":{}}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3439,"id":3458,"nodeType":"Return","src":"3346:21:6"}]},"documentation":{"id":3433,"nodeType":"StructuredDocumentation","src":"2871:280:6","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3460,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:6","nodeType":"FunctionDefinition","parameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"value","nameLocation":"3183:5:6","nodeType":"VariableDeclaration","scope":3460,"src":"3175:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:6"},"returnParameters":{"id":3439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3460,"src":"3213:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3437,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:6"},"scope":5086,"src":"3156:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3487,"nodeType":"Block","src":"3731:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"3745:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3470,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3469,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:6","memberName":"max","nodeType":"MemberAccess","src":"3753:17:6","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3481,"nodeType":"IfStatement","src":"3741:105:6","trueBody":{"id":3480,"nodeType":"Block","src":"3772:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:6","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"3829:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3475,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"3793:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3479,"nodeType":"RevertStatement","src":"3786:49:6"}]}},{"expression":{"arguments":[{"id":3484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"3870:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3482,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:6","typeDescriptions":{}}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3467,"id":3486,"nodeType":"Return","src":"3855:21:6"}]},"documentation":{"id":3461,"nodeType":"StructuredDocumentation","src":"3380:280:6","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3488,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:6","nodeType":"FunctionDefinition","parameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"value","nameLocation":"3692:5:6","nodeType":"VariableDeclaration","scope":3488,"src":"3684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:6"},"returnParameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3488,"src":"3722:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3465,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:6","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:6"},"scope":5086,"src":"3665:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3515,"nodeType":"Block","src":"4240:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"4254:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3498,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3497,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:6","memberName":"max","nodeType":"MemberAccess","src":"4262:17:6","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3509,"nodeType":"IfStatement","src":"4250:105:6","trueBody":{"id":3508,"nodeType":"Block","src":"4281:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:6","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"4338:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3503,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"4302:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3507,"nodeType":"RevertStatement","src":"4295:49:6"}]}},{"expression":{"arguments":[{"id":3512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"4379:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3510,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:6","typeDescriptions":{}}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3495,"id":3514,"nodeType":"Return","src":"4364:21:6"}]},"documentation":{"id":3489,"nodeType":"StructuredDocumentation","src":"3889:280:6","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3516,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:6","nodeType":"FunctionDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3491,"mutability":"mutable","name":"value","nameLocation":"4201:5:6","nodeType":"VariableDeclaration","scope":3516,"src":"4193:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:6"},"returnParameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3516,"src":"4231:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3493,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:6","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:6"},"scope":5086,"src":"4174:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3543,"nodeType":"Block","src":"4749:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"4763:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3526,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3525,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:6","memberName":"max","nodeType":"MemberAccess","src":"4771:17:6","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3537,"nodeType":"IfStatement","src":"4759:105:6","trueBody":{"id":3536,"nodeType":"Block","src":"4790:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:6","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"4847:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3531,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"4811:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3535,"nodeType":"RevertStatement","src":"4804:49:6"}]}},{"expression":{"arguments":[{"id":3540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"4888:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3538,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:6","typeDescriptions":{}}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3523,"id":3542,"nodeType":"Return","src":"4873:21:6"}]},"documentation":{"id":3517,"nodeType":"StructuredDocumentation","src":"4398:280:6","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3544,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:6","nodeType":"FunctionDefinition","parameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"value","nameLocation":"4710:5:6","nodeType":"VariableDeclaration","scope":3544,"src":"4702:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:6"},"returnParameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3544,"src":"4740:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3521,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:6","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:6"},"scope":5086,"src":"4683:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3571,"nodeType":"Block","src":"5258:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"5272:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3554,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3553,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:6","memberName":"max","nodeType":"MemberAccess","src":"5280:17:6","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3565,"nodeType":"IfStatement","src":"5268:105:6","trueBody":{"id":3564,"nodeType":"Block","src":"5299:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:6","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"5356:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3559,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"5320:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3563,"nodeType":"RevertStatement","src":"5313:49:6"}]}},{"expression":{"arguments":[{"id":3568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"5397:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3566,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:6","typeDescriptions":{}}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3551,"id":3570,"nodeType":"Return","src":"5382:21:6"}]},"documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"4907:280:6","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3572,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:6","nodeType":"FunctionDefinition","parameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"value","nameLocation":"5219:5:6","nodeType":"VariableDeclaration","scope":3572,"src":"5211:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:6"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3572,"src":"5249:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3549,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:6","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:6"},"scope":5086,"src":"5192:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3599,"nodeType":"Block","src":"5767:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"5781:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3582,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3581,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:6","memberName":"max","nodeType":"MemberAccess","src":"5789:17:6","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3593,"nodeType":"IfStatement","src":"5777:105:6","trueBody":{"id":3592,"nodeType":"Block","src":"5808:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:6","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"5865:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3587,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"5829:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3591,"nodeType":"RevertStatement","src":"5822:49:6"}]}},{"expression":{"arguments":[{"id":3596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"5906:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3594,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:6","typeDescriptions":{}}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3579,"id":3598,"nodeType":"Return","src":"5891:21:6"}]},"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"5416:280:6","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3600,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:6","nodeType":"FunctionDefinition","parameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"value","nameLocation":"5728:5:6","nodeType":"VariableDeclaration","scope":3600,"src":"5720:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:6"},"returnParameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3600,"src":"5758:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3577,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:6","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:6"},"scope":5086,"src":"5701:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"6276:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"6290:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3610,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:6","memberName":"max","nodeType":"MemberAccess","src":"6298:17:6","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3621,"nodeType":"IfStatement","src":"6286:105:6","trueBody":{"id":3620,"nodeType":"Block","src":"6317:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:6","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"6374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3615,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"6338:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3619,"nodeType":"RevertStatement","src":"6331:49:6"}]}},{"expression":{"arguments":[{"id":3624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"6415:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3622,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:6","typeDescriptions":{}}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3607,"id":3626,"nodeType":"Return","src":"6400:21:6"}]},"documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"5925:280:6","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:6","nodeType":"FunctionDefinition","parameters":{"id":3604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"value","nameLocation":"6237:5:6","nodeType":"VariableDeclaration","scope":3628,"src":"6229:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:6"},"returnParameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3628,"src":"6267:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3605,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:6","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:6"},"scope":5086,"src":"6210:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3655,"nodeType":"Block","src":"6785:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"6799:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3638,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":3637,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:6","memberName":"max","nodeType":"MemberAccess","src":"6807:17:6","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3649,"nodeType":"IfStatement","src":"6795:105:6","trueBody":{"id":3648,"nodeType":"Block","src":"6826:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:6","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"6883:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3643,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"6847:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3647,"nodeType":"RevertStatement","src":"6840:49:6"}]}},{"expression":{"arguments":[{"id":3652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"6924:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3650,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:6","typeDescriptions":{}}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":3635,"id":3654,"nodeType":"Return","src":"6909:21:6"}]},"documentation":{"id":3629,"nodeType":"StructuredDocumentation","src":"6434:280:6","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3656,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:6","nodeType":"FunctionDefinition","parameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"value","nameLocation":"6746:5:6","nodeType":"VariableDeclaration","scope":3656,"src":"6738:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:6"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3656,"src":"6776:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3633,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:6","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:6"},"scope":5086,"src":"6719:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3683,"nodeType":"Block","src":"7294:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"7308:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3666,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3665,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:6","memberName":"max","nodeType":"MemberAccess","src":"7316:17:6","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3677,"nodeType":"IfStatement","src":"7304:105:6","trueBody":{"id":3676,"nodeType":"Block","src":"7335:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:6","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"7392:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3671,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"7356:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3675,"nodeType":"RevertStatement","src":"7349:49:6"}]}},{"expression":{"arguments":[{"id":3680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"7433:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3678,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:6","typeDescriptions":{}}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3663,"id":3682,"nodeType":"Return","src":"7418:21:6"}]},"documentation":{"id":3657,"nodeType":"StructuredDocumentation","src":"6943:280:6","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3684,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:6","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"value","nameLocation":"7255:5:6","nodeType":"VariableDeclaration","scope":3684,"src":"7247:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:6"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3684,"src":"7285:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3661,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:6","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:6"},"scope":5086,"src":"7228:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3711,"nodeType":"Block","src":"7803:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"7817:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3694,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3693,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:6","memberName":"max","nodeType":"MemberAccess","src":"7825:17:6","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3705,"nodeType":"IfStatement","src":"7813:105:6","trueBody":{"id":3704,"nodeType":"Block","src":"7844:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:6","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"7901:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3699,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"7865:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3703,"nodeType":"RevertStatement","src":"7858:49:6"}]}},{"expression":{"arguments":[{"id":3708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"7942:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3706,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:6","typeDescriptions":{}}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3691,"id":3710,"nodeType":"Return","src":"7927:21:6"}]},"documentation":{"id":3685,"nodeType":"StructuredDocumentation","src":"7452:280:6","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3712,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:6","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"value","nameLocation":"7764:5:6","nodeType":"VariableDeclaration","scope":3712,"src":"7756:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:6"},"returnParameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3712,"src":"7794:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3689,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:6","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:6"},"scope":5086,"src":"7737:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3739,"nodeType":"Block","src":"8312:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"8326:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3722,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3721,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:6","memberName":"max","nodeType":"MemberAccess","src":"8334:17:6","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3733,"nodeType":"IfStatement","src":"8322:105:6","trueBody":{"id":3732,"nodeType":"Block","src":"8353:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:6","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"8410:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3727,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"8374:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3731,"nodeType":"RevertStatement","src":"8367:49:6"}]}},{"expression":{"arguments":[{"id":3736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"8451:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3734,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:6","typeDescriptions":{}}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3719,"id":3738,"nodeType":"Return","src":"8436:21:6"}]},"documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"7961:280:6","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3740,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:6","nodeType":"FunctionDefinition","parameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"value","nameLocation":"8273:5:6","nodeType":"VariableDeclaration","scope":3740,"src":"8265:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:6"},"returnParameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3740,"src":"8303:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3717,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:6","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:6"},"scope":5086,"src":"8246:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3767,"nodeType":"Block","src":"8821:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"8835:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3750,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3749,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:6","memberName":"max","nodeType":"MemberAccess","src":"8843:17:6","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3761,"nodeType":"IfStatement","src":"8831:105:6","trueBody":{"id":3760,"nodeType":"Block","src":"8862:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:6","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"8919:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3755,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"8883:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3759,"nodeType":"RevertStatement","src":"8876:49:6"}]}},{"expression":{"arguments":[{"id":3764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"8960:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3762,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:6","typeDescriptions":{}}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3747,"id":3766,"nodeType":"Return","src":"8945:21:6"}]},"documentation":{"id":3741,"nodeType":"StructuredDocumentation","src":"8470:280:6","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3768,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:6","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"value","nameLocation":"8782:5:6","nodeType":"VariableDeclaration","scope":3768,"src":"8774:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:6"},"returnParameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3768,"src":"8812:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3745,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:6","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:6"},"scope":5086,"src":"8755:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3795,"nodeType":"Block","src":"9330:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9344:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3778,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3777,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:6","memberName":"max","nodeType":"MemberAccess","src":"9352:17:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3789,"nodeType":"IfStatement","src":"9340:105:6","trueBody":{"id":3788,"nodeType":"Block","src":"9371:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9428:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3783,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"9392:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3787,"nodeType":"RevertStatement","src":"9385:49:6"}]}},{"expression":{"arguments":[{"id":3792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9469:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3790,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:6","typeDescriptions":{}}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3775,"id":3794,"nodeType":"Return","src":"9454:21:6"}]},"documentation":{"id":3769,"nodeType":"StructuredDocumentation","src":"8979:280:6","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3796,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:6","nodeType":"FunctionDefinition","parameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"value","nameLocation":"9291:5:6","nodeType":"VariableDeclaration","scope":3796,"src":"9283:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:6"},"returnParameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3796,"src":"9321:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3773,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:6"},"scope":5086,"src":"9264:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3823,"nodeType":"Block","src":"9839:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"9853:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3806,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3805,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:6","memberName":"max","nodeType":"MemberAccess","src":"9861:17:6","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3817,"nodeType":"IfStatement","src":"9849:105:6","trueBody":{"id":3816,"nodeType":"Block","src":"9880:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:6","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"9937:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3811,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"9901:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3815,"nodeType":"RevertStatement","src":"9894:49:6"}]}},{"expression":{"arguments":[{"id":3820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"9978:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3818,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:6","typeDescriptions":{}}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3803,"id":3822,"nodeType":"Return","src":"9963:21:6"}]},"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"9488:280:6","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3824,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:6","nodeType":"FunctionDefinition","parameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"value","nameLocation":"9800:5:6","nodeType":"VariableDeclaration","scope":3824,"src":"9792:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:6"},"returnParameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3824,"src":"9830:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3801,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:6","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:6"},"scope":5086,"src":"9773:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3851,"nodeType":"Block","src":"10348:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"10362:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3834,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3833,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:6","memberName":"max","nodeType":"MemberAccess","src":"10370:17:6","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3845,"nodeType":"IfStatement","src":"10358:105:6","trueBody":{"id":3844,"nodeType":"Block","src":"10389:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:6","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"10446:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3839,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"10410:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3843,"nodeType":"RevertStatement","src":"10403:49:6"}]}},{"expression":{"arguments":[{"id":3848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"10487:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3846,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:6","typeDescriptions":{}}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3831,"id":3850,"nodeType":"Return","src":"10472:21:6"}]},"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"9997:280:6","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3852,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:6","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"value","nameLocation":"10309:5:6","nodeType":"VariableDeclaration","scope":3852,"src":"10301:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:6"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3852,"src":"10339:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3829,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:6","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:6"},"scope":5086,"src":"10282:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3879,"nodeType":"Block","src":"10857:152:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"10871:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3862,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3861,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:6","memberName":"max","nodeType":"MemberAccess","src":"10879:17:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3873,"nodeType":"IfStatement","src":"10867:105:6","trueBody":{"id":3872,"nodeType":"Block","src":"10898:74:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:6","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"10955:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3867,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"10919:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3871,"nodeType":"RevertStatement","src":"10912:49:6"}]}},{"expression":{"arguments":[{"id":3876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"10996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3874,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:6","typeDescriptions":{}}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3859,"id":3878,"nodeType":"Return","src":"10981:21:6"}]},"documentation":{"id":3853,"nodeType":"StructuredDocumentation","src":"10506:280:6","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3880,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:6","nodeType":"FunctionDefinition","parameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"value","nameLocation":"10818:5:6","nodeType":"VariableDeclaration","scope":3880,"src":"10810:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:6"},"returnParameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3880,"src":"10848:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3857,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:6","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:6"},"scope":5086,"src":"10791:218:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3907,"nodeType":"Block","src":"11360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"11374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3890,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3889,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:6","memberName":"max","nodeType":"MemberAccess","src":"11382:16:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3901,"nodeType":"IfStatement","src":"11370:103:6","trueBody":{"id":3900,"nodeType":"Block","src":"11400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"11456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3895,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"11421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3899,"nodeType":"RevertStatement","src":"11414:48:6"}]}},{"expression":{"arguments":[{"id":3904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"11496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3902,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:6","typeDescriptions":{}}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3887,"id":3906,"nodeType":"Return","src":"11482:20:6"}]},"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"11015:276:6","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3908,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:6","nodeType":"FunctionDefinition","parameters":{"id":3884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"value","nameLocation":"11322:5:6","nodeType":"VariableDeclaration","scope":3908,"src":"11314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:6"},"returnParameters":{"id":3887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3908,"src":"11352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3885,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:6","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:6"},"scope":5086,"src":"11296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3935,"nodeType":"Block","src":"11860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"11874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3918,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3917,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:6","memberName":"max","nodeType":"MemberAccess","src":"11882:16:6","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3929,"nodeType":"IfStatement","src":"11870:103:6","trueBody":{"id":3928,"nodeType":"Block","src":"11900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"11956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3923,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"11921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3927,"nodeType":"RevertStatement","src":"11914:48:6"}]}},{"expression":{"arguments":[{"id":3932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"11996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3930,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:6","typeDescriptions":{}}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3915,"id":3934,"nodeType":"Return","src":"11982:20:6"}]},"documentation":{"id":3909,"nodeType":"StructuredDocumentation","src":"11515:276:6","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3936,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:6","nodeType":"FunctionDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"value","nameLocation":"11822:5:6","nodeType":"VariableDeclaration","scope":3936,"src":"11814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:6"},"returnParameters":{"id":3915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3936,"src":"11852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3913,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:6","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:6"},"scope":5086,"src":"11796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3963,"nodeType":"Block","src":"12360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"12374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3946,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3945,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:6","memberName":"max","nodeType":"MemberAccess","src":"12382:16:6","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3957,"nodeType":"IfStatement","src":"12370:103:6","trueBody":{"id":3956,"nodeType":"Block","src":"12400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"12456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3951,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"12421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3955,"nodeType":"RevertStatement","src":"12414:48:6"}]}},{"expression":{"arguments":[{"id":3960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"12496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3958,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:6","typeDescriptions":{}}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3943,"id":3962,"nodeType":"Return","src":"12482:20:6"}]},"documentation":{"id":3937,"nodeType":"StructuredDocumentation","src":"12015:276:6","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3964,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:6","nodeType":"FunctionDefinition","parameters":{"id":3940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"value","nameLocation":"12322:5:6","nodeType":"VariableDeclaration","scope":3964,"src":"12314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:6"},"returnParameters":{"id":3943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3964,"src":"12352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3941,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:6","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:6"},"scope":5086,"src":"12296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3991,"nodeType":"Block","src":"12860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"12874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3974,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3973,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:6","memberName":"max","nodeType":"MemberAccess","src":"12882:16:6","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3985,"nodeType":"IfStatement","src":"12870:103:6","trueBody":{"id":3984,"nodeType":"Block","src":"12900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"12956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3979,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"12921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3983,"nodeType":"RevertStatement","src":"12914:48:6"}]}},{"expression":{"arguments":[{"id":3988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"12996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3986,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:6","typeDescriptions":{}}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3971,"id":3990,"nodeType":"Return","src":"12982:20:6"}]},"documentation":{"id":3965,"nodeType":"StructuredDocumentation","src":"12515:276:6","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3992,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:6","nodeType":"FunctionDefinition","parameters":{"id":3968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3967,"mutability":"mutable","name":"value","nameLocation":"12822:5:6","nodeType":"VariableDeclaration","scope":3992,"src":"12814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:6"},"returnParameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3992,"src":"12852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3969,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:6","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:6"},"scope":5086,"src":"12796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4019,"nodeType":"Block","src":"13360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"13374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4002,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4001,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:6","memberName":"max","nodeType":"MemberAccess","src":"13382:16:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4013,"nodeType":"IfStatement","src":"13370:103:6","trueBody":{"id":4012,"nodeType":"Block","src":"13400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"13456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4007,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"13421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4011,"nodeType":"RevertStatement","src":"13414:48:6"}]}},{"expression":{"arguments":[{"id":4016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"13496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4014,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:6","typeDescriptions":{}}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3999,"id":4018,"nodeType":"Return","src":"13482:20:6"}]},"documentation":{"id":3993,"nodeType":"StructuredDocumentation","src":"13015:276:6","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4020,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:6","nodeType":"FunctionDefinition","parameters":{"id":3996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3995,"mutability":"mutable","name":"value","nameLocation":"13322:5:6","nodeType":"VariableDeclaration","scope":4020,"src":"13314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:6"},"returnParameters":{"id":3999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4020,"src":"13352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3997,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:6"},"scope":5086,"src":"13296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4047,"nodeType":"Block","src":"13860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"13874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4030,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4029,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:6","memberName":"max","nodeType":"MemberAccess","src":"13882:16:6","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4041,"nodeType":"IfStatement","src":"13870:103:6","trueBody":{"id":4040,"nodeType":"Block","src":"13900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"13956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4035,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"13921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4039,"nodeType":"RevertStatement","src":"13914:48:6"}]}},{"expression":{"arguments":[{"id":4044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"13996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4042,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:6","typeDescriptions":{}}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4027,"id":4046,"nodeType":"Return","src":"13982:20:6"}]},"documentation":{"id":4021,"nodeType":"StructuredDocumentation","src":"13515:276:6","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4048,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:6","nodeType":"FunctionDefinition","parameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"value","nameLocation":"13822:5:6","nodeType":"VariableDeclaration","scope":4048,"src":"13814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4022,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:6"},"returnParameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4048,"src":"13852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4025,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:6","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:6"},"scope":5086,"src":"13796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4075,"nodeType":"Block","src":"14360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"14374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4058,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4057,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:6","memberName":"max","nodeType":"MemberAccess","src":"14382:16:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4069,"nodeType":"IfStatement","src":"14370:103:6","trueBody":{"id":4068,"nodeType":"Block","src":"14400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"14456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4063,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"14421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4067,"nodeType":"RevertStatement","src":"14414:48:6"}]}},{"expression":{"arguments":[{"id":4072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"14496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4070,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:6","typeDescriptions":{}}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4055,"id":4074,"nodeType":"Return","src":"14482:20:6"}]},"documentation":{"id":4049,"nodeType":"StructuredDocumentation","src":"14015:276:6","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4076,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:6","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"value","nameLocation":"14322:5:6","nodeType":"VariableDeclaration","scope":4076,"src":"14314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:6"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4076,"src":"14352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4053,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:6","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:6"},"scope":5086,"src":"14296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4103,"nodeType":"Block","src":"14860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"14874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4086,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4085,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:6","memberName":"max","nodeType":"MemberAccess","src":"14882:16:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4097,"nodeType":"IfStatement","src":"14870:103:6","trueBody":{"id":4096,"nodeType":"Block","src":"14900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"14956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4091,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"14921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4095,"nodeType":"RevertStatement","src":"14914:48:6"}]}},{"expression":{"arguments":[{"id":4100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"14996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4098,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:6","typeDescriptions":{}}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4083,"id":4102,"nodeType":"Return","src":"14982:20:6"}]},"documentation":{"id":4077,"nodeType":"StructuredDocumentation","src":"14515:276:6","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4104,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:6","nodeType":"FunctionDefinition","parameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"value","nameLocation":"14822:5:6","nodeType":"VariableDeclaration","scope":4104,"src":"14814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4078,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:6"},"returnParameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4104,"src":"14852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4081,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:6"},"scope":5086,"src":"14796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4131,"nodeType":"Block","src":"15360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"15374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4114,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4113,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:6","memberName":"max","nodeType":"MemberAccess","src":"15382:16:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4125,"nodeType":"IfStatement","src":"15370:103:6","trueBody":{"id":4124,"nodeType":"Block","src":"15400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"15456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4119,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"15421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4123,"nodeType":"RevertStatement","src":"15414:48:6"}]}},{"expression":{"arguments":[{"id":4128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"15496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4126,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:6","typeDescriptions":{}}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4111,"id":4130,"nodeType":"Return","src":"15482:20:6"}]},"documentation":{"id":4105,"nodeType":"StructuredDocumentation","src":"15015:276:6","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4132,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:6","nodeType":"FunctionDefinition","parameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"value","nameLocation":"15322:5:6","nodeType":"VariableDeclaration","scope":4132,"src":"15314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:6"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4132,"src":"15352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4109,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:6"},"scope":5086,"src":"15296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4159,"nodeType":"Block","src":"15860:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"15874:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4142,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4141,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:6","memberName":"max","nodeType":"MemberAccess","src":"15882:16:6","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4153,"nodeType":"IfStatement","src":"15870:103:6","trueBody":{"id":4152,"nodeType":"Block","src":"15900:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:6","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"15956:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4147,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"15921:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4151,"nodeType":"RevertStatement","src":"15914:48:6"}]}},{"expression":{"arguments":[{"id":4156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"15996:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4154,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:6","typeDescriptions":{}}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4139,"id":4158,"nodeType":"Return","src":"15982:20:6"}]},"documentation":{"id":4133,"nodeType":"StructuredDocumentation","src":"15515:276:6","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4160,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:6","nodeType":"FunctionDefinition","parameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"value","nameLocation":"15822:5:6","nodeType":"VariableDeclaration","scope":4160,"src":"15814:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:6"},"returnParameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4160,"src":"15852:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4137,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:6","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:6"},"scope":5086,"src":"15796:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4187,"nodeType":"Block","src":"16360:149:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"16374:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4170,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4169,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:6","memberName":"max","nodeType":"MemberAccess","src":"16382:16:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4181,"nodeType":"IfStatement","src":"16370:103:6","trueBody":{"id":4180,"nodeType":"Block","src":"16400:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"16456:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4175,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"16421:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4179,"nodeType":"RevertStatement","src":"16414:48:6"}]}},{"expression":{"arguments":[{"id":4184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"16496:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4182,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:6","typeDescriptions":{}}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4167,"id":4186,"nodeType":"Return","src":"16482:20:6"}]},"documentation":{"id":4161,"nodeType":"StructuredDocumentation","src":"16015:276:6","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4188,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:6","nodeType":"FunctionDefinition","parameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"value","nameLocation":"16322:5:6","nodeType":"VariableDeclaration","scope":4188,"src":"16314:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:6"},"returnParameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4188,"src":"16352:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4165,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:6"},"scope":5086,"src":"16296:213:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4215,"nodeType":"Block","src":"16854:146:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"16868:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4198,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4197,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:6","memberName":"max","nodeType":"MemberAccess","src":"16876:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4209,"nodeType":"IfStatement","src":"16864:101:6","trueBody":{"id":4208,"nodeType":"Block","src":"16893:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"16948:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4203,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"16914:30:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4207,"nodeType":"RevertStatement","src":"16907:47:6"}]}},{"expression":{"arguments":[{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"16987:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4210,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:6","typeDescriptions":{}}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4195,"id":4214,"nodeType":"Return","src":"16974:19:6"}]},"documentation":{"id":4189,"nodeType":"StructuredDocumentation","src":"16515:272:6","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4216,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:6","nodeType":"FunctionDefinition","parameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"value","nameLocation":"16817:5:6","nodeType":"VariableDeclaration","scope":4216,"src":"16809:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:6"},"returnParameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4216,"src":"16847:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4193,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:6"},"scope":5086,"src":"16792:208:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4238,"nodeType":"Block","src":"17236:128:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"17250:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4232,"nodeType":"IfStatement","src":"17246:81:6","trueBody":{"id":4231,"nodeType":"Block","src":"17261:66:6","statements":[{"errorCall":{"arguments":[{"id":4228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"17310:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4227,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"17282:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4230,"nodeType":"RevertStatement","src":"17275:41:6"}]}},{"expression":{"arguments":[{"id":4235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"17351:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4233,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:6","typeDescriptions":{}}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4223,"id":4237,"nodeType":"Return","src":"17336:21:6"}]},"documentation":{"id":4217,"nodeType":"StructuredDocumentation","src":"17006:160:6","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":4239,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:6","nodeType":"FunctionDefinition","parameters":{"id":4220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4219,"mutability":"mutable","name":"value","nameLocation":"17197:5:6","nodeType":"VariableDeclaration","scope":4239,"src":"17190:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4218,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:6"},"returnParameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4239,"src":"17227:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:6"},"scope":5086,"src":"17171:193:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4264,"nodeType":"Block","src":"17761:150:6","statements":[{"expression":{"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4247,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"17771:10:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"17791:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4248,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:6","typeDescriptions":{}}},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4253,"nodeType":"ExpressionStatement","src":"17771:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4254,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"17811:10:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"17825:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4263,"nodeType":"IfStatement","src":"17807:98:6","trueBody":{"id":4262,"nodeType":"Block","src":"17832:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:6","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"17888:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4257,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"17853:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4261,"nodeType":"RevertStatement","src":"17846:48:6"}]}}]},"documentation":{"id":4240,"nodeType":"StructuredDocumentation","src":"17370:312:6","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4265,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:6","nodeType":"FunctionDefinition","parameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"value","nameLocation":"17712:5:6","nodeType":"VariableDeclaration","scope":4265,"src":"17705:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4241,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:6"},"returnParameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:6","nodeType":"VariableDeclaration","scope":4265,"src":"17742:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4244,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:6","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:6"},"scope":5086,"src":"17687:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4290,"nodeType":"Block","src":"18308:150:6","statements":[{"expression":{"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4273,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"18318:10:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"18338:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4274,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:6","typeDescriptions":{}}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4279,"nodeType":"ExpressionStatement","src":"18318:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4280,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"18358:10:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"18372:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4289,"nodeType":"IfStatement","src":"18354:98:6","trueBody":{"id":4288,"nodeType":"Block","src":"18379:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:6","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"18435:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4283,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"18400:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4287,"nodeType":"RevertStatement","src":"18393:48:6"}]}}]},"documentation":{"id":4266,"nodeType":"StructuredDocumentation","src":"17917:312:6","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4291,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:6","nodeType":"FunctionDefinition","parameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"value","nameLocation":"18259:5:6","nodeType":"VariableDeclaration","scope":4291,"src":"18252:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4267,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:6"},"returnParameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:6","nodeType":"VariableDeclaration","scope":4291,"src":"18289:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4270,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:6","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:6"},"scope":5086,"src":"18234:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4316,"nodeType":"Block","src":"18855:150:6","statements":[{"expression":{"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4299,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"18865:10:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"18885:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4300,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:6","typeDescriptions":{}}},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4305,"nodeType":"ExpressionStatement","src":"18865:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"18905:10:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"18919:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4315,"nodeType":"IfStatement","src":"18901:98:6","trueBody":{"id":4314,"nodeType":"Block","src":"18926:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:6","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"18982:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4309,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"18947:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4313,"nodeType":"RevertStatement","src":"18940:48:6"}]}}]},"documentation":{"id":4292,"nodeType":"StructuredDocumentation","src":"18464:312:6","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4317,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:6","nodeType":"FunctionDefinition","parameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4294,"mutability":"mutable","name":"value","nameLocation":"18806:5:6","nodeType":"VariableDeclaration","scope":4317,"src":"18799:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4293,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:6"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:6","nodeType":"VariableDeclaration","scope":4317,"src":"18836:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4296,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:6","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:6"},"scope":5086,"src":"18781:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4342,"nodeType":"Block","src":"19402:150:6","statements":[{"expression":{"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4325,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"19412:10:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"19432:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4326,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:6","typeDescriptions":{}}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4331,"nodeType":"ExpressionStatement","src":"19412:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4332,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4323,"src":"19452:10:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"19466:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4341,"nodeType":"IfStatement","src":"19448:98:6","trueBody":{"id":4340,"nodeType":"Block","src":"19473:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:6","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"19529:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4335,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"19494:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4339,"nodeType":"RevertStatement","src":"19487:48:6"}]}}]},"documentation":{"id":4318,"nodeType":"StructuredDocumentation","src":"19011:312:6","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4343,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:6","nodeType":"FunctionDefinition","parameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"value","nameLocation":"19353:5:6","nodeType":"VariableDeclaration","scope":4343,"src":"19346:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4319,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:6"},"returnParameters":{"id":4324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4323,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:6","nodeType":"VariableDeclaration","scope":4343,"src":"19383:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4322,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:6","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:6"},"scope":5086,"src":"19328:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4368,"nodeType":"Block","src":"19949:150:6","statements":[{"expression":{"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4351,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"19959:10:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"19979:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4352,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:6","typeDescriptions":{}}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4357,"nodeType":"ExpressionStatement","src":"19959:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"19999:10:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"20013:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4367,"nodeType":"IfStatement","src":"19995:98:6","trueBody":{"id":4366,"nodeType":"Block","src":"20020:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:6","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"20076:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4361,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"20041:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4365,"nodeType":"RevertStatement","src":"20034:48:6"}]}}]},"documentation":{"id":4344,"nodeType":"StructuredDocumentation","src":"19558:312:6","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4369,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:6","nodeType":"FunctionDefinition","parameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"value","nameLocation":"19900:5:6","nodeType":"VariableDeclaration","scope":4369,"src":"19893:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4345,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:6"},"returnParameters":{"id":4350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4349,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:6","nodeType":"VariableDeclaration","scope":4369,"src":"19930:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4348,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:6","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:6"},"scope":5086,"src":"19875:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4394,"nodeType":"Block","src":"20496:150:6","statements":[{"expression":{"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4377,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"20506:10:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"20526:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4378,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:6","typeDescriptions":{}}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4383,"nodeType":"ExpressionStatement","src":"20506:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4384,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"20546:10:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"20560:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4393,"nodeType":"IfStatement","src":"20542:98:6","trueBody":{"id":4392,"nodeType":"Block","src":"20567:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:6","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"20623:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4387,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"20588:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4391,"nodeType":"RevertStatement","src":"20581:48:6"}]}}]},"documentation":{"id":4370,"nodeType":"StructuredDocumentation","src":"20105:312:6","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4395,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:6","nodeType":"FunctionDefinition","parameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"value","nameLocation":"20447:5:6","nodeType":"VariableDeclaration","scope":4395,"src":"20440:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4371,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:6"},"returnParameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:6","nodeType":"VariableDeclaration","scope":4395,"src":"20477:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4374,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:6","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:6"},"scope":5086,"src":"20422:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4420,"nodeType":"Block","src":"21043:150:6","statements":[{"expression":{"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4403,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"21053:10:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"21073:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4404,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:6","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4409,"nodeType":"ExpressionStatement","src":"21053:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4410,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"21093:10:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"21107:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4419,"nodeType":"IfStatement","src":"21089:98:6","trueBody":{"id":4418,"nodeType":"Block","src":"21114:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:6","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"21170:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4413,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"21135:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4417,"nodeType":"RevertStatement","src":"21128:48:6"}]}}]},"documentation":{"id":4396,"nodeType":"StructuredDocumentation","src":"20652:312:6","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4421,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:6","nodeType":"FunctionDefinition","parameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"value","nameLocation":"20994:5:6","nodeType":"VariableDeclaration","scope":4421,"src":"20987:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4397,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:6"},"returnParameters":{"id":4402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:6","nodeType":"VariableDeclaration","scope":4421,"src":"21024:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4400,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:6","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:6"},"scope":5086,"src":"20969:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4446,"nodeType":"Block","src":"21590:150:6","statements":[{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4429,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"21600:10:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"21620:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4430,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:6","typeDescriptions":{}}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4435,"nodeType":"ExpressionStatement","src":"21600:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4436,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"21640:10:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"21654:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4445,"nodeType":"IfStatement","src":"21636:98:6","trueBody":{"id":4444,"nodeType":"Block","src":"21661:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:6","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"21717:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4439,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"21682:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4443,"nodeType":"RevertStatement","src":"21675:48:6"}]}}]},"documentation":{"id":4422,"nodeType":"StructuredDocumentation","src":"21199:312:6","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4447,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:6","nodeType":"FunctionDefinition","parameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4424,"mutability":"mutable","name":"value","nameLocation":"21541:5:6","nodeType":"VariableDeclaration","scope":4447,"src":"21534:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4423,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:6"},"returnParameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4427,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:6","nodeType":"VariableDeclaration","scope":4447,"src":"21571:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4426,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:6","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:6"},"scope":5086,"src":"21516:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4472,"nodeType":"Block","src":"22137:150:6","statements":[{"expression":{"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4455,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"22147:10:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"22167:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4456,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:6","typeDescriptions":{}}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4461,"nodeType":"ExpressionStatement","src":"22147:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4462,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"22187:10:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"22201:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4471,"nodeType":"IfStatement","src":"22183:98:6","trueBody":{"id":4470,"nodeType":"Block","src":"22208:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:6","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"22264:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4465,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"22229:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4469,"nodeType":"RevertStatement","src":"22222:48:6"}]}}]},"documentation":{"id":4448,"nodeType":"StructuredDocumentation","src":"21746:312:6","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4473,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:6","nodeType":"FunctionDefinition","parameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"value","nameLocation":"22088:5:6","nodeType":"VariableDeclaration","scope":4473,"src":"22081:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4449,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:6"},"returnParameters":{"id":4454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4453,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:6","nodeType":"VariableDeclaration","scope":4473,"src":"22118:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4452,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:6","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:6"},"scope":5086,"src":"22063:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4498,"nodeType":"Block","src":"22684:150:6","statements":[{"expression":{"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4481,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"22694:10:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"22714:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4482,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:6","typeDescriptions":{}}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4487,"nodeType":"ExpressionStatement","src":"22694:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4488,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"22734:10:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"22748:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4497,"nodeType":"IfStatement","src":"22730:98:6","trueBody":{"id":4496,"nodeType":"Block","src":"22755:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:6","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"22811:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4491,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"22776:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4495,"nodeType":"RevertStatement","src":"22769:48:6"}]}}]},"documentation":{"id":4474,"nodeType":"StructuredDocumentation","src":"22293:312:6","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4499,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:6","nodeType":"FunctionDefinition","parameters":{"id":4477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4476,"mutability":"mutable","name":"value","nameLocation":"22635:5:6","nodeType":"VariableDeclaration","scope":4499,"src":"22628:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4475,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:6"},"returnParameters":{"id":4480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4479,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:6","nodeType":"VariableDeclaration","scope":4499,"src":"22665:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4478,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:6","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:6"},"scope":5086,"src":"22610:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4524,"nodeType":"Block","src":"23231:150:6","statements":[{"expression":{"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4507,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"23241:10:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"23261:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4508,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:6","typeDescriptions":{}}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4513,"nodeType":"ExpressionStatement","src":"23241:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4514,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"23281:10:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"23295:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4523,"nodeType":"IfStatement","src":"23277:98:6","trueBody":{"id":4522,"nodeType":"Block","src":"23302:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:6","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"23358:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4517,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"23323:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4521,"nodeType":"RevertStatement","src":"23316:48:6"}]}}]},"documentation":{"id":4500,"nodeType":"StructuredDocumentation","src":"22840:312:6","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4525,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:6","nodeType":"FunctionDefinition","parameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4502,"mutability":"mutable","name":"value","nameLocation":"23182:5:6","nodeType":"VariableDeclaration","scope":4525,"src":"23175:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4501,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:6"},"returnParameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:6","nodeType":"VariableDeclaration","scope":4525,"src":"23212:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4504,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:6","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:6"},"scope":5086,"src":"23157:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4550,"nodeType":"Block","src":"23778:150:6","statements":[{"expression":{"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4533,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"23788:10:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"23808:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4534,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:6","typeDescriptions":{}}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4539,"nodeType":"ExpressionStatement","src":"23788:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4540,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4531,"src":"23828:10:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"23842:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4549,"nodeType":"IfStatement","src":"23824:98:6","trueBody":{"id":4548,"nodeType":"Block","src":"23849:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:6","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"23905:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4543,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"23870:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4547,"nodeType":"RevertStatement","src":"23863:48:6"}]}}]},"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"23387:312:6","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4551,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:6","nodeType":"FunctionDefinition","parameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"value","nameLocation":"23729:5:6","nodeType":"VariableDeclaration","scope":4551,"src":"23722:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4527,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:6"},"returnParameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:6","nodeType":"VariableDeclaration","scope":4551,"src":"23759:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4530,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:6","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:6"},"scope":5086,"src":"23704:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4576,"nodeType":"Block","src":"24325:150:6","statements":[{"expression":{"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4559,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"24335:10:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"24355:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4560,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:6","typeDescriptions":{}}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4565,"nodeType":"ExpressionStatement","src":"24335:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4566,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"24375:10:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"24389:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4575,"nodeType":"IfStatement","src":"24371:98:6","trueBody":{"id":4574,"nodeType":"Block","src":"24396:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:6","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"24452:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4569,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"24417:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4573,"nodeType":"RevertStatement","src":"24410:48:6"}]}}]},"documentation":{"id":4552,"nodeType":"StructuredDocumentation","src":"23934:312:6","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4577,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:6","nodeType":"FunctionDefinition","parameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"value","nameLocation":"24276:5:6","nodeType":"VariableDeclaration","scope":4577,"src":"24269:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4553,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:6"},"returnParameters":{"id":4558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4557,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:6","nodeType":"VariableDeclaration","scope":4577,"src":"24306:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4556,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:6","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:6"},"scope":5086,"src":"24251:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4602,"nodeType":"Block","src":"24872:150:6","statements":[{"expression":{"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4585,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"24882:10:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"24902:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4586,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:6","typeDescriptions":{}}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4591,"nodeType":"ExpressionStatement","src":"24882:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4592,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"24922:10:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"24936:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4601,"nodeType":"IfStatement","src":"24918:98:6","trueBody":{"id":4600,"nodeType":"Block","src":"24943:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:6","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"24999:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4595,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"24964:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4599,"nodeType":"RevertStatement","src":"24957:48:6"}]}}]},"documentation":{"id":4578,"nodeType":"StructuredDocumentation","src":"24481:312:6","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4603,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:6","nodeType":"FunctionDefinition","parameters":{"id":4581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4580,"mutability":"mutable","name":"value","nameLocation":"24823:5:6","nodeType":"VariableDeclaration","scope":4603,"src":"24816:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4579,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:6"},"returnParameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4583,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:6","nodeType":"VariableDeclaration","scope":4603,"src":"24853:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4582,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:6","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:6"},"scope":5086,"src":"24798:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4628,"nodeType":"Block","src":"25419:150:6","statements":[{"expression":{"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4611,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"25429:10:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"25449:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4612,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:6","typeDescriptions":{}}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4617,"nodeType":"ExpressionStatement","src":"25429:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4618,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"25469:10:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"25483:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4627,"nodeType":"IfStatement","src":"25465:98:6","trueBody":{"id":4626,"nodeType":"Block","src":"25490:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:6","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"25546:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4621,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"25511:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4625,"nodeType":"RevertStatement","src":"25504:48:6"}]}}]},"documentation":{"id":4604,"nodeType":"StructuredDocumentation","src":"25028:312:6","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4629,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:6","nodeType":"FunctionDefinition","parameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"value","nameLocation":"25370:5:6","nodeType":"VariableDeclaration","scope":4629,"src":"25363:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4605,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:6"},"returnParameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:6","nodeType":"VariableDeclaration","scope":4629,"src":"25400:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4608,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:6","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:6"},"scope":5086,"src":"25345:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4654,"nodeType":"Block","src":"25966:150:6","statements":[{"expression":{"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4637,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"25976:10:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"25996:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4638,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:6","typeDescriptions":{}}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":4643,"nodeType":"ExpressionStatement","src":"25976:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"26016:10:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"26030:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4653,"nodeType":"IfStatement","src":"26012:98:6","trueBody":{"id":4652,"nodeType":"Block","src":"26037:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"26093:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4647,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"26058:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4651,"nodeType":"RevertStatement","src":"26051:48:6"}]}}]},"documentation":{"id":4630,"nodeType":"StructuredDocumentation","src":"25575:312:6","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4655,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:6","nodeType":"FunctionDefinition","parameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4632,"mutability":"mutable","name":"value","nameLocation":"25917:5:6","nodeType":"VariableDeclaration","scope":4655,"src":"25910:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4631,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:6"},"returnParameters":{"id":4636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4635,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:6","nodeType":"VariableDeclaration","scope":4655,"src":"25947:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4634,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:6"},"scope":5086,"src":"25892:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4680,"nodeType":"Block","src":"26513:150:6","statements":[{"expression":{"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4663,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"26523:10:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"26543:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4664,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:6","typeDescriptions":{}}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4669,"nodeType":"ExpressionStatement","src":"26523:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"26563:10:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"26577:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4679,"nodeType":"IfStatement","src":"26559:98:6","trueBody":{"id":4678,"nodeType":"Block","src":"26584:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:6","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"26640:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4673,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"26605:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4677,"nodeType":"RevertStatement","src":"26598:48:6"}]}}]},"documentation":{"id":4656,"nodeType":"StructuredDocumentation","src":"26122:312:6","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4681,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:6","nodeType":"FunctionDefinition","parameters":{"id":4659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4658,"mutability":"mutable","name":"value","nameLocation":"26464:5:6","nodeType":"VariableDeclaration","scope":4681,"src":"26457:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4657,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:6"},"returnParameters":{"id":4662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4661,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:6","nodeType":"VariableDeclaration","scope":4681,"src":"26494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4660,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:6","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:6"},"scope":5086,"src":"26439:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4706,"nodeType":"Block","src":"27060:150:6","statements":[{"expression":{"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4689,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"27070:10:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"27090:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4690,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:6","typeDescriptions":{}}},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4695,"nodeType":"ExpressionStatement","src":"27070:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"27110:10:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"27124:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4705,"nodeType":"IfStatement","src":"27106:98:6","trueBody":{"id":4704,"nodeType":"Block","src":"27131:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:6","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"27187:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4699,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"27152:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4703,"nodeType":"RevertStatement","src":"27145:48:6"}]}}]},"documentation":{"id":4682,"nodeType":"StructuredDocumentation","src":"26669:312:6","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4707,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:6","nodeType":"FunctionDefinition","parameters":{"id":4685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4684,"mutability":"mutable","name":"value","nameLocation":"27011:5:6","nodeType":"VariableDeclaration","scope":4707,"src":"27004:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4683,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:6"},"returnParameters":{"id":4688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4687,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:6","nodeType":"VariableDeclaration","scope":4707,"src":"27041:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4686,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:6","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:6"},"scope":5086,"src":"26986:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4732,"nodeType":"Block","src":"27607:150:6","statements":[{"expression":{"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4715,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"27617:10:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"27637:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4716,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:6","typeDescriptions":{}}},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4721,"nodeType":"ExpressionStatement","src":"27617:26:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4722,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4713,"src":"27657:10:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"27671:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4731,"nodeType":"IfStatement","src":"27653:98:6","trueBody":{"id":4730,"nodeType":"Block","src":"27678:73:6","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:6","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"27734:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4725,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"27699:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4729,"nodeType":"RevertStatement","src":"27692:48:6"}]}}]},"documentation":{"id":4708,"nodeType":"StructuredDocumentation","src":"27216:312:6","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4733,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:6","nodeType":"FunctionDefinition","parameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4710,"mutability":"mutable","name":"value","nameLocation":"27558:5:6","nodeType":"VariableDeclaration","scope":4733,"src":"27551:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4709,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:6"},"returnParameters":{"id":4714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4713,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:6","nodeType":"VariableDeclaration","scope":4733,"src":"27588:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4712,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:6","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:6"},"scope":5086,"src":"27533:224:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4758,"nodeType":"Block","src":"28147:148:6","statements":[{"expression":{"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4741,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"28157:10:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"28176:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4742,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:6","typeDescriptions":{}}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4747,"nodeType":"ExpressionStatement","src":"28157:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4739,"src":"28196:10:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"28210:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4757,"nodeType":"IfStatement","src":"28192:97:6","trueBody":{"id":4756,"nodeType":"Block","src":"28217:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:6","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"28272:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4751,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"28238:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4755,"nodeType":"RevertStatement","src":"28231:47:6"}]}}]},"documentation":{"id":4734,"nodeType":"StructuredDocumentation","src":"27763:307:6","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4759,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:6","nodeType":"FunctionDefinition","parameters":{"id":4737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4736,"mutability":"mutable","name":"value","nameLocation":"28099:5:6","nodeType":"VariableDeclaration","scope":4759,"src":"28092:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4735,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:6"},"returnParameters":{"id":4740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4739,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:6","nodeType":"VariableDeclaration","scope":4759,"src":"28129:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4738,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:6","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:6"},"scope":5086,"src":"28075:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4784,"nodeType":"Block","src":"28685:148:6","statements":[{"expression":{"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4767,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"28695:10:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"28714:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4768,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:6","typeDescriptions":{}}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4773,"nodeType":"ExpressionStatement","src":"28695:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4774,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4765,"src":"28734:10:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"28748:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4783,"nodeType":"IfStatement","src":"28730:97:6","trueBody":{"id":4782,"nodeType":"Block","src":"28755:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:6","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4762,"src":"28810:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4777,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"28776:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4781,"nodeType":"RevertStatement","src":"28769:47:6"}]}}]},"documentation":{"id":4760,"nodeType":"StructuredDocumentation","src":"28301:307:6","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4785,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:6","nodeType":"FunctionDefinition","parameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"value","nameLocation":"28637:5:6","nodeType":"VariableDeclaration","scope":4785,"src":"28630:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4761,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:6"},"returnParameters":{"id":4766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4765,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:6","nodeType":"VariableDeclaration","scope":4785,"src":"28667:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4764,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:6","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:6"},"scope":5086,"src":"28613:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4810,"nodeType":"Block","src":"29223:148:6","statements":[{"expression":{"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4793,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"29233:10:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"29252:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4794,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:6","typeDescriptions":{}}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4799,"nodeType":"ExpressionStatement","src":"29233:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"29272:10:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"29286:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4809,"nodeType":"IfStatement","src":"29268:97:6","trueBody":{"id":4808,"nodeType":"Block","src":"29293:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:6","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"29348:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4803,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"29314:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4807,"nodeType":"RevertStatement","src":"29307:47:6"}]}}]},"documentation":{"id":4786,"nodeType":"StructuredDocumentation","src":"28839:307:6","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4811,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:6","nodeType":"FunctionDefinition","parameters":{"id":4789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"value","nameLocation":"29175:5:6","nodeType":"VariableDeclaration","scope":4811,"src":"29168:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4787,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:6"},"returnParameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:6","nodeType":"VariableDeclaration","scope":4811,"src":"29205:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4790,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:6","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:6"},"scope":5086,"src":"29151:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4836,"nodeType":"Block","src":"29761:148:6","statements":[{"expression":{"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"29771:10:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"29790:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4820,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:6","typeDescriptions":{}}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4825,"nodeType":"ExpressionStatement","src":"29771:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"29810:10:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"29824:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4835,"nodeType":"IfStatement","src":"29806:97:6","trueBody":{"id":4834,"nodeType":"Block","src":"29831:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:6","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4814,"src":"29886:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4829,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"29852:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4833,"nodeType":"RevertStatement","src":"29845:47:6"}]}}]},"documentation":{"id":4812,"nodeType":"StructuredDocumentation","src":"29377:307:6","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4837,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:6","nodeType":"FunctionDefinition","parameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4814,"mutability":"mutable","name":"value","nameLocation":"29713:5:6","nodeType":"VariableDeclaration","scope":4837,"src":"29706:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4813,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:6"},"returnParameters":{"id":4818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4817,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:6","nodeType":"VariableDeclaration","scope":4837,"src":"29743:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4816,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:6","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:6"},"scope":5086,"src":"29689:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4862,"nodeType":"Block","src":"30299:148:6","statements":[{"expression":{"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4845,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"30309:10:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"30328:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4846,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:6","typeDescriptions":{}}},"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4851,"nodeType":"ExpressionStatement","src":"30309:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"30348:10:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"30362:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4861,"nodeType":"IfStatement","src":"30344:97:6","trueBody":{"id":4860,"nodeType":"Block","src":"30369:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"30424:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4855,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"30390:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4859,"nodeType":"RevertStatement","src":"30383:47:6"}]}}]},"documentation":{"id":4838,"nodeType":"StructuredDocumentation","src":"29915:307:6","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4863,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:6","nodeType":"FunctionDefinition","parameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"value","nameLocation":"30251:5:6","nodeType":"VariableDeclaration","scope":4863,"src":"30244:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4839,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:6"},"returnParameters":{"id":4844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:6","nodeType":"VariableDeclaration","scope":4863,"src":"30281:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4842,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:6"},"scope":5086,"src":"30227:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4888,"nodeType":"Block","src":"30837:148:6","statements":[{"expression":{"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4871,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"30847:10:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"30866:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4872,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:6","typeDescriptions":{}}},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4877,"nodeType":"ExpressionStatement","src":"30847:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"30886:10:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"30900:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4887,"nodeType":"IfStatement","src":"30882:97:6","trueBody":{"id":4886,"nodeType":"Block","src":"30907:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:6","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"30962:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4881,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"30928:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4885,"nodeType":"RevertStatement","src":"30921:47:6"}]}}]},"documentation":{"id":4864,"nodeType":"StructuredDocumentation","src":"30453:307:6","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4889,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:6","nodeType":"FunctionDefinition","parameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"value","nameLocation":"30789:5:6","nodeType":"VariableDeclaration","scope":4889,"src":"30782:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4865,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:6"},"returnParameters":{"id":4870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:6","nodeType":"VariableDeclaration","scope":4889,"src":"30819:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4868,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:6"},"scope":5086,"src":"30765:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4914,"nodeType":"Block","src":"31375:148:6","statements":[{"expression":{"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4897,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"31385:10:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"31404:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4898,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:6","typeDescriptions":{}}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4903,"nodeType":"ExpressionStatement","src":"31385:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"31424:10:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"31438:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4913,"nodeType":"IfStatement","src":"31420:97:6","trueBody":{"id":4912,"nodeType":"Block","src":"31445:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:6","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"31500:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4907,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"31466:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4911,"nodeType":"RevertStatement","src":"31459:47:6"}]}}]},"documentation":{"id":4890,"nodeType":"StructuredDocumentation","src":"30991:307:6","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4915,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:6","nodeType":"FunctionDefinition","parameters":{"id":4893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4892,"mutability":"mutable","name":"value","nameLocation":"31327:5:6","nodeType":"VariableDeclaration","scope":4915,"src":"31320:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4891,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:6"},"returnParameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:6","nodeType":"VariableDeclaration","scope":4915,"src":"31357:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4894,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:6","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:6"},"scope":5086,"src":"31303:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4940,"nodeType":"Block","src":"31913:148:6","statements":[{"expression":{"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4923,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"31923:10:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"31942:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4924,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:6","typeDescriptions":{}}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4929,"nodeType":"ExpressionStatement","src":"31923:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"31962:10:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"31976:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4939,"nodeType":"IfStatement","src":"31958:97:6","trueBody":{"id":4938,"nodeType":"Block","src":"31983:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:6","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"32038:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4933,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"32004:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4937,"nodeType":"RevertStatement","src":"31997:47:6"}]}}]},"documentation":{"id":4916,"nodeType":"StructuredDocumentation","src":"31529:307:6","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4941,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:6","nodeType":"FunctionDefinition","parameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"value","nameLocation":"31865:5:6","nodeType":"VariableDeclaration","scope":4941,"src":"31858:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4917,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:6"},"returnParameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:6","nodeType":"VariableDeclaration","scope":4941,"src":"31895:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4920,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:6","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:6"},"scope":5086,"src":"31841:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"32451:148:6","statements":[{"expression":{"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4949,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"32461:10:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"32480:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4950,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:6","typeDescriptions":{}}},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4955,"nodeType":"ExpressionStatement","src":"32461:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4947,"src":"32500:10:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"32514:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4965,"nodeType":"IfStatement","src":"32496:97:6","trueBody":{"id":4964,"nodeType":"Block","src":"32521:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"32576:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4959,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"32542:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4963,"nodeType":"RevertStatement","src":"32535:47:6"}]}}]},"documentation":{"id":4942,"nodeType":"StructuredDocumentation","src":"32067:307:6","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:6","nodeType":"FunctionDefinition","parameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"value","nameLocation":"32403:5:6","nodeType":"VariableDeclaration","scope":4967,"src":"32396:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4943,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:6"},"returnParameters":{"id":4948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:6","nodeType":"VariableDeclaration","scope":4967,"src":"32433:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4946,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:6","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:6"},"scope":5086,"src":"32379:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4992,"nodeType":"Block","src":"32989:148:6","statements":[{"expression":{"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4975,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"32999:10:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"33018:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4976,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:6","typeDescriptions":{}}},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4981,"nodeType":"ExpressionStatement","src":"32999:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"33038:10:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"33052:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4991,"nodeType":"IfStatement","src":"33034:97:6","trueBody":{"id":4990,"nodeType":"Block","src":"33059:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:6","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"33114:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4985,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"33080:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4989,"nodeType":"RevertStatement","src":"33073:47:6"}]}}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"32605:307:6","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4993,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:6","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"value","nameLocation":"32941:5:6","nodeType":"VariableDeclaration","scope":4993,"src":"32934:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4969,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:6"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:6","nodeType":"VariableDeclaration","scope":4993,"src":"32971:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4972,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:6"},"scope":5086,"src":"32917:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5018,"nodeType":"Block","src":"33527:148:6","statements":[{"expression":{"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5001,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"33537:10:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"33556:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5002,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:6","typeDescriptions":{}}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5007,"nodeType":"ExpressionStatement","src":"33537:25:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"33576:10:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"33590:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5017,"nodeType":"IfStatement","src":"33572:97:6","trueBody":{"id":5016,"nodeType":"Block","src":"33597:72:6","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"33652:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5011,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"33618:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5015,"nodeType":"RevertStatement","src":"33611:47:6"}]}}]},"documentation":{"id":4994,"nodeType":"StructuredDocumentation","src":"33143:307:6","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5019,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:6","nodeType":"FunctionDefinition","parameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"value","nameLocation":"33479:5:6","nodeType":"VariableDeclaration","scope":5019,"src":"33472:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4995,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:6"},"returnParameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4999,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:6","nodeType":"VariableDeclaration","scope":5019,"src":"33509:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4998,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:6"},"scope":5086,"src":"33455:220:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5044,"nodeType":"Block","src":"34058:146:6","statements":[{"expression":{"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5027,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"34068:10:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"34086:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5028,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:6","typeDescriptions":{}}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5033,"nodeType":"ExpressionStatement","src":"34068:24:6"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"34106:10:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"34120:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5043,"nodeType":"IfStatement","src":"34102:96:6","trueBody":{"id":5042,"nodeType":"Block","src":"34127:71:6","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5022,"src":"34181:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5037,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"34148:29:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5041,"nodeType":"RevertStatement","src":"34141:46:6"}]}}]},"documentation":{"id":5020,"nodeType":"StructuredDocumentation","src":"33681:302:6","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5045,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:6","nodeType":"FunctionDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"value","nameLocation":"34011:5:6","nodeType":"VariableDeclaration","scope":5045,"src":"34004:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5021,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:6"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:6","nodeType":"VariableDeclaration","scope":5045,"src":"34041:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5024,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:6","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:6"},"scope":5086,"src":"33988:216:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5074,"nodeType":"Block","src":"34444:250:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"34557:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5057,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5056,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:6","memberName":"max","nodeType":"MemberAccess","src":"34573:16:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5054,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:6","typeDescriptions":{}}},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5068,"nodeType":"IfStatement","src":"34553:105:6","trueBody":{"id":5067,"nodeType":"Block","src":"34592:66:6","statements":[{"errorCall":{"arguments":[{"id":5064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"34641:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5063,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"34613:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5066,"nodeType":"RevertStatement","src":"34606:41:6"}]}},{"expression":{"arguments":[{"id":5071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"34681:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5069,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:6","typeDescriptions":{}}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5052,"id":5073,"nodeType":"Return","src":"34667:20:6"}]},"documentation":{"id":5046,"nodeType":"StructuredDocumentation","src":"34210:165:6","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5075,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:6","nodeType":"FunctionDefinition","parameters":{"id":5049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"value","nameLocation":"34406:5:6","nodeType":"VariableDeclaration","scope":5075,"src":"34398:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5047,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:6"},"returnParameters":{"id":5052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5075,"src":"34436:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5050,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:6"},"scope":5086,"src":"34380:314:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5084,"nodeType":"Block","src":"34853:87:6","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:6","statements":[{"nodeType":"YulAssignment","src":"34902:22:6","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:6"},"nodeType":"YulFunctionCall","src":"34914:9:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:6"},"nodeType":"YulFunctionCall","src":"34907:17:6"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5078,"isOffset":false,"isSlot":false,"src":"34921:1:6","valueSize":1},{"declaration":5081,"isOffset":false,"isSlot":false,"src":"34902:1:6","valueSize":1}],"flags":["memory-safe"],"id":5083,"nodeType":"InlineAssembly","src":"34863:71:6"}]},"documentation":{"id":5076,"nodeType":"StructuredDocumentation","src":"34700:90:6","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5085,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:6","nodeType":"FunctionDefinition","parameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"b","nameLocation":"34816:1:6","nodeType":"VariableDeclaration","scope":5085,"src":"34811:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5077,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:6"},"returnParameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"u","nameLocation":"34850:1:6","nodeType":"VariableDeclaration","scope":5085,"src":"34842:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5080,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:6"},"scope":5086,"src":"34795:145:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5087,"src":"769:34173:6","usedErrors":[3331,3336,3343,3348],"usedEvents":[]}],"src":"192:34751:6"},"id":6},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5086],"SignedMath":[5230]},"id":5231,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5088,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5090,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5231,"sourceUnit":5087,"src":"135:40:7","symbolAliases":[{"foreign":{"id":5089,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"143:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5091,"nodeType":"StructuredDocumentation","src":"177:80:7","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5230,"linearizedBaseContracts":[5230],"name":"SignedMath","nameLocation":"266:10:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":5120,"nodeType":"Block","src":"746:215:7","statements":[{"id":5119,"nodeType":"UncheckedBlock","src":"756:199:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5103,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"894:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5104,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"900:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5105,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"904:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5112,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"932:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5110,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5086,"src":"916:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5086_$","typeString":"type(library SafeCast)"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5085,"src":"916:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5108,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:7","typeDescriptions":{}}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5102,"id":5118,"nodeType":"Return","src":"887:57:7"}]}]},"documentation":{"id":5092,"nodeType":"StructuredDocumentation","src":"283:374:7","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5121,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:7","nodeType":"FunctionDefinition","parameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"condition","nameLocation":"684:9:7","nodeType":"VariableDeclaration","scope":5121,"src":"679:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5093,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5096,"mutability":"mutable","name":"a","nameLocation":"702:1:7","nodeType":"VariableDeclaration","scope":5121,"src":"695:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5095,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5098,"mutability":"mutable","name":"b","nameLocation":"712:1:7","nodeType":"VariableDeclaration","scope":5121,"src":"705:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5097,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:7"},"returnParameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5121,"src":"738:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5100,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:7"},"scope":5230,"src":"662:299:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5139,"nodeType":"Block","src":"1102:44:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5132,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"1127:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5133,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"1131:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5135,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"1134:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5136,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5126,"src":"1137:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5131,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"1119:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5130,"id":5138,"nodeType":"Return","src":"1112:27:7"}]},"documentation":{"id":5122,"nodeType":"StructuredDocumentation","src":"967:66:7","text":" @dev Returns the largest of two signed numbers."},"id":5140,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:7","nodeType":"FunctionDefinition","parameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"a","nameLocation":"1058:1:7","nodeType":"VariableDeclaration","scope":5140,"src":"1051:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5123,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5126,"mutability":"mutable","name":"b","nameLocation":"1068:1:7","nodeType":"VariableDeclaration","scope":5140,"src":"1061:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5125,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:7"},"returnParameters":{"id":5130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5140,"src":"1094:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5128,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:7"},"scope":5230,"src":"1038:108:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5158,"nodeType":"Block","src":"1288:44:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5151,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"1313:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5152,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"1317:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5154,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"1320:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5155,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"1323:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5150,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"1305:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5149,"id":5157,"nodeType":"Return","src":"1298:27:7"}]},"documentation":{"id":5141,"nodeType":"StructuredDocumentation","src":"1152:67:7","text":" @dev Returns the smallest of two signed numbers."},"id":5159,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:7","nodeType":"FunctionDefinition","parameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5143,"mutability":"mutable","name":"a","nameLocation":"1244:1:7","nodeType":"VariableDeclaration","scope":5159,"src":"1237:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5142,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5145,"mutability":"mutable","name":"b","nameLocation":"1254:1:7","nodeType":"VariableDeclaration","scope":5159,"src":"1247:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5144,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:7"},"returnParameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5159,"src":"1280:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5147,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:7"},"scope":5230,"src":"1224:108:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5202,"nodeType":"Block","src":"1537:162:7","statements":[{"assignments":[5170],"declarations":[{"constant":false,"id":5170,"mutability":"mutable","name":"x","nameLocation":"1606:1:7","nodeType":"VariableDeclaration","scope":5202,"src":"1599:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5169,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5183,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"1611:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5172,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"1615:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"1622:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"1626:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:7"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5184,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"1651:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5189,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"1671:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:7","typeDescriptions":{}}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5185,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:7","typeDescriptions":{}}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"1685:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"1689:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5168,"id":5201,"nodeType":"Return","src":"1644:48:7"}]},"documentation":{"id":5160,"nodeType":"StructuredDocumentation","src":"1338:126:7","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5203,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:7","nodeType":"FunctionDefinition","parameters":{"id":5165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5162,"mutability":"mutable","name":"a","nameLocation":"1493:1:7","nodeType":"VariableDeclaration","scope":5203,"src":"1486:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5161,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5164,"mutability":"mutable","name":"b","nameLocation":"1503:1:7","nodeType":"VariableDeclaration","scope":5203,"src":"1496:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5163,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:7"},"returnParameters":{"id":5168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5203,"src":"1529:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5166,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:7"},"scope":5230,"src":"1469:230:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5228,"nodeType":"Block","src":"1843:767:7","statements":[{"id":5227,"nodeType":"UncheckedBlock","src":"1853:751:7","statements":[{"assignments":[5212],"declarations":[{"constant":false,"id":5212,"mutability":"mutable","name":"mask","nameLocation":"2424:4:7","nodeType":"VariableDeclaration","scope":5227,"src":"2417:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5211,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5216,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5213,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"2431:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5219,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"2576:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5220,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"2580:4:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5223,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"2588:4:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5217,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:7","typeDescriptions":{}}},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5210,"id":5226,"nodeType":"Return","src":"2560:33:7"}]}]},"documentation":{"id":5204,"nodeType":"StructuredDocumentation","src":"1705:78:7","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5229,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:7","nodeType":"FunctionDefinition","parameters":{"id":5207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5206,"mutability":"mutable","name":"n","nameLocation":"1808:1:7","nodeType":"VariableDeclaration","scope":5229,"src":"1801:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5205,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:7"},"returnParameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5229,"src":"1834:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5208,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:7"},"scope":5230,"src":"1788:822:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5231,"src":"258:2354:7","usedErrors":[],"usedEvents":[]}],"src":"109:2504:7"},"id":7},"contracts/LandRecordsContract.sol":{"ast":{"absolutePath":"contracts/LandRecordsContract.sol","exportedSymbols":{"Context":[177],"LandRecordsContract":[6923],"Math":[3321],"Ownable":[147],"ReentrancyGuard":[298],"SafeCast":[5086],"SignedMath":[5230],"Strings":[1700]},"id":6924,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5232,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:8"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6924,"sourceUnit":148,"src":"61:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":5234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6924,"sourceUnit":299,"src":"115:59:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":5235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6924,"sourceUnit":1701,"src":"176:51:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5237,"name":"Ownable","nameLocations":["428:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"428:7:8"},"id":5238,"nodeType":"InheritanceSpecifier","src":"428:7:8"},{"baseName":{"id":5239,"name":"ReentrancyGuard","nameLocations":["437:15:8"],"nodeType":"IdentifierPath","referencedDeclaration":298,"src":"437:15:8"},"id":5240,"nodeType":"InheritanceSpecifier","src":"437:15:8"}],"canonicalName":"LandRecordsContract","contractDependencies":[],"contractKind":"contract","documentation":{"id":5236,"nodeType":"StructuredDocumentation","src":"231:163:8","text":" @title LandRecordsContract\n @dev Enhanced smart contract for tracking land records with comprehensive hash generation\n @author SARAL Bhoomi Team"},"fullyImplemented":true,"id":6923,"linearizedBaseContracts":[6923,298,147,177],"name":"LandRecordsContract","nameLocation":"405:19:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5243,"libraryName":{"id":5241,"name":"Strings","nameLocations":["466:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1700,"src":"466:7:8"},"nodeType":"UsingForDirective","src":"460:26:8","typeName":{"id":5242,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"body":{"id":5253,"nodeType":"Block","src":"552:95:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5250,"name":"_initializeDeployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"618:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"618:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5252,"nodeType":"ExpressionStatement","src":"618:21:8"}]},"id":5254,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":5246,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"540:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"544:6:8","memberName":"sender","nodeType":"MemberAccess","src":"540:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5248,"kind":"baseConstructorSpecifier","modifierName":{"id":5245,"name":"Ownable","nameLocations":["532:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"532:7:8"},"nodeType":"ModifierInvocation","src":"532:19:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5244,"nodeType":"ParameterList","parameters":[],"src":"529:2:8"},"returnParameters":{"id":5249,"nodeType":"ParameterList","parameters":[],"src":"552:0:8"},"scope":6923,"src":"518:129:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"LandRecordsContract.LandRecord","id":5277,"members":[{"constant":false,"id":5256,"mutability":"mutable","name":"surveyNumber","nameLocation":"711:12:8","nodeType":"VariableDeclaration","scope":5277,"src":"704:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5255,"name":"string","nodeType":"ElementaryTypeName","src":"704:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5258,"mutability":"mutable","name":"eventType","nameLocation":"741:9:8","nodeType":"VariableDeclaration","scope":5277,"src":"734:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5257,"name":"string","nodeType":"ElementaryTypeName","src":"734:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5260,"mutability":"mutable","name":"officer","nameLocation":"769:7:8","nodeType":"VariableDeclaration","scope":5277,"src":"761:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5259,"name":"address","nodeType":"ElementaryTypeName","src":"761:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5262,"mutability":"mutable","name":"timestamp","nameLocation":"795:9:8","nodeType":"VariableDeclaration","scope":5277,"src":"787:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5261,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5264,"mutability":"mutable","name":"metadata","nameLocation":"822:8:8","nodeType":"VariableDeclaration","scope":5277,"src":"815:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5263,"name":"string","nodeType":"ElementaryTypeName","src":"815:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5266,"mutability":"mutable","name":"blockNumber","nameLocation":"849:11:8","nodeType":"VariableDeclaration","scope":5277,"src":"841:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5265,"name":"uint256","nodeType":"ElementaryTypeName","src":"841:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5268,"mutability":"mutable","name":"isValid","nameLocation":"876:7:8","nodeType":"VariableDeclaration","scope":5277,"src":"871:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5267,"name":"bool","nodeType":"ElementaryTypeName","src":"871:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5270,"mutability":"mutable","name":"previousHash","nameLocation":"901:12:8","nodeType":"VariableDeclaration","scope":5277,"src":"894:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5269,"name":"string","nodeType":"ElementaryTypeName","src":"894:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5272,"mutability":"mutable","name":"currentHash","nameLocation":"931:11:8","nodeType":"VariableDeclaration","scope":5277,"src":"924:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5271,"name":"string","nodeType":"ElementaryTypeName","src":"924:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5274,"mutability":"mutable","name":"nonce","nameLocation":"961:5:8","nodeType":"VariableDeclaration","scope":5277,"src":"953:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5273,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5276,"mutability":"mutable","name":"dataHash","nameLocation":"984:8:8","nodeType":"VariableDeclaration","scope":5277,"src":"977:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5275,"name":"string","nodeType":"ElementaryTypeName","src":"977:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"LandRecord","nameLocation":"682:10:8","nodeType":"StructDefinition","scope":6923,"src":"675:367:8","visibility":"public"},{"canonicalName":"LandRecordsContract.SurveyData","id":5294,"members":[{"constant":false,"id":5279,"mutability":"mutable","name":"surveyNumber","nameLocation":"1090:12:8","nodeType":"VariableDeclaration","scope":5294,"src":"1083:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5278,"name":"string","nodeType":"ElementaryTypeName","src":"1083:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5281,"mutability":"mutable","name":"ownerId","nameLocation":"1120:7:8","nodeType":"VariableDeclaration","scope":5294,"src":"1113:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5280,"name":"string","nodeType":"ElementaryTypeName","src":"1113:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5283,"mutability":"mutable","name":"landType","nameLocation":"1145:8:8","nodeType":"VariableDeclaration","scope":5294,"src":"1138:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5282,"name":"string","nodeType":"ElementaryTypeName","src":"1138:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5285,"mutability":"mutable","name":"landArea","nameLocation":"1171:8:8","nodeType":"VariableDeclaration","scope":5294,"src":"1164:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5284,"name":"string","nodeType":"ElementaryTypeName","src":"1164:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5287,"mutability":"mutable","name":"location","nameLocation":"1197:8:8","nodeType":"VariableDeclaration","scope":5294,"src":"1190:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5286,"name":"string","nodeType":"ElementaryTypeName","src":"1190:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5289,"mutability":"mutable","name":"projectDetails","nameLocation":"1223:14:8","nodeType":"VariableDeclaration","scope":5294,"src":"1216:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5288,"name":"string","nodeType":"ElementaryTypeName","src":"1216:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5291,"mutability":"mutable","name":"lastUpdated","nameLocation":"1256:11:8","nodeType":"VariableDeclaration","scope":5294,"src":"1248:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1248:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5293,"mutability":"mutable","name":"isActive","nameLocation":"1283:8:8","nodeType":"VariableDeclaration","scope":5294,"src":"1278:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5292,"name":"bool","nodeType":"ElementaryTypeName","src":"1278:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SurveyData","nameLocation":"1061:10:8","nodeType":"StructDefinition","scope":6923,"src":"1054:245:8","visibility":"public"},{"canonicalName":"LandRecordsContract.Officer","id":5309,"members":[{"constant":false,"id":5296,"mutability":"mutable","name":"officerAddress","nameLocation":"1345:14:8","nodeType":"VariableDeclaration","scope":5309,"src":"1337:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5295,"name":"address","nodeType":"ElementaryTypeName","src":"1337:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5298,"mutability":"mutable","name":"name","nameLocation":"1377:4:8","nodeType":"VariableDeclaration","scope":5309,"src":"1370:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5297,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5300,"mutability":"mutable","name":"designation","nameLocation":"1399:11:8","nodeType":"VariableDeclaration","scope":5309,"src":"1392:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5299,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5302,"mutability":"mutable","name":"district","nameLocation":"1428:8:8","nodeType":"VariableDeclaration","scope":5309,"src":"1421:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5301,"name":"string","nodeType":"ElementaryTypeName","src":"1421:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5304,"mutability":"mutable","name":"taluka","nameLocation":"1454:6:8","nodeType":"VariableDeclaration","scope":5309,"src":"1447:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5303,"name":"string","nodeType":"ElementaryTypeName","src":"1447:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5306,"mutability":"mutable","name":"isActive","nameLocation":"1476:8:8","nodeType":"VariableDeclaration","scope":5309,"src":"1471:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5305,"name":"bool","nodeType":"ElementaryTypeName","src":"1471:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5308,"mutability":"mutable","name":"registrationDate","nameLocation":"1503:16:8","nodeType":"VariableDeclaration","scope":5309,"src":"1495:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1495:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Officer","nameLocation":"1318:7:8","nodeType":"StructDefinition","scope":6923,"src":"1311:216:8","visibility":"public"},{"canonicalName":"LandRecordsContract.TimelineEvent","id":5332,"members":[{"constant":false,"id":5311,"mutability":"mutable","name":"eventType","nameLocation":"1643:9:8","nodeType":"VariableDeclaration","scope":5332,"src":"1636:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5310,"name":"string","nodeType":"ElementaryTypeName","src":"1636:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5313,"mutability":"mutable","name":"ownerId","nameLocation":"1734:7:8","nodeType":"VariableDeclaration","scope":5332,"src":"1727:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5312,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5315,"mutability":"mutable","name":"surveyNumber","nameLocation":"1805:12:8","nodeType":"VariableDeclaration","scope":5332,"src":"1798:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5314,"name":"string","nodeType":"ElementaryTypeName","src":"1798:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5317,"mutability":"mutable","name":"landType","nameLocation":"1859:8:8","nodeType":"VariableDeclaration","scope":5332,"src":"1852:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5316,"name":"string","nodeType":"ElementaryTypeName","src":"1852:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5319,"mutability":"mutable","name":"details","nameLocation":"1919:7:8","nodeType":"VariableDeclaration","scope":5332,"src":"1912:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5318,"name":"string","nodeType":"ElementaryTypeName","src":"1912:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5321,"mutability":"mutable","name":"timestamp","nameLocation":"1981:9:8","nodeType":"VariableDeclaration","scope":5332,"src":"1973:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5323,"mutability":"mutable","name":"officer","nameLocation":"2041:7:8","nodeType":"VariableDeclaration","scope":5332,"src":"2033:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5322,"name":"address","nodeType":"ElementaryTypeName","src":"2033:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5325,"mutability":"mutable","name":"eventHash","nameLocation":"2107:9:8","nodeType":"VariableDeclaration","scope":5332,"src":"2100:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5324,"name":"string","nodeType":"ElementaryTypeName","src":"2100:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5327,"mutability":"mutable","name":"previousHash","nameLocation":"2175:12:8","nodeType":"VariableDeclaration","scope":5332,"src":"2168:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5326,"name":"string","nodeType":"ElementaryTypeName","src":"2168:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5329,"mutability":"mutable","name":"eventIndex","nameLocation":"2239:10:8","nodeType":"VariableDeclaration","scope":5332,"src":"2231:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2231:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5331,"mutability":"mutable","name":"isValid","nameLocation":"2294:7:8","nodeType":"VariableDeclaration","scope":5332,"src":"2289:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5330,"name":"bool","nodeType":"ElementaryTypeName","src":"2289:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"TimelineEvent","nameLocation":"1611:13:8","nodeType":"StructDefinition","scope":6923,"src":"1604:744:8","visibility":"public"},{"canonicalName":"LandRecordsContract.IntegrityCheck","id":5345,"members":[{"constant":false,"id":5334,"mutability":"mutable","name":"surveyNumber","nameLocation":"2443:12:8","nodeType":"VariableDeclaration","scope":5345,"src":"2436:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5333,"name":"string","nodeType":"ElementaryTypeName","src":"2436:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5336,"mutability":"mutable","name":"databaseHash","nameLocation":"2473:12:8","nodeType":"VariableDeclaration","scope":5345,"src":"2466:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5335,"name":"string","nodeType":"ElementaryTypeName","src":"2466:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5338,"mutability":"mutable","name":"blockchainHash","nameLocation":"2503:14:8","nodeType":"VariableDeclaration","scope":5345,"src":"2496:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5337,"name":"string","nodeType":"ElementaryTypeName","src":"2496:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5340,"mutability":"mutable","name":"lastChecked","nameLocation":"2536:11:8","nodeType":"VariableDeclaration","scope":5345,"src":"2528:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5339,"name":"uint256","nodeType":"ElementaryTypeName","src":"2528:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5342,"mutability":"mutable","name":"isCompromised","nameLocation":"2563:13:8","nodeType":"VariableDeclaration","scope":5345,"src":"2558:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5341,"name":"bool","nodeType":"ElementaryTypeName","src":"2558:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5344,"mutability":"mutable","name":"compromiseReason","nameLocation":"2594:16:8","nodeType":"VariableDeclaration","scope":5345,"src":"2587:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5343,"name":"string","nodeType":"ElementaryTypeName","src":"2587:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"IntegrityCheck","nameLocation":"2410:14:8","nodeType":"StructDefinition","scope":6923,"src":"2403:215:8","visibility":"public"},{"constant":false,"functionSelector":"eda03aa7","id":5351,"mutability":"mutable","name":"landRecords","nameLocation":"2693:11:8","nodeType":"VariableDeclaration","scope":6923,"src":"2654:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_$","typeString":"mapping(string => struct LandRecordsContract.LandRecord[])"},"typeName":{"id":5350,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5346,"name":"string","nodeType":"ElementaryTypeName","src":"2662:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"2654:31:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_$","typeString":"mapping(string => struct LandRecordsContract.LandRecord[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":5348,"nodeType":"UserDefinedTypeName","pathNode":{"id":5347,"name":"LandRecord","nameLocations":["2672:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":5277,"src":"2672:10:8"},"referencedDeclaration":5277,"src":"2672:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_storage_ptr","typeString":"struct LandRecordsContract.LandRecord"}},"id":5349,"nodeType":"ArrayTypeName","src":"2672:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_ptr","typeString":"struct LandRecordsContract.LandRecord[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"de0c6ff4","id":5356,"mutability":"mutable","name":"surveyData","nameLocation":"2748:10:8","nodeType":"VariableDeclaration","scope":6923,"src":"2711:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_SurveyData_$5294_storage_$","typeString":"mapping(string => struct LandRecordsContract.SurveyData)"},"typeName":{"id":5355,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5352,"name":"string","nodeType":"ElementaryTypeName","src":"2719:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"2711:29:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_SurveyData_$5294_storage_$","typeString":"mapping(string => struct LandRecordsContract.SurveyData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5354,"nodeType":"UserDefinedTypeName","pathNode":{"id":5353,"name":"SurveyData","nameLocations":["2729:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":5294,"src":"2729:10:8"},"referencedDeclaration":5294,"src":"2729:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SurveyData_$5294_storage_ptr","typeString":"struct LandRecordsContract.SurveyData"}}},"visibility":"public"},{"constant":false,"functionSelector":"084866dd","id":5361,"mutability":"mutable","name":"officers","nameLocation":"2800:8:8","nodeType":"VariableDeclaration","scope":6923,"src":"2765:43:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5309_storage_$","typeString":"mapping(address => struct LandRecordsContract.Officer)"},"typeName":{"id":5360,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5357,"name":"address","nodeType":"ElementaryTypeName","src":"2773:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2765:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5309_storage_$","typeString":"mapping(address => struct LandRecordsContract.Officer)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5359,"nodeType":"UserDefinedTypeName","pathNode":{"id":5358,"name":"Officer","nameLocations":["2784:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":5309,"src":"2784:7:8"},"referencedDeclaration":5309,"src":"2784:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_storage_ptr","typeString":"struct LandRecordsContract.Officer"}}},"visibility":"public"},{"constant":false,"functionSelector":"4a7b7677","id":5365,"mutability":"mutable","name":"authorizedOfficers","nameLocation":"2847:18:8","nodeType":"VariableDeclaration","scope":6923,"src":"2815:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":5364,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5362,"name":"address","nodeType":"ElementaryTypeName","src":"2823:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2815:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5363,"name":"bool","nodeType":"ElementaryTypeName","src":"2834:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"b893bb10","id":5369,"mutability":"mutable","name":"surveyDataHashes","nameLocation":"2905:16:8","nodeType":"VariableDeclaration","scope":6923,"src":"2872:49:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"typeName":{"id":5368,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5366,"name":"string","nodeType":"ElementaryTypeName","src":"2880:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"2872:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5367,"name":"string","nodeType":"ElementaryTypeName","src":"2890:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"a58bf0b1","id":5375,"mutability":"mutable","name":"surveyTimeline","nameLocation":"3067:14:8","nodeType":"VariableDeclaration","scope":6923,"src":"3025:56:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage_$","typeString":"mapping(string => struct LandRecordsContract.TimelineEvent[])"},"typeName":{"id":5374,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5370,"name":"string","nodeType":"ElementaryTypeName","src":"3033:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"3025:34:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage_$","typeString":"mapping(string => struct LandRecordsContract.TimelineEvent[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":5372,"nodeType":"UserDefinedTypeName","pathNode":{"id":5371,"name":"TimelineEvent","nameLocations":["3043:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":5332,"src":"3043:13:8"},"referencedDeclaration":5332,"src":"3043:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_storage_ptr","typeString":"struct LandRecordsContract.TimelineEvent"}},"id":5373,"nodeType":"ArrayTypeName","src":"3043:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage_ptr","typeString":"struct LandRecordsContract.TimelineEvent[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"8c154ac8","id":5379,"mutability":"mutable","name":"surveyTimelineCount","nameLocation":"3150:19:8","nodeType":"VariableDeclaration","scope":6923,"src":"3116:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":5378,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5376,"name":"string","nodeType":"ElementaryTypeName","src":"3124:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"3116:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3134:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"67ae9d21","id":5383,"mutability":"mutable","name":"surveyCurrentTimelineHash","nameLocation":"3239:25:8","nodeType":"VariableDeclaration","scope":6923,"src":"3206:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"typeName":{"id":5382,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5380,"name":"string","nodeType":"ElementaryTypeName","src":"3214:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"3206:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5381,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"public"},{"constant":false,"functionSelector":"f04b5aab","id":5387,"mutability":"mutable","name":"surveyIntegrityStatus","nameLocation":"3327:21:8","nodeType":"VariableDeclaration","scope":6923,"src":"3296:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":5386,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5384,"name":"string","nodeType":"ElementaryTypeName","src":"3304:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"3296:23:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5385,"name":"bool","nodeType":"ElementaryTypeName","src":"3314:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"d41eec4e","id":5392,"mutability":"mutable","name":"integrityChecks","nameLocation":"3431:15:8","nodeType":"VariableDeclaration","scope":6923,"src":"3390:56:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_IntegrityCheck_$5345_storage_$","typeString":"mapping(string => struct LandRecordsContract.IntegrityCheck)"},"typeName":{"id":5391,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5388,"name":"string","nodeType":"ElementaryTypeName","src":"3398:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"3390:33:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_IntegrityCheck_$5345_storage_$","typeString":"mapping(string => struct LandRecordsContract.IntegrityCheck)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5390,"nodeType":"UserDefinedTypeName","pathNode":{"id":5389,"name":"IntegrityCheck","nameLocations":["3408:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":5345,"src":"3408:14:8"},"referencedDeclaration":5345,"src":"3408:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_IntegrityCheck_$5345_storage_ptr","typeString":"struct LandRecordsContract.IntegrityCheck"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"e85d545caa9029b0e323a8d64a4b1faba24f52accb1e5a05efd882c6ae9c2492","id":5408,"name":"LandRecordUpdated","nameLocation":"3507:17:8","nodeType":"EventDefinition","parameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"indexed":true,"mutability":"mutable","name":"surveyNumber","nameLocation":"3550:12:8","nodeType":"VariableDeclaration","scope":5408,"src":"3535:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5393,"name":"string","nodeType":"ElementaryTypeName","src":"3535:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5396,"indexed":false,"mutability":"mutable","name":"eventType","nameLocation":"3580:9:8","nodeType":"VariableDeclaration","scope":5408,"src":"3573:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5395,"name":"string","nodeType":"ElementaryTypeName","src":"3573:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5398,"indexed":true,"mutability":"mutable","name":"officer","nameLocation":"3616:7:8","nodeType":"VariableDeclaration","scope":5408,"src":"3600:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5397,"name":"address","nodeType":"ElementaryTypeName","src":"3600:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5400,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3642:9:8","nodeType":"VariableDeclaration","scope":5408,"src":"3634:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3634:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5402,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"3669:8:8","nodeType":"VariableDeclaration","scope":5408,"src":"3662:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5401,"name":"string","nodeType":"ElementaryTypeName","src":"3662:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5404,"indexed":false,"mutability":"mutable","name":"blockNumber","nameLocation":"3696:11:8","nodeType":"VariableDeclaration","scope":5408,"src":"3688:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5403,"name":"uint256","nodeType":"ElementaryTypeName","src":"3688:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5406,"indexed":false,"mutability":"mutable","name":"dataHash","nameLocation":"3725:8:8","nodeType":"VariableDeclaration","scope":5408,"src":"3718:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5405,"name":"string","nodeType":"ElementaryTypeName","src":"3718:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3524:216:8"},"src":"3501:240:8"},{"anonymous":false,"eventSelector":"68375f142c78057cdafc077f46de16ba1149b3d9ec67c8c315f7a48b859722c4","id":5420,"name":"SurveyDataUpdated","nameLocation":"3759:17:8","nodeType":"EventDefinition","parameters":{"id":5419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5410,"indexed":true,"mutability":"mutable","name":"surveyNumber","nameLocation":"3802:12:8","nodeType":"VariableDeclaration","scope":5420,"src":"3787:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5409,"name":"string","nodeType":"ElementaryTypeName","src":"3787:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5412,"indexed":false,"mutability":"mutable","name":"ownerId","nameLocation":"3832:7:8","nodeType":"VariableDeclaration","scope":5420,"src":"3825:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5411,"name":"string","nodeType":"ElementaryTypeName","src":"3825:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5414,"indexed":false,"mutability":"mutable","name":"landType","nameLocation":"3857:8:8","nodeType":"VariableDeclaration","scope":5420,"src":"3850:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5413,"name":"string","nodeType":"ElementaryTypeName","src":"3850:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5416,"indexed":false,"mutability":"mutable","name":"dataHash","nameLocation":"3883:8:8","nodeType":"VariableDeclaration","scope":5420,"src":"3876:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5415,"name":"string","nodeType":"ElementaryTypeName","src":"3876:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5418,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3910:9:8","nodeType":"VariableDeclaration","scope":5420,"src":"3902:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3776:150:8"},"src":"3753:174:8"},{"anonymous":false,"eventSelector":"c5d4b575e5bdb27802d44e5cdbe4804d1c9b0c111cdf21a596835e7424e6c7c4","id":5432,"name":"OfficerRegistered","nameLocation":"3945:17:8","nodeType":"EventDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5422,"indexed":true,"mutability":"mutable","name":"officerAddress","nameLocation":"3989:14:8","nodeType":"VariableDeclaration","scope":5432,"src":"3973:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5421,"name":"address","nodeType":"ElementaryTypeName","src":"3973:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5424,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"4021:4:8","nodeType":"VariableDeclaration","scope":5432,"src":"4014:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5423,"name":"string","nodeType":"ElementaryTypeName","src":"4014:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5426,"indexed":false,"mutability":"mutable","name":"designation","nameLocation":"4043:11:8","nodeType":"VariableDeclaration","scope":5432,"src":"4036:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5425,"name":"string","nodeType":"ElementaryTypeName","src":"4036:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5428,"indexed":false,"mutability":"mutable","name":"district","nameLocation":"4072:8:8","nodeType":"VariableDeclaration","scope":5432,"src":"4065:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5427,"name":"string","nodeType":"ElementaryTypeName","src":"4065:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5430,"indexed":false,"mutability":"mutable","name":"taluka","nameLocation":"4098:6:8","nodeType":"VariableDeclaration","scope":5432,"src":"4091:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5429,"name":"string","nodeType":"ElementaryTypeName","src":"4091:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3962:149:8"},"src":"3939:173:8"},{"anonymous":false,"eventSelector":"8a40ef3e42980aa96509d3e2e04b0c037f32d7251181d8843c0cb9b3378c99df","id":5438,"name":"OfficerStatusChanged","nameLocation":"4130:20:8","nodeType":"EventDefinition","parameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5434,"indexed":true,"mutability":"mutable","name":"officerAddress","nameLocation":"4177:14:8","nodeType":"VariableDeclaration","scope":5438,"src":"4161:30:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5433,"name":"address","nodeType":"ElementaryTypeName","src":"4161:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5436,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"4207:8:8","nodeType":"VariableDeclaration","scope":5438,"src":"4202:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5435,"name":"bool","nodeType":"ElementaryTypeName","src":"4202:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4150:72:8"},"src":"4124:99:8"},{"anonymous":false,"eventSelector":"128778f26baa9f7315389ec7cf48371494bad555182f0b0507e85dfdfdf0a445","id":5452,"name":"TimelineEventAdded","nameLocation":"4288:18:8","nodeType":"EventDefinition","parameters":{"id":5451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5440,"indexed":true,"mutability":"mutable","name":"surveyNumber","nameLocation":"4332:12:8","nodeType":"VariableDeclaration","scope":5452,"src":"4317:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5439,"name":"string","nodeType":"ElementaryTypeName","src":"4317:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5442,"indexed":false,"mutability":"mutable","name":"eventType","nameLocation":"4362:9:8","nodeType":"VariableDeclaration","scope":5452,"src":"4355:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5441,"name":"string","nodeType":"ElementaryTypeName","src":"4355:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5444,"indexed":false,"mutability":"mutable","name":"ownerId","nameLocation":"4389:7:8","nodeType":"VariableDeclaration","scope":5452,"src":"4382:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5443,"name":"string","nodeType":"ElementaryTypeName","src":"4382:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5446,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4415:9:8","nodeType":"VariableDeclaration","scope":5452,"src":"4407:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"4407:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5448,"indexed":false,"mutability":"mutable","name":"eventHash","nameLocation":"4442:9:8","nodeType":"VariableDeclaration","scope":5452,"src":"4435:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5447,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5450,"indexed":false,"mutability":"mutable","name":"eventIndex","nameLocation":"4470:10:8","nodeType":"VariableDeclaration","scope":5452,"src":"4462:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5449,"name":"uint256","nodeType":"ElementaryTypeName","src":"4462:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4306:181:8"},"src":"4282:206:8"},{"anonymous":false,"eventSelector":"3f8dafeb5450b12547cad6d7f76b6c1f7808f789148f742314a6499132c95552","id":5460,"name":"IntegrityCheckPerformed","nameLocation":"4506:23:8","nodeType":"EventDefinition","parameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5454,"indexed":true,"mutability":"mutable","name":"surveyNumber","nameLocation":"4555:12:8","nodeType":"VariableDeclaration","scope":5460,"src":"4540:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5453,"name":"string","nodeType":"ElementaryTypeName","src":"4540:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5456,"indexed":false,"mutability":"mutable","name":"isCompromised","nameLocation":"4583:13:8","nodeType":"VariableDeclaration","scope":5460,"src":"4578:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5455,"name":"bool","nodeType":"ElementaryTypeName","src":"4578:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5458,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"4614:6:8","nodeType":"VariableDeclaration","scope":5460,"src":"4607:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5457,"name":"string","nodeType":"ElementaryTypeName","src":"4607:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4529:98:8"},"src":"4500:128:8"},{"anonymous":false,"eventSelector":"2f32fddd89c87048cdbc120d2afd8519ab4d1664738f25e8475b703dc21eaaec","id":5468,"name":"SurveyBlockCreated","nameLocation":"4646:18:8","nodeType":"EventDefinition","parameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"indexed":true,"mutability":"mutable","name":"surveyNumber","nameLocation":"4690:12:8","nodeType":"VariableDeclaration","scope":5468,"src":"4675:27:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5461,"name":"string","nodeType":"ElementaryTypeName","src":"4675:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5464,"indexed":false,"mutability":"mutable","name":"initialHash","nameLocation":"4720:11:8","nodeType":"VariableDeclaration","scope":5468,"src":"4713:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5463,"name":"string","nodeType":"ElementaryTypeName","src":"4713:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5466,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4750:9:8","nodeType":"VariableDeclaration","scope":5468,"src":"4742:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5465,"name":"uint256","nodeType":"ElementaryTypeName","src":"4742:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4664:102:8"},"src":"4640:127:8"},{"body":{"id":5479,"nodeType":"Block","src":"4830:122:8","statements":[{"expression":{"arguments":[{"baseExpression":{"id":5471,"name":"authorizedOfficers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"4849:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5474,"indexExpression":{"expression":{"id":5472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4868:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4872:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4868:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4849:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920617574686f72697a6564206f666669636572732063616e20706572666f726d207468697320616374696f6e","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4881:50:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_03c5a75e1dd0f14cf958bc31d4ad6080f025558e392454e160be48afc7c59b00","typeString":"literal_string \"Only authorized officers can perform this action\""},"value":"Only authorized officers can perform this action"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03c5a75e1dd0f14cf958bc31d4ad6080f025558e392454e160be48afc7c59b00","typeString":"literal_string \"Only authorized officers can perform this action\""}],"id":5470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4841:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4841:91:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5477,"nodeType":"ExpressionStatement","src":"4841:91:8"},{"id":5478,"nodeType":"PlaceholderStatement","src":"4943:1:8"}]},"id":5480,"name":"onlyAuthorizedOfficer","nameLocation":"4806:21:8","nodeType":"ModifierDefinition","parameters":{"id":5469,"nodeType":"ParameterList","parameters":[],"src":"4827:2:8"},"src":"4797:155:8","virtual":false,"visibility":"internal"},{"body":{"id":5496,"nodeType":"Block","src":"5023:103:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5487,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5482,"src":"5048:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5042:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5485,"name":"bytes","nodeType":"ElementaryTypeName","src":"5042:5:8","typeDescriptions":{}}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5062:6:8","memberName":"length","nodeType":"MemberAccess","src":"5042:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5071:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5042:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537572766579206e756d6265722063616e6e6f7420626520656d707479","id":5492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5074:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_419b9db860bf372355173a40d0d0b4d881c60bfae82951d8e24d8e373c0098ee","typeString":"literal_string \"Survey number cannot be empty\""},"value":"Survey number cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_419b9db860bf372355173a40d0d0b4d881c60bfae82951d8e24d8e373c0098ee","typeString":"literal_string \"Survey number cannot be empty\""}],"id":5484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5034:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5034:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5494,"nodeType":"ExpressionStatement","src":"5034:72:8"},{"id":5495,"nodeType":"PlaceholderStatement","src":"5117:1:8"}]},"id":5497,"name":"onlyValidSurveyNumber","nameLocation":"4973:21:8","nodeType":"ModifierDefinition","parameters":{"id":5483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5482,"mutability":"mutable","name":"surveyNumber","nameLocation":"5009:12:8","nodeType":"VariableDeclaration","scope":5497,"src":"4995:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5481,"name":"string","nodeType":"ElementaryTypeName","src":"4995:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4994:28:8"},"src":"4964:162:8","virtual":false,"visibility":"internal"},{"body":{"id":5507,"nodeType":"Block","src":"5249:56:8","statements":[{"expression":{"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5500,"name":"authorizedOfficers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"5260:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5503,"indexExpression":{"expression":{"id":5501,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5279:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5283:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5279:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5260:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5293:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5260:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5506,"nodeType":"ExpressionStatement","src":"5260:37:8"}]},"id":5508,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeDeployer","nameLocation":"5218:19:8","nodeType":"FunctionDefinition","parameters":{"id":5498,"nodeType":"ParameterList","parameters":[],"src":"5237:2:8"},"returnParameters":{"id":5499,"nodeType":"ParameterList","parameters":[],"src":"5249:0:8"},"scope":6923,"src":"5209:96:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5550,"nodeType":"Block","src":"6061:439:8","statements":[{"assignments":[5529],"declarations":[{"constant":false,"id":5529,"mutability":"mutable","name":"combinedData","nameLocation":"6148:12:8","nodeType":"VariableDeclaration","scope":5550,"src":"6134:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5528,"name":"string","nodeType":"ElementaryTypeName","src":"6134:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5545,"initialValue":{"arguments":[{"arguments":[{"id":5534,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5511,"src":"6201:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5535,"name":"ownerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5513,"src":"6228:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5536,"name":"landType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"6250:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5537,"name":"landArea","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"6273:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5538,"name":"location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"6296:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5539,"name":"projectDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"6319:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5540,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"6348:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":412,"src":"6348:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6348:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":5532,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6170:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6174:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"6170:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:209:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6163:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5530,"name":"string","nodeType":"ElementaryTypeName","src":"6163:6:8","typeDescriptions":{}}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6163:217:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6134:246:8"},{"expression":{"arguments":[{"id":5547,"name":"combinedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"6479:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5546,"name":"_generateHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"6465:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6465:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5527,"id":5549,"nodeType":"Return","src":"6458:34:8"}]},"documentation":{"id":5509,"nodeType":"StructuredDocumentation","src":"5317:419:8","text":" @dev Generate comprehensive hash from all survey number related data\n @param surveyNumber The survey number\n @param ownerId Owner ID\n @param landType Type of land\n @param landArea Area of land\n @param location Location details\n @param projectDetails Project information\n @param timestamp Current timestamp\n @return dataHash The generated hash"},"functionSelector":"b3475060","id":5551,"implemented":true,"kind":"function","modifiers":[],"name":"generateSurveyDataHash","nameLocation":"5751:22:8","nodeType":"FunctionDefinition","parameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"mutability":"mutable","name":"surveyNumber","nameLocation":"5798:12:8","nodeType":"VariableDeclaration","scope":5551,"src":"5784:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5510,"name":"string","nodeType":"ElementaryTypeName","src":"5784:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5513,"mutability":"mutable","name":"ownerId","nameLocation":"5835:7:8","nodeType":"VariableDeclaration","scope":5551,"src":"5821:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5512,"name":"string","nodeType":"ElementaryTypeName","src":"5821:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5515,"mutability":"mutable","name":"landType","nameLocation":"5867:8:8","nodeType":"VariableDeclaration","scope":5551,"src":"5853:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5514,"name":"string","nodeType":"ElementaryTypeName","src":"5853:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5517,"mutability":"mutable","name":"landArea","nameLocation":"5900:8:8","nodeType":"VariableDeclaration","scope":5551,"src":"5886:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5516,"name":"string","nodeType":"ElementaryTypeName","src":"5886:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5519,"mutability":"mutable","name":"location","nameLocation":"5933:8:8","nodeType":"VariableDeclaration","scope":5551,"src":"5919:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5518,"name":"string","nodeType":"ElementaryTypeName","src":"5919:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5521,"mutability":"mutable","name":"projectDetails","nameLocation":"5966:14:8","nodeType":"VariableDeclaration","scope":5551,"src":"5952:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5520,"name":"string","nodeType":"ElementaryTypeName","src":"5952:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5523,"mutability":"mutable","name":"timestamp","nameLocation":"5999:9:8","nodeType":"VariableDeclaration","scope":5551,"src":"5991:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5522,"name":"uint256","nodeType":"ElementaryTypeName","src":"5991:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5773:242:8"},"returnParameters":{"id":5527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5526,"mutability":"mutable","name":"dataHash","nameLocation":"6051:8:8","nodeType":"VariableDeclaration","scope":5551,"src":"6037:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5525,"name":"string","nodeType":"ElementaryTypeName","src":"6037:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6036:24:8"},"scope":6923,"src":"5742:758:8","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":5711,"nodeType":"Block","src":"7389:2423:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5579,"name":"eventType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"7414:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7408:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5577,"name":"bytes","nodeType":"ElementaryTypeName","src":"7408:5:8","typeDescriptions":{}}},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7408:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7425:6:8","memberName":"length","nodeType":"MemberAccess","src":"7408:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7434:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7408:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420747970652063616e6e6f7420626520656d707479","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7437:28:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e16328aee74a768cfe589dfb893be984021ba9add8c186afcada86f750ed8c97","typeString":"literal_string \"Event type cannot be empty\""},"value":"Event type cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e16328aee74a768cfe589dfb893be984021ba9add8c186afcada86f750ed8c97","typeString":"literal_string \"Event type cannot be empty\""}],"id":5576,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7400:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5586,"nodeType":"ExpressionStatement","src":"7400:66:8"},{"assignments":[5588],"declarations":[{"constant":false,"id":5588,"mutability":"mutable","name":"timestamp","nameLocation":"7495:9:8","nodeType":"VariableDeclaration","scope":5711,"src":"7487:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5587,"name":"uint256","nodeType":"ElementaryTypeName","src":"7487:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5591,"initialValue":{"expression":{"id":5589,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7507:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7513:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"7507:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7487:35:8"},{"assignments":[5593],"declarations":[{"constant":false,"id":5593,"mutability":"mutable","name":"newDataHash","nameLocation":"7592:11:8","nodeType":"VariableDeclaration","scope":5711,"src":"7578:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5592,"name":"string","nodeType":"ElementaryTypeName","src":"7578:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5603,"initialValue":{"arguments":[{"id":5595,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"7643:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5596,"name":"ownerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"7670:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5597,"name":"landType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"7692:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5598,"name":"landArea","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"7715:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5599,"name":"location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"7738:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5600,"name":"projectDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"7761:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5601,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"7790:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5594,"name":"generateSurveyDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"7606:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (string memory,string memory,string memory,string memory,string memory,string memory,uint256) pure returns (string memory)"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7606:204:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7578:232:8"},{"assignments":[5605],"declarations":[{"constant":false,"id":5605,"mutability":"mutable","name":"previousHash","nameLocation":"7898:12:8","nodeType":"VariableDeclaration","scope":5711,"src":"7884:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5604,"name":"string","nodeType":"ElementaryTypeName","src":"7884:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5609,"initialValue":{"baseExpression":{"id":5606,"name":"surveyDataHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"7913:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":5608,"indexExpression":{"id":5607,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"7930:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7913:30:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7884:59:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5612,"name":"previousHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"7964:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7958:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5610,"name":"bytes","nodeType":"ElementaryTypeName","src":"7958:5:8","typeDescriptions":{}}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7958:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:8","memberName":"length","nodeType":"MemberAccess","src":"7958:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7988:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7958:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5622,"nodeType":"IfStatement","src":"7954:82:8","trueBody":{"id":5621,"nodeType":"Block","src":"7991:45:8","statements":[{"expression":{"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5617,"name":"previousHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"8006:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8021:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"8006:18:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5620,"nodeType":"ExpressionStatement","src":"8006:18:8"}]}},{"assignments":[5624],"declarations":[{"constant":false,"id":5624,"mutability":"mutable","name":"currentHash","nameLocation":"8104:11:8","nodeType":"VariableDeclaration","scope":5711,"src":"8090:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5623,"name":"string","nodeType":"ElementaryTypeName","src":"8090:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5642,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5630,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"8170:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5631,"name":"eventType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"8197:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":5632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8221:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8225:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8221:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5634,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"8246:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8256:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":412,"src":"8246:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8246:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5637,"name":"newDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"8281:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5638,"name":"previousHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"8307:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":5628,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8139:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8143:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"8139:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:191:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8132:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5626,"name":"string","nodeType":"ElementaryTypeName","src":"8132:6:8","typeDescriptions":{}}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:199:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5625,"name":"_generateHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"8118:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8118:214:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8090:242:8"},{"assignments":[5645],"declarations":[{"constant":false,"id":5645,"mutability":"mutable","name":"newRecord","nameLocation":"8401:9:8","nodeType":"VariableDeclaration","scope":5711,"src":"8383:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord"},"typeName":{"id":5644,"nodeType":"UserDefinedTypeName","pathNode":{"id":5643,"name":"LandRecord","nameLocations":["8383:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":5277,"src":"8383:10:8"},"referencedDeclaration":5277,"src":"8383:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_storage_ptr","typeString":"struct LandRecordsContract.LandRecord"}},"visibility":"internal"}],"id":5662,"initialValue":{"arguments":[{"id":5647,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"8453:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5648,"name":"eventType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"8491:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":5649,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8524:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8528:6:8","memberName":"sender","nodeType":"MemberAccess","src":"8524:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5651,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"8560:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5652,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"8594:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":5653,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8630:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8636:6:8","memberName":"number","nodeType":"MemberAccess","src":"8630:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8666:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5656,"name":"previousHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"8699:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5657,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"8739:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":5658,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8772:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8778:6:8","memberName":"number","nodeType":"MemberAccess","src":"8772:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5660,"name":"newDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"8809:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5646,"name":"LandRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"8413:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_LandRecord_$5277_storage_ptr_$","typeString":"type(struct LandRecordsContract.LandRecord storage pointer)"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8439:12:8","8480:9:8","8515:7:8","8549:9:8","8584:8:8","8617:11:8","8657:7:8","8685:12:8","8726:11:8","8765:5:8","8799:8:8"],"names":["surveyNumber","eventType","officer","timestamp","metadata","blockNumber","isValid","previousHash","currentHash","nonce","dataHash"],"nodeType":"FunctionCall","src":"8413:419:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory"}},"nodeType":"VariableDeclarationStatement","src":"8383:449:8"},{"expression":{"arguments":[{"id":5667,"name":"newRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8884:9:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory"}],"expression":{"baseExpression":{"id":5663,"name":"landRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"8853:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.LandRecord storage ref[] storage ref)"}},"id":5665,"indexExpression":{"id":5664,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"8865:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8853:25:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage","typeString":"struct LandRecordsContract.LandRecord storage ref[] storage ref"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8879:4:8","memberName":"push","nodeType":"MemberAccess","src":"8853:30:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_ptr_$_t_struct$_LandRecord_$5277_storage_$returns$__$attached_to$_t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_ptr_$","typeString":"function (struct LandRecordsContract.LandRecord storage ref[] storage pointer,struct LandRecordsContract.LandRecord storage ref)"}},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8853:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5669,"nodeType":"ExpressionStatement","src":"8853:41:8"},{"expression":{"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5670,"name":"surveyData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"8946:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_SurveyData_$5294_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.SurveyData storage ref)"}},"id":5672,"indexExpression":{"id":5671,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"8957:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_SurveyData_$5294_storage","typeString":"struct LandRecordsContract.SurveyData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5674,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"9013:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5675,"name":"ownerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"9049:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5676,"name":"landType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"9081:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5677,"name":"landArea","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"9114:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5678,"name":"location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"9147:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5679,"name":"projectDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5568,"src":"9186:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5680,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"9228:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9262:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5673,"name":"SurveyData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"8973:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SurveyData_$5294_storage_ptr_$","typeString":"type(struct LandRecordsContract.SurveyData storage pointer)"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8999:12:8","9040:7:8","9071:8:8","9104:8:8","9137:8:8","9170:14:8","9215:11:8","9252:8:8"],"names":["surveyNumber","ownerId","landType","landArea","location","projectDetails","lastUpdated","isActive"],"nodeType":"FunctionCall","src":"8973:305:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SurveyData_$5294_memory_ptr","typeString":"struct LandRecordsContract.SurveyData memory"}},"src":"8946:332:8","typeDescriptions":{"typeIdentifier":"t_struct$_SurveyData_$5294_storage","typeString":"struct LandRecordsContract.SurveyData storage ref"}},"id":5684,"nodeType":"ExpressionStatement","src":"8946:332:8"},{"expression":{"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5685,"name":"surveyDataHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"9354:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":5687,"indexExpression":{"id":5686,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"9371:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9354:30:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5688,"name":"currentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"9387:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"9354:44:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5690,"nodeType":"ExpressionStatement","src":"9354:44:8"},{"eventCall":{"arguments":[{"id":5692,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"9456:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5693,"name":"eventType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"9483:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":5694,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9507:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9511:6:8","memberName":"sender","nodeType":"MemberAccess","src":"9507:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5696,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"9532:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5697,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"9556:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":5698,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9579:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9585:6:8","memberName":"number","nodeType":"MemberAccess","src":"9579:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5700,"name":"newDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"9606:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5691,"name":"LandRecordUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"9424:17:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory,address,uint256,string memory,uint256,string memory)"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9424:204:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5702,"nodeType":"EmitStatement","src":"9419:209:8"},{"eventCall":{"arguments":[{"id":5704,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"9686:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5705,"name":"ownerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"9713:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5706,"name":"landType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"9735:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5707,"name":"newDataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"9758:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5708,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5588,"src":"9784:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5703,"name":"SurveyDataUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"9654:17:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,string memory,string memory,string memory,uint256)"}},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9654:150:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5710,"nodeType":"EmitStatement","src":"9649:155:8"}]},"documentation":{"id":5552,"nodeType":"StructuredDocumentation","src":"6512:497:8","text":" @dev Update land record with comprehensive data and new hash\n @param surveyNumber The survey number of the land parcel\n @param eventType The type of event (JMR_Measurement_Uploaded, Notice_Generated, etc.)\n @param metadata Additional metadata about the event\n @param ownerId Owner ID\n @param landType Type of land\n @param landArea Area of land\n @param location Location details\n @param projectDetails Project information"},"functionSelector":"63e25495","id":5712,"implemented":true,"kind":"function","modifiers":[{"id":5571,"kind":"modifierInvocation","modifierName":{"id":5570,"name":"onlyAuthorizedOfficer","nameLocations":["7331:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5480,"src":"7331:21:8"},"nodeType":"ModifierInvocation","src":"7331:21:8"},{"arguments":[{"id":5573,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"7375:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":5574,"kind":"modifierInvocation","modifierName":{"id":5572,"name":"onlyValidSurveyNumber","nameLocations":["7353:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"7353:21:8"},"nodeType":"ModifierInvocation","src":"7353:35:8"}],"name":"updateLandRecord","nameLocation":"7024:16:8","nodeType":"FunctionDefinition","parameters":{"id":5569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5554,"mutability":"mutable","name":"surveyNumber","nameLocation":"7065:12:8","nodeType":"VariableDeclaration","scope":5712,"src":"7051:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5553,"name":"string","nodeType":"ElementaryTypeName","src":"7051:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5556,"mutability":"mutable","name":"eventType","nameLocation":"7102:9:8","nodeType":"VariableDeclaration","scope":5712,"src":"7088:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5555,"name":"string","nodeType":"ElementaryTypeName","src":"7088:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5558,"mutability":"mutable","name":"metadata","nameLocation":"7136:8:8","nodeType":"VariableDeclaration","scope":5712,"src":"7122:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5557,"name":"string","nodeType":"ElementaryTypeName","src":"7122:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5560,"mutability":"mutable","name":"ownerId","nameLocation":"7169:7:8","nodeType":"VariableDeclaration","scope":5712,"src":"7155:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5559,"name":"string","nodeType":"ElementaryTypeName","src":"7155:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5562,"mutability":"mutable","name":"landType","nameLocation":"7201:8:8","nodeType":"VariableDeclaration","scope":5712,"src":"7187:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5561,"name":"string","nodeType":"ElementaryTypeName","src":"7187:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5564,"mutability":"mutable","name":"landArea","nameLocation":"7234:8:8","nodeType":"VariableDeclaration","scope":5712,"src":"7220:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5563,"name":"string","nodeType":"ElementaryTypeName","src":"7220:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5566,"mutability":"mutable","name":"location","nameLocation":"7267:8:8","nodeType":"VariableDeclaration","scope":5712,"src":"7253:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5565,"name":"string","nodeType":"ElementaryTypeName","src":"7253:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5568,"mutability":"mutable","name":"projectDetails","nameLocation":"7300:14:8","nodeType":"VariableDeclaration","scope":5712,"src":"7286:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5567,"name":"string","nodeType":"ElementaryTypeName","src":"7286:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7040:281:8"},"returnParameters":{"id":5575,"nodeType":"ParameterList","parameters":[],"src":"7389:0:8"},"scope":6923,"src":"7015:2797:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5867,"nodeType":"Block","src":"10689:805:8","statements":[{"assignments":[5743],"declarations":[{"constant":false,"id":5743,"mutability":"mutable","name":"records","nameLocation":"10720:7:8","nodeType":"VariableDeclaration","scope":5867,"src":"10700:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord[]"},"typeName":{"baseType":{"id":5741,"nodeType":"UserDefinedTypeName","pathNode":{"id":5740,"name":"LandRecord","nameLocations":["10700:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":5277,"src":"10700:10:8"},"referencedDeclaration":5277,"src":"10700:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_storage_ptr","typeString":"struct LandRecordsContract.LandRecord"}},"id":5742,"nodeType":"ArrayTypeName","src":"10700:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_ptr","typeString":"struct LandRecordsContract.LandRecord[]"}},"visibility":"internal"}],"id":5747,"initialValue":{"baseExpression":{"id":5744,"name":"landRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"10730:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.LandRecord storage ref[] storage ref)"}},"id":5746,"indexExpression":{"id":5745,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"10742:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10730:25:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage","typeString":"struct LandRecordsContract.LandRecord storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10700:55:8"},{"assignments":[5749],"declarations":[{"constant":false,"id":5749,"mutability":"mutable","name":"recordCount","nameLocation":"10774:11:8","nodeType":"VariableDeclaration","scope":5867,"src":"10766:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5748,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5752,"initialValue":{"expression":{"id":5750,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"10788:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory[] memory"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10796:6:8","memberName":"length","nodeType":"MemberAccess","src":"10788:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10766:36:8"},{"expression":{"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5753,"name":"recordTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"10823:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5757,"name":"recordCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"10850:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10837:12:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":5754,"name":"string","nodeType":"ElementaryTypeName","src":"10841:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5755,"nodeType":"ArrayTypeName","src":"10841:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10837:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"10823:39:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5760,"nodeType":"ExpressionStatement","src":"10823:39:8"},{"expression":{"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5761,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"10873:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5765,"name":"recordCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"10900:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10886:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5762,"name":"uint256","nodeType":"ElementaryTypeName","src":"10890:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5763,"nodeType":"ArrayTypeName","src":"10890:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10886:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"10873:39:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5768,"nodeType":"ExpressionStatement","src":"10873:39:8"},{"expression":{"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5769,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"10923:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5773,"name":"recordCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"10948:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10934:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5770,"name":"address","nodeType":"ElementaryTypeName","src":"10938:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5771,"nodeType":"ArrayTypeName","src":"10938:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"10923:37:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5776,"nodeType":"ExpressionStatement","src":"10923:37:8"},{"expression":{"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5777,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"10971:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5781,"name":"recordCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"10995:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10982:12:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":5778,"name":"string","nodeType":"ElementaryTypeName","src":"10986:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5779,"nodeType":"ArrayTypeName","src":"10986:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10982:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"10971:36:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5784,"nodeType":"ExpressionStatement","src":"10971:36:8"},{"expression":{"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5785,"name":"dataHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"11018:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5789,"name":"recordCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"11044:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11031:12:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":5786,"name":"string","nodeType":"ElementaryTypeName","src":"11035:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5787,"nodeType":"ArrayTypeName","src":"11035:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11031:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"11018:38:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5792,"nodeType":"ExpressionStatement","src":"11018:38:8"},{"expression":{"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5793,"name":"currentHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"11067:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5797,"name":"recordCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"11096:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"11083:12:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":5794,"name":"string","nodeType":"ElementaryTypeName","src":"11087:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5795,"nodeType":"ArrayTypeName","src":"11087:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11083:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"11067:41:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5800,"nodeType":"ExpressionStatement","src":"11067:41:8"},{"body":{"id":5865,"nodeType":"Block","src":"11171:316:8","statements":[{"expression":{"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5811,"name":"recordTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"11186:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5813,"indexExpression":{"id":5812,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11198:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11186:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5814,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"11203:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory[] memory"}},"id":5816,"indexExpression":{"id":5815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11211:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11203:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory"}},"id":5817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11214:9:8","memberName":"eventType","nodeType":"MemberAccess","referencedDeclaration":5258,"src":"11203:20:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11186:37:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5819,"nodeType":"ExpressionStatement","src":"11186:37:8"},{"expression":{"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5820,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"11238:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5822,"indexExpression":{"id":5821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11249:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11238:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5823,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"11254:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory[] memory"}},"id":5825,"indexExpression":{"id":5824,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11262:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11254:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory"}},"id":5826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11265:9:8","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":5262,"src":"11254:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11238:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5828,"nodeType":"ExpressionStatement","src":"11238:36:8"},{"expression":{"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5829,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"11289:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5831,"indexExpression":{"id":5830,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11298:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11289:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5832,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"11303:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory[] memory"}},"id":5834,"indexExpression":{"id":5833,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11311:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11303:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory"}},"id":5835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11314:7:8","memberName":"officer","nodeType":"MemberAccess","referencedDeclaration":5260,"src":"11303:18:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11289:32:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5837,"nodeType":"ExpressionStatement","src":"11289:32:8"},{"expression":{"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5838,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"11336:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5840,"indexExpression":{"id":5839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11345:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11336:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5841,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"11350:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory[] memory"}},"id":5843,"indexExpression":{"id":5842,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11358:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11350:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory"}},"id":5844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11361:8:8","memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":5264,"src":"11350:19:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11336:33:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5846,"nodeType":"ExpressionStatement","src":"11336:33:8"},{"expression":{"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5847,"name":"dataHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"11384:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5849,"indexExpression":{"id":5848,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11395:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11384:13:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5850,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"11400:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory[] memory"}},"id":5852,"indexExpression":{"id":5851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11408:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11400:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory"}},"id":5853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11411:8:8","memberName":"dataHash","nodeType":"MemberAccess","referencedDeclaration":5276,"src":"11400:19:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11384:35:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5855,"nodeType":"ExpressionStatement","src":"11384:35:8"},{"expression":{"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5856,"name":"currentHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5737,"src":"11434:13:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":5858,"indexExpression":{"id":5857,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11448:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11434:16:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5859,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"11453:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory[] memory"}},"id":5861,"indexExpression":{"id":5860,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11461:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11453:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory"}},"id":5862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11464:11:8","memberName":"currentHash","nodeType":"MemberAccess","referencedDeclaration":5272,"src":"11453:22:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11434:41:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5864,"nodeType":"ExpressionStatement","src":"11434:41:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5805,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11149:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5806,"name":"recordCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"11153:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11149:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5866,"initializationExpression":{"assignments":[5802],"declarations":[{"constant":false,"id":5802,"mutability":"mutable","name":"i","nameLocation":"11142:1:8","nodeType":"VariableDeclaration","scope":5866,"src":"11134:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5801,"name":"uint256","nodeType":"ElementaryTypeName","src":"11134:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5804,"initialValue":{"hexValue":"30","id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11146:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11134:13:8"},"loopExpression":{"expression":{"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11166:3:8","subExpression":{"id":5808,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"11166:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5810,"nodeType":"ExpressionStatement","src":"11166:3:8"},"nodeType":"ForStatement","src":"11129:358:8"}]},"documentation":{"id":5713,"nodeType":"StructuredDocumentation","src":"9824:445:8","text":" @dev Get all land records for a specific survey number with timeline\n @param surveyNumber The survey number to query\n @return recordTypes Array of event types\n @return timestamps Array of timestamps\n @return officers Array of officer addresses\n @return metadata Array of metadata strings\n @return dataHashes Array of data hashes\n @return currentHashes Array of current hashes"},"functionSelector":"2b4f75d1","id":5868,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5718,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"10392:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":5719,"kind":"modifierInvocation","modifierName":{"id":5717,"name":"onlyValidSurveyNumber","nameLocations":["10370:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"10370:21:8"},"nodeType":"ModifierInvocation","src":"10370:35:8"}],"name":"getLandRecord","nameLocation":"10284:13:8","nodeType":"FunctionDefinition","parameters":{"id":5716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"mutability":"mutable","name":"surveyNumber","nameLocation":"10312:12:8","nodeType":"VariableDeclaration","scope":5868,"src":"10298:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5714,"name":"string","nodeType":"ElementaryTypeName","src":"10298:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10297:28:8"},"returnParameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5722,"mutability":"mutable","name":"recordTypes","nameLocation":"10454:11:8","nodeType":"VariableDeclaration","scope":5868,"src":"10438:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":5720,"name":"string","nodeType":"ElementaryTypeName","src":"10438:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5721,"nodeType":"ArrayTypeName","src":"10438:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":5725,"mutability":"mutable","name":"timestamps","nameLocation":"10497:10:8","nodeType":"VariableDeclaration","scope":5868,"src":"10480:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5723,"name":"uint256","nodeType":"ElementaryTypeName","src":"10480:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5724,"nodeType":"ArrayTypeName","src":"10480:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5728,"mutability":"mutable","name":"officers","nameLocation":"10539:8:8","nodeType":"VariableDeclaration","scope":5868,"src":"10522:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5726,"name":"address","nodeType":"ElementaryTypeName","src":"10522:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5727,"nodeType":"ArrayTypeName","src":"10522:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5731,"mutability":"mutable","name":"metadata","nameLocation":"10578:8:8","nodeType":"VariableDeclaration","scope":5868,"src":"10562:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":5729,"name":"string","nodeType":"ElementaryTypeName","src":"10562:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5730,"nodeType":"ArrayTypeName","src":"10562:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":5734,"mutability":"mutable","name":"dataHashes","nameLocation":"10617:10:8","nodeType":"VariableDeclaration","scope":5868,"src":"10601:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":5732,"name":"string","nodeType":"ElementaryTypeName","src":"10601:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5733,"nodeType":"ArrayTypeName","src":"10601:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":5737,"mutability":"mutable","name":"currentHashes","nameLocation":"10658:13:8","nodeType":"VariableDeclaration","scope":5868,"src":"10642:29:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":5735,"name":"string","nodeType":"ElementaryTypeName","src":"10642:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":5736,"nodeType":"ArrayTypeName","src":"10642:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"10423:259:8"},"scope":6923,"src":"10275:1219:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5884,"nodeType":"Block","src":"11860:50:8","statements":[{"expression":{"baseExpression":{"id":5880,"name":"surveyData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5356,"src":"11878:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_SurveyData_$5294_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.SurveyData storage ref)"}},"id":5882,"indexExpression":{"id":5881,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"11889:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11878:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_SurveyData_$5294_storage","typeString":"struct LandRecordsContract.SurveyData storage ref"}},"functionReturnParameters":5879,"id":5883,"nodeType":"Return","src":"11871:31:8"}]},"documentation":{"id":5869,"nodeType":"StructuredDocumentation","src":"11506:169:8","text":" @dev Get current survey data for a survey number\n @param surveyNumber The survey number to query\n @return data The current survey data"},"functionSelector":"f5124cd9","id":5885,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5874,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5871,"src":"11798:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":5875,"kind":"modifierInvocation","modifierName":{"id":5873,"name":"onlyValidSurveyNumber","nameLocations":["11776:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"11776:21:8"},"nodeType":"ModifierInvocation","src":"11776:35:8"}],"name":"getSurveyData","nameLocation":"11690:13:8","nodeType":"FunctionDefinition","parameters":{"id":5872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5871,"mutability":"mutable","name":"surveyNumber","nameLocation":"11718:12:8","nodeType":"VariableDeclaration","scope":5885,"src":"11704:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5870,"name":"string","nodeType":"ElementaryTypeName","src":"11704:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11703:28:8"},"returnParameters":{"id":5879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5878,"mutability":"mutable","name":"data","nameLocation":"11848:4:8","nodeType":"VariableDeclaration","scope":5885,"src":"11830:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SurveyData_$5294_memory_ptr","typeString":"struct LandRecordsContract.SurveyData"},"typeName":{"id":5877,"nodeType":"UserDefinedTypeName","pathNode":{"id":5876,"name":"SurveyData","nameLocations":["11830:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":5294,"src":"11830:10:8"},"referencedDeclaration":5294,"src":"11830:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_SurveyData_$5294_storage_ptr","typeString":"struct LandRecordsContract.SurveyData"}},"visibility":"internal"}],"src":"11829:24:8"},"scope":6923,"src":"11681:229:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5900,"nodeType":"Block","src":"12277:56:8","statements":[{"expression":{"baseExpression":{"id":5896,"name":"surveyDataHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"12295:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":5898,"indexExpression":{"id":5897,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"12312:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12295:30:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":5895,"id":5899,"nodeType":"Return","src":"12288:37:8"}]},"documentation":{"id":5886,"nodeType":"StructuredDocumentation","src":"11922:166:8","text":" @dev Get the current hash for a survey number\n @param surveyNumber The survey number to query\n @return currentHash The current hash"},"functionSelector":"7af8e3a0","id":5901,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5891,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"12212:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":5892,"kind":"modifierInvocation","modifierName":{"id":5890,"name":"onlyValidSurveyNumber","nameLocations":["12190:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"12190:21:8"},"nodeType":"ModifierInvocation","src":"12190:35:8"}],"name":"getCurrentHash","nameLocation":"12103:14:8","nodeType":"FunctionDefinition","parameters":{"id":5889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5888,"mutability":"mutable","name":"surveyNumber","nameLocation":"12132:12:8","nodeType":"VariableDeclaration","scope":5901,"src":"12118:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5887,"name":"string","nodeType":"ElementaryTypeName","src":"12118:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12117:28:8"},"returnParameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"currentHash","nameLocation":"12258:11:8","nodeType":"VariableDeclaration","scope":5901,"src":"12244:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5893,"name":"string","nodeType":"ElementaryTypeName","src":"12244:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12243:27:8"},"scope":6923,"src":"12094:239:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5951,"nodeType":"Block","src":"12764:301:8","statements":[{"assignments":[5918],"declarations":[{"constant":false,"id":5918,"mutability":"mutable","name":"records","nameLocation":"12795:7:8","nodeType":"VariableDeclaration","scope":5951,"src":"12775:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord[]"},"typeName":{"baseType":{"id":5916,"nodeType":"UserDefinedTypeName","pathNode":{"id":5915,"name":"LandRecord","nameLocations":["12775:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":5277,"src":"12775:10:8"},"referencedDeclaration":5277,"src":"12775:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_storage_ptr","typeString":"struct LandRecordsContract.LandRecord"}},"id":5917,"nodeType":"ArrayTypeName","src":"12775:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_ptr","typeString":"struct LandRecordsContract.LandRecord[]"}},"visibility":"internal"}],"id":5922,"initialValue":{"baseExpression":{"id":5919,"name":"landRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"12805:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.LandRecord storage ref[] storage ref)"}},"id":5921,"indexExpression":{"id":5920,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"12817:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12805:25:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage","typeString":"struct LandRecordsContract.LandRecord storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12775:55:8"},{"body":{"id":5947,"nodeType":"Block","src":"12896:129:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5934,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"12915:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory[] memory"}},"id":5936,"indexExpression":{"id":5935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"12923:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12915:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory"}},"id":5937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12926:11:8","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":5266,"src":"12915:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5938,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"12941:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12915:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5946,"nodeType":"IfStatement","src":"12911:103:8","trueBody":{"id":5945,"nodeType":"Block","src":"12954:60:8","statements":[{"expression":{"expression":{"baseExpression":{"id":5940,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"12980:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory[] memory"}},"id":5942,"indexExpression":{"id":5941,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"12988:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12980:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory"}},"id":5943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12991:7:8","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":5268,"src":"12980:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5913,"id":5944,"nodeType":"Return","src":"12973:25:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"12871:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5928,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"12875:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.LandRecord memory[] memory"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12883:6:8","memberName":"length","nodeType":"MemberAccess","src":"12875:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12871:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5948,"initializationExpression":{"assignments":[5924],"declarations":[{"constant":false,"id":5924,"mutability":"mutable","name":"i","nameLocation":"12864:1:8","nodeType":"VariableDeclaration","scope":5948,"src":"12856:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5923,"name":"uint256","nodeType":"ElementaryTypeName","src":"12856:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5926,"initialValue":{"hexValue":"30","id":5925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12868:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12856:13:8"},"loopExpression":{"expression":{"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12891:3:8","subExpression":{"id":5931,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"12891:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5933,"nodeType":"ExpressionStatement","src":"12891:3:8"},"nodeType":"ForStatement","src":"12851:174:8"},{"expression":{"hexValue":"66616c7365","id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13052:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5913,"id":5950,"nodeType":"Return","src":"13045:12:8"}]},"documentation":{"id":5902,"nodeType":"StructuredDocumentation","src":"12345:224:8","text":" @dev Verify if a specific record is valid\n @param surveyNumber The survey number to verify\n @param blockNumber The block number to verify\n @return isValid Whether the record is valid"},"functionSelector":"e53a1cc2","id":5952,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5909,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"12712:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":5910,"kind":"modifierInvocation","modifierName":{"id":5908,"name":"onlyValidSurveyNumber","nameLocations":["12690:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"12690:21:8"},"nodeType":"ModifierInvocation","src":"12690:35:8"}],"name":"verifyRecord","nameLocation":"12584:12:8","nodeType":"FunctionDefinition","parameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"surveyNumber","nameLocation":"12611:12:8","nodeType":"VariableDeclaration","scope":5952,"src":"12597:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5903,"name":"string","nodeType":"ElementaryTypeName","src":"12597:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5906,"mutability":"mutable","name":"blockNumber","nameLocation":"12633:11:8","nodeType":"VariableDeclaration","scope":5952,"src":"12625:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5905,"name":"uint256","nodeType":"ElementaryTypeName","src":"12625:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12596:49:8"},"returnParameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"isValid","nameLocation":"12749:7:8","nodeType":"VariableDeclaration","scope":5952,"src":"12744:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5911,"name":"bool","nodeType":"ElementaryTypeName","src":"12744:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12743:14:8"},"scope":6923,"src":"12575:490:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5968,"nodeType":"Block","src":"13432:58:8","statements":[{"expression":{"expression":{"baseExpression":{"id":5963,"name":"landRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"13450:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.LandRecord storage ref[] storage ref)"}},"id":5965,"indexExpression":{"id":5964,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"13462:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13450:25:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage","typeString":"struct LandRecordsContract.LandRecord storage ref[] storage ref"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13476:6:8","memberName":"length","nodeType":"MemberAccess","src":"13450:32:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5962,"id":5967,"nodeType":"Return","src":"13443:39:8"}]},"documentation":{"id":5953,"nodeType":"StructuredDocumentation","src":"13077:178:8","text":" @dev Get the total number of records for a survey number\n @param surveyNumber The survey number to query\n @return count Total number of records"},"functionSelector":"c3cef20a","id":5969,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5958,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"13379:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":5959,"kind":"modifierInvocation","modifierName":{"id":5957,"name":"onlyValidSurveyNumber","nameLocations":["13357:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"13357:21:8"},"nodeType":"ModifierInvocation","src":"13357:35:8"}],"name":"getRecordCount","nameLocation":"13270:14:8","nodeType":"FunctionDefinition","parameters":{"id":5956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5955,"mutability":"mutable","name":"surveyNumber","nameLocation":"13299:12:8","nodeType":"VariableDeclaration","scope":5969,"src":"13285:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5954,"name":"string","nodeType":"ElementaryTypeName","src":"13285:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13284:28:8"},"returnParameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"count","nameLocation":"13419:5:8","nodeType":"VariableDeclaration","scope":5969,"src":"13411:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5960,"name":"uint256","nodeType":"ElementaryTypeName","src":"13411:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13410:15:8"},"scope":6923,"src":"13261:229:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6068,"nodeType":"Block","src":"14054:847:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5986,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"14073:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14099:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14091:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5987,"name":"address","nodeType":"ElementaryTypeName","src":"14091:7:8","typeDescriptions":{}}},"id":5990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14091:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14073:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f6666696365722061646472657373","id":5992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14103:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_91078b41b2d372700df6c8112b2c46255c0920f381652e10764f6d0320c4dec0","typeString":"literal_string \"Invalid officer address\""},"value":"Invalid officer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91078b41b2d372700df6c8112b2c46255c0920f381652e10764f6d0320c4dec0","typeString":"literal_string \"Invalid officer address\""}],"id":5985,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14065:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14065:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5994,"nodeType":"ExpressionStatement","src":"14065:64:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5998,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"14154:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14148:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5996,"name":"bytes","nodeType":"ElementaryTypeName","src":"14148:5:8","typeDescriptions":{}}},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14148:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14160:6:8","memberName":"length","nodeType":"MemberAccess","src":"14148:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14169:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14148:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e616d652063616e6e6f7420626520656d707479","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14172:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a","typeString":"literal_string \"Name cannot be empty\""},"value":"Name cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a","typeString":"literal_string \"Name cannot be empty\""}],"id":5995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14140:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14140:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6005,"nodeType":"ExpressionStatement","src":"14140:55:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6009,"name":"designation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"14220:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14214:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6007,"name":"bytes","nodeType":"ElementaryTypeName","src":"14214:5:8","typeDescriptions":{}}},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14214:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14233:6:8","memberName":"length","nodeType":"MemberAccess","src":"14214:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14242:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14214:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44657369676e6174696f6e2063616e6e6f7420626520656d707479","id":6014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14245:29:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_af7a3fd78bc6fba114cdf48ad2b5f049cda8304e79d142149ac4e5bd69ba7911","typeString":"literal_string \"Designation cannot be empty\""},"value":"Designation cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af7a3fd78bc6fba114cdf48ad2b5f049cda8304e79d142149ac4e5bd69ba7911","typeString":"literal_string \"Designation cannot be empty\""}],"id":6006,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14206:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14206:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6016,"nodeType":"ExpressionStatement","src":"14206:69:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6020,"name":"district","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"14300:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14294:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6018,"name":"bytes","nodeType":"ElementaryTypeName","src":"14294:5:8","typeDescriptions":{}}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14294:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14310:6:8","memberName":"length","nodeType":"MemberAccess","src":"14294:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14319:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14294:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44697374726963742063616e6e6f7420626520656d707479","id":6025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14322:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd4d72e2acf8c94111cda37c98852242115e87593a4666af7961480751f413f7","typeString":"literal_string \"District cannot be empty\""},"value":"District cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd4d72e2acf8c94111cda37c98852242115e87593a4666af7961480751f413f7","typeString":"literal_string \"District cannot be empty\""}],"id":6017,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14286:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14286:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6027,"nodeType":"ExpressionStatement","src":"14286:63:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6031,"name":"taluka","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"14374:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14368:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6029,"name":"bytes","nodeType":"ElementaryTypeName","src":"14368:5:8","typeDescriptions":{}}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14368:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14382:6:8","memberName":"length","nodeType":"MemberAccess","src":"14368:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14391:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14368:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54616c756b612063616e6e6f7420626520656d707479","id":6036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14394:24:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_902f90b417775ec5dbdc14737c9fae0fc2bcf3efb8fe7799c6174250f8750ee3","typeString":"literal_string \"Taluka cannot be empty\""},"value":"Taluka cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_902f90b417775ec5dbdc14737c9fae0fc2bcf3efb8fe7799c6174250f8750ee3","typeString":"literal_string \"Taluka cannot be empty\""}],"id":6028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14360:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14360:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6038,"nodeType":"ExpressionStatement","src":"14360:59:8"},{"expression":{"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6039,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"14440:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5309_storage_$","typeString":"mapping(address => struct LandRecordsContract.Officer storage ref)"}},"id":6041,"indexExpression":{"id":6040,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"14449:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14440:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_storage","typeString":"struct LandRecordsContract.Officer storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6043,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"14506:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6044,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"14541:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6045,"name":"designation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"14573:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6046,"name":"district","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"14609:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6047,"name":"taluka","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"14640:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":6048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14671:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":6049,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14708:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14714:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"14708:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6042,"name":"Officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"14467:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Officer_$5309_storage_ptr_$","typeString":"type(struct LandRecordsContract.Officer storage pointer)"}},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["14490:14:8","14535:4:8","14560:11:8","14599:8:8","14632:6:8","14661:8:8","14690:16:8"],"names":["officerAddress","name","designation","district","taluka","isActive","registrationDate"],"nodeType":"FunctionCall","src":"14467:268:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_memory_ptr","typeString":"struct LandRecordsContract.Officer memory"}},"src":"14440:295:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_storage","typeString":"struct LandRecordsContract.Officer storage ref"}},"id":6053,"nodeType":"ExpressionStatement","src":"14440:295:8"},{"expression":{"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6054,"name":"authorizedOfficers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"14756:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6056,"indexExpression":{"id":6055,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"14775:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14756:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14793:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14756:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6059,"nodeType":"ExpressionStatement","src":"14756:41:8"},{"eventCall":{"arguments":[{"id":6061,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"14841:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6062,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"14857:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6063,"name":"designation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"14863:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6064,"name":"district","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"14876:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6065,"name":"taluka","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"14886:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6060,"name":"OfficerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"14823:17:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory,string memory,string memory,string memory)"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14823:70:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6067,"nodeType":"EmitStatement","src":"14818:75:8"}]},"documentation":{"id":5970,"nodeType":"StructuredDocumentation","src":"13502:333:8","text":" @dev Register a new officer\n @param officerAddress The address of the officer\n @param name The name of the officer\n @param designation The designation of the officer\n @param district The district where the officer is posted\n @param taluka The taluka where the officer is posted"},"functionSelector":"5eaab2e8","id":6069,"implemented":true,"kind":"function","modifiers":[{"id":5983,"kind":"modifierInvocation","modifierName":{"id":5982,"name":"onlyOwner","nameLocations":["14044:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"14044:9:8"},"nodeType":"ModifierInvocation","src":"14044:9:8"}],"name":"registerOfficer","nameLocation":"13850:15:8","nodeType":"FunctionDefinition","parameters":{"id":5981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"officerAddress","nameLocation":"13884:14:8","nodeType":"VariableDeclaration","scope":6069,"src":"13876:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5971,"name":"address","nodeType":"ElementaryTypeName","src":"13876:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5974,"mutability":"mutable","name":"name","nameLocation":"13923:4:8","nodeType":"VariableDeclaration","scope":6069,"src":"13909:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5973,"name":"string","nodeType":"ElementaryTypeName","src":"13909:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5976,"mutability":"mutable","name":"designation","nameLocation":"13952:11:8","nodeType":"VariableDeclaration","scope":6069,"src":"13938:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5975,"name":"string","nodeType":"ElementaryTypeName","src":"13938:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5978,"mutability":"mutable","name":"district","nameLocation":"13988:8:8","nodeType":"VariableDeclaration","scope":6069,"src":"13974:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5977,"name":"string","nodeType":"ElementaryTypeName","src":"13974:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5980,"mutability":"mutable","name":"taluka","nameLocation":"14021:6:8","nodeType":"VariableDeclaration","scope":6069,"src":"14007:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5979,"name":"string","nodeType":"ElementaryTypeName","src":"14007:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13865:169:8"},"returnParameters":{"id":5984,"nodeType":"ParameterList","parameters":[],"src":"14054:0:8"},"scope":6923,"src":"13841:1060:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6120,"nodeType":"Block","src":"15164:375:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6080,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"15183:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15209:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15201:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6081,"name":"address","nodeType":"ElementaryTypeName","src":"15201:7:8","typeDescriptions":{}}},"id":6084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15201:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15183:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f6666696365722061646472657373","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15213:25:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_91078b41b2d372700df6c8112b2c46255c0920f381652e10764f6d0320c4dec0","typeString":"literal_string \"Invalid officer address\""},"value":"Invalid officer address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_91078b41b2d372700df6c8112b2c46255c0920f381652e10764f6d0320c4dec0","typeString":"literal_string \"Invalid officer address\""}],"id":6079,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15175:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6088,"nodeType":"ExpressionStatement","src":"15175:64:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6090,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"15258:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5309_storage_$","typeString":"mapping(address => struct LandRecordsContract.Officer storage ref)"}},"id":6092,"indexExpression":{"id":6091,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"15267:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15258:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_storage","typeString":"struct LandRecordsContract.Officer storage ref"}},"id":6093,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15283:14:8","memberName":"officerAddress","nodeType":"MemberAccess","referencedDeclaration":5296,"src":"15258:39:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15309:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15301:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6094,"name":"address","nodeType":"ElementaryTypeName","src":"15301:7:8","typeDescriptions":{}}},"id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15301:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15258:53:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f666669636572206e6f742072656769737465726564","id":6099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15313:24:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7e716994cc90bbf3d90eefee4b399baf4c25c60f8cb32b7a497a869e3f8f39e","typeString":"literal_string \"Officer not registered\""},"value":"Officer not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7e716994cc90bbf3d90eefee4b399baf4c25c60f8cb32b7a497a869e3f8f39e","typeString":"literal_string \"Officer not registered\""}],"id":6089,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15250:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15250:88:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6101,"nodeType":"ExpressionStatement","src":"15250:88:8"},{"expression":{"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6102,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"15359:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5309_storage_$","typeString":"mapping(address => struct LandRecordsContract.Officer storage ref)"}},"id":6104,"indexExpression":{"id":6103,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"15368:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15359:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_storage","typeString":"struct LandRecordsContract.Officer storage ref"}},"id":6105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15384:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5306,"src":"15359:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6106,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"15395:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15359:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6108,"nodeType":"ExpressionStatement","src":"15359:44:8"},{"expression":{"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6109,"name":"authorizedOfficers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"15414:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6111,"indexExpression":{"id":6110,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"15433:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15414:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6112,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"15451:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15414:45:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6114,"nodeType":"ExpressionStatement","src":"15414:45:8"},{"eventCall":{"arguments":[{"id":6116,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"15506:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6117,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"15522:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6115,"name":"OfficerStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5438,"src":"15485:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15485:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6119,"nodeType":"EmitStatement","src":"15480:51:8"}]},"documentation":{"id":6070,"nodeType":"StructuredDocumentation","src":"14913:161:8","text":" @dev Change officer status (active/inactive)\n @param officerAddress The address of the officer\n @param isActive The new status"},"functionSelector":"bf9cf4cf","id":6121,"implemented":true,"kind":"function","modifiers":[{"id":6077,"kind":"modifierInvocation","modifierName":{"id":6076,"name":"onlyOwner","nameLocations":["15154:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"15154:9:8"},"nodeType":"ModifierInvocation","src":"15154:9:8"}],"name":"setOfficerStatus","nameLocation":"15089:16:8","nodeType":"FunctionDefinition","parameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6072,"mutability":"mutable","name":"officerAddress","nameLocation":"15114:14:8","nodeType":"VariableDeclaration","scope":6121,"src":"15106:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6071,"name":"address","nodeType":"ElementaryTypeName","src":"15106:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6074,"mutability":"mutable","name":"isActive","nameLocation":"15135:8:8","nodeType":"VariableDeclaration","scope":6121,"src":"15130:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6073,"name":"bool","nodeType":"ElementaryTypeName","src":"15130:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15105:39:8"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[],"src":"15164:0:8"},"scope":6923,"src":"15080:459:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6171,"nodeType":"Block","src":"16267:375:8","statements":[{"assignments":[6141],"declarations":[{"constant":false,"id":6141,"mutability":"mutable","name":"officer","nameLocation":"16293:7:8","nodeType":"VariableDeclaration","scope":6171,"src":"16278:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_memory_ptr","typeString":"struct LandRecordsContract.Officer"},"typeName":{"id":6140,"nodeType":"UserDefinedTypeName","pathNode":{"id":6139,"name":"Officer","nameLocations":["16278:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":5309,"src":"16278:7:8"},"referencedDeclaration":5309,"src":"16278:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_storage_ptr","typeString":"struct LandRecordsContract.Officer"}},"visibility":"internal"}],"id":6145,"initialValue":{"baseExpression":{"id":6142,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"16303:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5309_storage_$","typeString":"mapping(address => struct LandRecordsContract.Officer storage ref)"}},"id":6144,"indexExpression":{"id":6143,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"16312:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16303:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_storage","typeString":"struct LandRecordsContract.Officer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16278:49:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6147,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"16346:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_memory_ptr","typeString":"struct LandRecordsContract.Officer memory"}},"id":6148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16354:14:8","memberName":"officerAddress","nodeType":"MemberAccess","referencedDeclaration":5296,"src":"16346:22:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16380:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16372:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6149,"name":"address","nodeType":"ElementaryTypeName","src":"16372:7:8","typeDescriptions":{}}},"id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16372:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16346:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f666669636572206e6f7420666f756e64","id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16384:19:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_bfe837140c8fcc96027470e2adfe1fae85182b86ebab7a27f37135b674fa2045","typeString":"literal_string \"Officer not found\""},"value":"Officer not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bfe837140c8fcc96027470e2adfe1fae85182b86ebab7a27f37135b674fa2045","typeString":"literal_string \"Officer not found\""}],"id":6146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16338:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16338:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6156,"nodeType":"ExpressionStatement","src":"16338:66:8"},{"expression":{"components":[{"expression":{"id":6157,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"16447:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_memory_ptr","typeString":"struct LandRecordsContract.Officer memory"}},"id":6158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16455:4:8","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":5298,"src":"16447:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6159,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"16474:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_memory_ptr","typeString":"struct LandRecordsContract.Officer memory"}},"id":6160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16482:11:8","memberName":"designation","nodeType":"MemberAccess","referencedDeclaration":5300,"src":"16474:19:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6161,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"16508:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_memory_ptr","typeString":"struct LandRecordsContract.Officer memory"}},"id":6162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16516:8:8","memberName":"district","nodeType":"MemberAccess","referencedDeclaration":5302,"src":"16508:16:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6163,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"16539:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_memory_ptr","typeString":"struct LandRecordsContract.Officer memory"}},"id":6164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16547:6:8","memberName":"taluka","nodeType":"MemberAccess","referencedDeclaration":5304,"src":"16539:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6165,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"16568:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_memory_ptr","typeString":"struct LandRecordsContract.Officer memory"}},"id":6166,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16576:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5306,"src":"16568:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6167,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"16599:7:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_memory_ptr","typeString":"struct LandRecordsContract.Officer memory"}},"id":6168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16607:16:8","memberName":"registrationDate","nodeType":"MemberAccess","referencedDeclaration":5308,"src":"16599:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16432:202:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"tuple(string memory,string memory,string memory,string memory,bool,uint256)"}},"functionReturnParameters":6138,"id":6170,"nodeType":"Return","src":"16425:209:8"}]},"documentation":{"id":6122,"nodeType":"StructuredDocumentation","src":"15551:380:8","text":" @dev Get officer information\n @param officerAddress The address of the officer\n @return name Officer name\n @return designation Officer designation\n @return district Officer district\n @return taluka Officer taluka\n @return isActive Whether officer is active\n @return registrationDate When officer was registered"},"functionSelector":"d25bd7a8","id":6172,"implemented":true,"kind":"function","modifiers":[],"name":"getOfficerInfo","nameLocation":"15946:14:8","nodeType":"FunctionDefinition","parameters":{"id":6125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6124,"mutability":"mutable","name":"officerAddress","nameLocation":"15969:14:8","nodeType":"VariableDeclaration","scope":6172,"src":"15961:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6123,"name":"address","nodeType":"ElementaryTypeName","src":"15961:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15960:24:8"},"returnParameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"name","nameLocation":"16066:4:8","nodeType":"VariableDeclaration","scope":6172,"src":"16052:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6126,"name":"string","nodeType":"ElementaryTypeName","src":"16052:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6129,"mutability":"mutable","name":"designation","nameLocation":"16099:11:8","nodeType":"VariableDeclaration","scope":6172,"src":"16085:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6128,"name":"string","nodeType":"ElementaryTypeName","src":"16085:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6131,"mutability":"mutable","name":"district","nameLocation":"16139:8:8","nodeType":"VariableDeclaration","scope":6172,"src":"16125:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6130,"name":"string","nodeType":"ElementaryTypeName","src":"16125:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6133,"mutability":"mutable","name":"taluka","nameLocation":"16176:6:8","nodeType":"VariableDeclaration","scope":6172,"src":"16162:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6132,"name":"string","nodeType":"ElementaryTypeName","src":"16162:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6135,"mutability":"mutable","name":"isActive","nameLocation":"16202:8:8","nodeType":"VariableDeclaration","scope":6172,"src":"16197:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6134,"name":"bool","nodeType":"ElementaryTypeName","src":"16197:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6137,"mutability":"mutable","name":"registrationDate","nameLocation":"16233:16:8","nodeType":"VariableDeclaration","scope":6172,"src":"16225:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"16225:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16037:223:8"},"scope":6923,"src":"15937:705:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6189,"nodeType":"Block","src":"16939:97:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6180,"name":"authorizedOfficers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"16957:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6182,"indexExpression":{"id":6181,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"16976:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16957:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"baseExpression":{"id":6183,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"16995:8:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5309_storage_$","typeString":"mapping(address => struct LandRecordsContract.Officer storage ref)"}},"id":6185,"indexExpression":{"id":6184,"name":"officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"17004:14:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16995:24:8","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5309_storage","typeString":"struct LandRecordsContract.Officer storage ref"}},"id":6186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17020:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5306,"src":"16995:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16957:71:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6179,"id":6188,"nodeType":"Return","src":"16950:78:8"}]},"documentation":{"id":6173,"nodeType":"StructuredDocumentation","src":"16654:184:8","text":" @dev Check if an address is an authorized officer\n @param officerAddress The address to check\n @return isAuthorized Whether the address is authorized"},"functionSelector":"eb4fc6ac","id":6190,"implemented":true,"kind":"function","modifiers":[],"name":"isAuthorizedOfficer","nameLocation":"16853:19:8","nodeType":"FunctionDefinition","parameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"officerAddress","nameLocation":"16881:14:8","nodeType":"VariableDeclaration","scope":6190,"src":"16873:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6174,"name":"address","nodeType":"ElementaryTypeName","src":"16873:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16872:24:8"},"returnParameters":{"id":6179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"isAuthorized","nameLocation":"16925:12:8","nodeType":"VariableDeclaration","scope":6190,"src":"16920:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6177,"name":"bool","nodeType":"ElementaryTypeName","src":"16920:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16919:19:8"},"scope":6923,"src":"16844:192:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6208,"nodeType":"Block","src":"17536:160:8","statements":[{"expression":{"components":[{"hexValue":"30","id":6202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17677:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17680:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17686:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17676:12:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(int_const 0,int_const 0,int_const 0,int_const 0)"}},"functionReturnParameters":6201,"id":6207,"nodeType":"Return","src":"17669:19:8"}]},"documentation":{"id":6191,"nodeType":"StructuredDocumentation","src":"17048:297:8","text":" @dev Get contract statistics\n @return totalOfficers Total number of registered officers\n @return activeOfficers Number of active officers\n @return totalRecords Total number of land records\n @return totalSurveys Total number of unique survey numbers"},"functionSelector":"dfe6b5d6","id":6209,"implemented":true,"kind":"function","modifiers":[],"name":"getContractStats","nameLocation":"17360:16:8","nodeType":"FunctionDefinition","parameters":{"id":6192,"nodeType":"ParameterList","parameters":[],"src":"17376:2:8"},"returnParameters":{"id":6201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6194,"mutability":"mutable","name":"totalOfficers","nameLocation":"17420:13:8","nodeType":"VariableDeclaration","scope":6209,"src":"17412:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6193,"name":"uint256","nodeType":"ElementaryTypeName","src":"17412:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6196,"mutability":"mutable","name":"activeOfficers","nameLocation":"17452:14:8","nodeType":"VariableDeclaration","scope":6209,"src":"17444:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6195,"name":"uint256","nodeType":"ElementaryTypeName","src":"17444:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6198,"mutability":"mutable","name":"totalRecords","nameLocation":"17485:12:8","nodeType":"VariableDeclaration","scope":6209,"src":"17477:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6197,"name":"uint256","nodeType":"ElementaryTypeName","src":"17477:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6200,"mutability":"mutable","name":"totalSurveys","nameLocation":"17516:12:8","nodeType":"VariableDeclaration","scope":6209,"src":"17508:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6199,"name":"uint256","nodeType":"ElementaryTypeName","src":"17508:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17401:134:8"},"scope":6923,"src":"17351:345:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6260,"nodeType":"Block","src":"18064:294:8","statements":[{"assignments":[6226],"declarations":[{"constant":false,"id":6226,"mutability":"mutable","name":"records","nameLocation":"18096:7:8","nodeType":"VariableDeclaration","scope":6260,"src":"18075:28:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_ptr","typeString":"struct LandRecordsContract.LandRecord[]"},"typeName":{"baseType":{"id":6224,"nodeType":"UserDefinedTypeName","pathNode":{"id":6223,"name":"LandRecord","nameLocations":["18075:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":5277,"src":"18075:10:8"},"referencedDeclaration":5277,"src":"18075:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_storage_ptr","typeString":"struct LandRecordsContract.LandRecord"}},"id":6225,"nodeType":"ArrayTypeName","src":"18075:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_ptr","typeString":"struct LandRecordsContract.LandRecord[]"}},"visibility":"internal"}],"id":6230,"initialValue":{"baseExpression":{"id":6227,"name":"landRecords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"18106:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.LandRecord storage ref[] storage ref)"}},"id":6229,"indexExpression":{"id":6228,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"18118:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18106:25:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage","typeString":"struct LandRecordsContract.LandRecord storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18075:56:8"},{"body":{"id":6258,"nodeType":"Block","src":"18197:154:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6242,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"18216:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_ptr","typeString":"struct LandRecordsContract.LandRecord storage ref[] storage pointer"}},"id":6244,"indexExpression":{"id":6243,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"18224:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18216:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_storage","typeString":"struct LandRecordsContract.LandRecord storage ref"}},"id":6245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18227:11:8","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":5266,"src":"18216:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6246,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"18242:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18216:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6257,"nodeType":"IfStatement","src":"18212:128:8","trueBody":{"id":6256,"nodeType":"Block","src":"18255:85:8","statements":[{"expression":{"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6248,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"18274:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_ptr","typeString":"struct LandRecordsContract.LandRecord storage ref[] storage pointer"}},"id":6250,"indexExpression":{"id":6249,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"18282:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18274:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_LandRecord_$5277_storage","typeString":"struct LandRecordsContract.LandRecord storage ref"}},"id":6251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18285:7:8","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":5268,"src":"18274:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18295:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"18274:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6254,"nodeType":"ExpressionStatement","src":"18274:26:8"},{"id":6255,"nodeType":"Break","src":"18319:5:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"18172:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6236,"name":"records","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6226,"src":"18176:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LandRecord_$5277_storage_$dyn_storage_ptr","typeString":"struct LandRecordsContract.LandRecord storage ref[] storage pointer"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18184:6:8","memberName":"length","nodeType":"MemberAccess","src":"18176:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18172:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6259,"initializationExpression":{"assignments":[6232],"declarations":[{"constant":false,"id":6232,"mutability":"mutable","name":"i","nameLocation":"18165:1:8","nodeType":"VariableDeclaration","scope":6259,"src":"18157:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6231,"name":"uint256","nodeType":"ElementaryTypeName","src":"18157:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6234,"initialValue":{"hexValue":"30","id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18169:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18157:13:8"},"loopExpression":{"expression":{"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18192:3:8","subExpression":{"id":6239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"18192:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6241,"nodeType":"ExpressionStatement","src":"18192:3:8"},"nodeType":"ForStatement","src":"18152:199:8"}]},"documentation":{"id":6210,"nodeType":"StructuredDocumentation","src":"17708:184:8","text":" @dev Emergency function to invalidate a record (only owner)\n @param surveyNumber The survey number\n @param blockNumber The block number to invalidate"},"functionSelector":"66ea50dd","id":6261,"implemented":true,"kind":"function","modifiers":[{"id":6217,"kind":"modifierInvocation","modifierName":{"id":6216,"name":"onlyOwner","nameLocations":["18002:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"18002:9:8"},"nodeType":"ModifierInvocation","src":"18002:9:8"},{"arguments":[{"id":6219,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"18044:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6220,"kind":"modifierInvocation","modifierName":{"id":6218,"name":"onlyValidSurveyNumber","nameLocations":["18022:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"18022:21:8"},"nodeType":"ModifierInvocation","src":"18022:35:8"}],"name":"invalidateRecord","nameLocation":"17907:16:8","nodeType":"FunctionDefinition","parameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6212,"mutability":"mutable","name":"surveyNumber","nameLocation":"17938:12:8","nodeType":"VariableDeclaration","scope":6261,"src":"17924:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6211,"name":"string","nodeType":"ElementaryTypeName","src":"17924:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6214,"mutability":"mutable","name":"blockNumber","nameLocation":"17960:11:8","nodeType":"VariableDeclaration","scope":6261,"src":"17952:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6213,"name":"uint256","nodeType":"ElementaryTypeName","src":"17952:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17923:49:8"},"returnParameters":{"id":6221,"nodeType":"ParameterList","parameters":[],"src":"18064:0:8"},"scope":6923,"src":"17898:460:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6313,"nodeType":"Block","src":"18598:355:8","statements":[{"assignments":[6270],"declarations":[{"constant":false,"id":6270,"mutability":"mutable","name":"hashValue","nameLocation":"18739:9:8","nodeType":"VariableDeclaration","scope":6313,"src":"18731:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6269,"name":"uint256","nodeType":"ElementaryTypeName","src":"18731:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6272,"initialValue":{"hexValue":"30","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18751:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18731:21:8"},{"body":{"id":6307,"nodeType":"Block","src":"18812:93:8","statements":[{"expression":{"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6287,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"18827:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6288,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"18841:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18854:1:8","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"18841:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18840:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6292,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"18859:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18840:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18839:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"baseExpression":{"arguments":[{"id":6299,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6264,"src":"18884:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6297,"name":"bytes","nodeType":"ElementaryTypeName","src":"18878:5:8","typeDescriptions":{}}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6302,"indexExpression":{"id":6301,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"18890:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18878:14:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18872:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6295,"name":"uint8","nodeType":"ElementaryTypeName","src":"18872:5:8","typeDescriptions":{}}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18872:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"18839:54:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18827:66:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6306,"nodeType":"ExpressionStatement","src":"18827:66:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"18783:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":6280,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6264,"src":"18793:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18787:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6278,"name":"bytes","nodeType":"ElementaryTypeName","src":"18787:5:8","typeDescriptions":{}}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18787:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18799:6:8","memberName":"length","nodeType":"MemberAccess","src":"18787:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18783:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6308,"initializationExpression":{"assignments":[6274],"declarations":[{"constant":false,"id":6274,"mutability":"mutable","name":"i","nameLocation":"18776:1:8","nodeType":"VariableDeclaration","scope":6308,"src":"18768:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6273,"name":"uint256","nodeType":"ElementaryTypeName","src":"18768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6276,"initialValue":{"hexValue":"30","id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18780:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18768:13:8"},"loopExpression":{"expression":{"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18807:3:8","subExpression":{"id":6284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"18807:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6286,"nodeType":"ExpressionStatement","src":"18807:3:8"},"nodeType":"ForStatement","src":"18763:142:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6309,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"18922:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18932:11:8","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":458,"src":"18922:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18922:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6268,"id":6312,"nodeType":"Return","src":"18915:30:8"}]},"documentation":{"id":6262,"nodeType":"StructuredDocumentation","src":"18370:136:8","text":" @dev Internal hash generation function\n @param data The data to hash\n @return hash The generated hash"},"id":6314,"implemented":true,"kind":"function","modifiers":[],"name":"_generateHash","nameLocation":"18521:13:8","nodeType":"FunctionDefinition","parameters":{"id":6265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6264,"mutability":"mutable","name":"data","nameLocation":"18549:4:8","nodeType":"VariableDeclaration","scope":6314,"src":"18535:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6263,"name":"string","nodeType":"ElementaryTypeName","src":"18535:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18534:20:8"},"returnParameters":{"id":6268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6267,"mutability":"mutable","name":"hash","nameLocation":"18592:4:8","nodeType":"VariableDeclaration","scope":6314,"src":"18578:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6266,"name":"string","nodeType":"ElementaryTypeName","src":"18578:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18577:20:8"},"scope":6923,"src":"18512:441:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6430,"nodeType":"Block","src":"19698:1464:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":6338,"name":"surveyCurrentTimelineHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"19723:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":6340,"indexExpression":{"id":6339,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"19749:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19723:39:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":6337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19717:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6336,"name":"bytes","nodeType":"ElementaryTypeName","src":"19717:5:8","typeDescriptions":{}}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19717:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19764:6:8","memberName":"length","nodeType":"MemberAccess","src":"19717:53:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19774:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19717:58:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53757276657920626c6f636b20616c726561647920657869737473","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19777:29:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ecc60656d86f65a2f10773591c7e227ac1693d96515ee0570f8705e7362bc31","typeString":"literal_string \"Survey block already exists\""},"value":"Survey block already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ecc60656d86f65a2f10773591c7e227ac1693d96515ee0570f8705e7362bc31","typeString":"literal_string \"Survey block already exists\""}],"id":6335,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19709:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19709:98:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6347,"nodeType":"ExpressionStatement","src":"19709:98:8"},{"assignments":[6349],"declarations":[{"constant":false,"id":6349,"mutability":"mutable","name":"initialHash","nameLocation":"19890:11:8","nodeType":"VariableDeclaration","scope":6430,"src":"19876:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6348,"name":"string","nodeType":"ElementaryTypeName","src":"19876:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6368,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":6355,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"19956:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6356,"name":"jmrData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"19983:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6357,"name":"awardData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"20005:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6358,"name":"landRecordData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"20029:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6359,"name":"ownerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"20058:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6360,"name":"landType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"20080:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":6361,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"20103:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20109:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"20103:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20119:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":412,"src":"20103:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20103:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6353,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19925:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19929:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"19925:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19925:215:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19918:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6351,"name":"string","nodeType":"ElementaryTypeName","src":"19918:6:8","typeDescriptions":{}}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19918:223:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6350,"name":"_generateHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"19904:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19904:238:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"19876:266:8"},{"assignments":[6371],"declarations":[{"constant":false,"id":6371,"mutability":"mutable","name":"initialEvent","nameLocation":"20226:12:8","nodeType":"VariableDeclaration","scope":6430,"src":"20205:33:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent"},"typeName":{"id":6370,"nodeType":"UserDefinedTypeName","pathNode":{"id":6369,"name":"TimelineEvent","nameLocations":["20205:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":5332,"src":"20205:13:8"},"referencedDeclaration":5332,"src":"20205:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_storage_ptr","typeString":"struct LandRecordsContract.TimelineEvent"}},"visibility":"internal"}],"id":6387,"initialValue":{"arguments":[{"hexValue":"537572766579426c6f636b43726561746564","id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20281:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_39f420dea0cfefee5b4df8e34661a78f16e262a5a6c3f26fde3606e982332983","typeString":"literal_string \"SurveyBlockCreated\""},"value":"SurveyBlockCreated"},{"id":6374,"name":"ownerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"20325:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6375,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"20361:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6376,"name":"landType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"20398:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"496e697469616c2073757276657920626c6f636b2063726561746564207769746820616c6c206c616e642064617461","id":6377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20430:49:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd4514173bc1e24e08e78f51414cda0ff006a59d95f5f0292f9119eaf7faeedd","typeString":"literal_string \"Initial survey block created with all land data\""},"value":"Initial survey block created with all land data"},{"expression":{"id":6378,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"20505:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20511:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"20505:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6380,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20544:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20548:6:8","memberName":"sender","nodeType":"MemberAccess","src":"20544:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6382,"name":"initialHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"20580:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20620:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},{"hexValue":"30","id":6384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20650:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"74727565","id":6385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20675:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39f420dea0cfefee5b4df8e34661a78f16e262a5a6c3f26fde3606e982332983","typeString":"literal_string \"SurveyBlockCreated\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_fd4514173bc1e24e08e78f51414cda0ff006a59d95f5f0292f9119eaf7faeedd","typeString":"literal_string \"Initial survey block created with all land data\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6372,"name":"TimelineEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"20241:13:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TimelineEvent_$5332_storage_ptr_$","typeString":"type(struct LandRecordsContract.TimelineEvent storage pointer)"}},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["20270:9:8","20316:7:8","20347:12:8","20388:8:8","20421:7:8","20494:9:8","20535:7:8","20569:9:8","20606:12:8","20638:10:8","20666:7:8"],"names":["eventType","ownerId","surveyNumber","landType","details","timestamp","officer","eventHash","previousHash","eventIndex","isValid"],"nodeType":"FunctionCall","src":"20241:450:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}},"nodeType":"VariableDeclarationStatement","src":"20205:486:8"},{"expression":{"arguments":[{"id":6392,"name":"initialEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"20776:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}],"expression":{"baseExpression":{"id":6388,"name":"surveyTimeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"20742:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.TimelineEvent storage ref[] storage ref)"}},"id":6390,"indexExpression":{"id":6389,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"20757:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20742:28:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage","typeString":"struct LandRecordsContract.TimelineEvent storage ref[] storage ref"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20771:4:8","memberName":"push","nodeType":"MemberAccess","src":"20742:33:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage_ptr_$_t_struct$_TimelineEvent_$5332_storage_$returns$__$attached_to$_t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage_ptr_$","typeString":"function (struct LandRecordsContract.TimelineEvent storage ref[] storage pointer,struct LandRecordsContract.TimelineEvent storage ref)"}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20742:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6394,"nodeType":"ExpressionStatement","src":"20742:47:8"},{"expression":{"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6395,"name":"surveyTimelineCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"20800:19:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":6397,"indexExpression":{"id":6396,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"20820:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20800:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":6398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20836:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20800:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6400,"nodeType":"ExpressionStatement","src":"20800:37:8"},{"expression":{"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6401,"name":"surveyCurrentTimelineHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"20848:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":6403,"indexExpression":{"id":6402,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"20874:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20848:39:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6404,"name":"initialHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"20890:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"20848:53:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6406,"nodeType":"ExpressionStatement","src":"20848:53:8"},{"expression":{"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6407,"name":"surveyIntegrityStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"20912:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6409,"indexExpression":{"id":6408,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"20934:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20912:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20950:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"20912:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6412,"nodeType":"ExpressionStatement","src":"20912:42:8"},{"eventCall":{"arguments":[{"id":6414,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"20999:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6415,"name":"initialHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"21013:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6416,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"21026:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21032:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"21026:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6413,"name":"SurveyBlockCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"20980:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,string memory,uint256)"}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20980:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6419,"nodeType":"EmitStatement","src":"20975:67:8"},{"eventCall":{"arguments":[{"id":6421,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"21077:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"537572766579426c6f636b43726561746564","id":6422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21091:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_39f420dea0cfefee5b4df8e34661a78f16e262a5a6c3f26fde3606e982332983","typeString":"literal_string \"SurveyBlockCreated\""},"value":"SurveyBlockCreated"},{"id":6423,"name":"ownerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"21113:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6424,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"21122:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21128:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"21122:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6426,"name":"initialHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"21139:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21152:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_39f420dea0cfefee5b4df8e34661a78f16e262a5a6c3f26fde3606e982332983","typeString":"literal_string \"SurveyBlockCreated\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6420,"name":"TimelineEventAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"21058:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,string memory,string memory,uint256,string memory,uint256)"}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21058:96:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6429,"nodeType":"EmitStatement","src":"21053:101:8"}]},"documentation":{"id":6315,"nodeType":"StructuredDocumentation","src":"19032:352:8","text":" @dev Create initial survey block with all current data\n @param surveyNumber The survey number\n @param jmrData JMR measurement data\n @param awardData Award and compensation data\n @param landRecordData Land record details\n @param ownerId Current owner ID\n @param landType Land classification"},"functionSelector":"807d0fa7","id":6431,"implemented":true,"kind":"function","modifiers":[{"id":6330,"kind":"modifierInvocation","modifierName":{"id":6329,"name":"onlyAuthorizedOfficer","nameLocations":["19640:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5480,"src":"19640:21:8"},"nodeType":"ModifierInvocation","src":"19640:21:8"},{"arguments":[{"id":6332,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"19684:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6333,"kind":"modifierInvocation","modifierName":{"id":6331,"name":"onlyValidSurveyNumber","nameLocations":["19662:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"19662:21:8"},"nodeType":"ModifierInvocation","src":"19662:35:8"}],"name":"createSurveyBlock","nameLocation":"19399:17:8","nodeType":"FunctionDefinition","parameters":{"id":6328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"surveyNumber","nameLocation":"19441:12:8","nodeType":"VariableDeclaration","scope":6431,"src":"19427:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6316,"name":"string","nodeType":"ElementaryTypeName","src":"19427:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6319,"mutability":"mutable","name":"jmrData","nameLocation":"19478:7:8","nodeType":"VariableDeclaration","scope":6431,"src":"19464:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6318,"name":"string","nodeType":"ElementaryTypeName","src":"19464:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6321,"mutability":"mutable","name":"awardData","nameLocation":"19510:9:8","nodeType":"VariableDeclaration","scope":6431,"src":"19496:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6320,"name":"string","nodeType":"ElementaryTypeName","src":"19496:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6323,"mutability":"mutable","name":"landRecordData","nameLocation":"19544:14:8","nodeType":"VariableDeclaration","scope":6431,"src":"19530:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6322,"name":"string","nodeType":"ElementaryTypeName","src":"19530:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6325,"mutability":"mutable","name":"ownerId","nameLocation":"19583:7:8","nodeType":"VariableDeclaration","scope":6431,"src":"19569:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6324,"name":"string","nodeType":"ElementaryTypeName","src":"19569:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6327,"mutability":"mutable","name":"landType","nameLocation":"19615:8:8","nodeType":"VariableDeclaration","scope":6431,"src":"19601:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6326,"name":"string","nodeType":"ElementaryTypeName","src":"19601:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19416:214:8"},"returnParameters":{"id":6334,"nodeType":"ParameterList","parameters":[],"src":"19698:0:8"},"scope":6923,"src":"19390:1772:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6557,"nodeType":"Block","src":"21776:1547:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":6453,"name":"surveyCurrentTimelineHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"21801:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":6455,"indexExpression":{"id":6454,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"21827:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21801:39:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":6452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21795:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6451,"name":"bytes","nodeType":"ElementaryTypeName","src":"21795:5:8","typeDescriptions":{}}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21795:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21842:6:8","memberName":"length","nodeType":"MemberAccess","src":"21795:53:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21851:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21795:57:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53757276657920626c6f636b20646f6573206e6f74206578697374","id":6460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21854:29:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad4288881aecdacf2aaa0a21a49aa01e654a7d22d225713d6a1488cfdcec8387","typeString":"literal_string \"Survey block does not exist\""},"value":"Survey block does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad4288881aecdacf2aaa0a21a49aa01e654a7d22d225713d6a1488cfdcec8387","typeString":"literal_string \"Survey block does not exist\""}],"id":6450,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21787:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21787:97:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6462,"nodeType":"ExpressionStatement","src":"21787:97:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6466,"name":"eventType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"21909:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21903:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6464,"name":"bytes","nodeType":"ElementaryTypeName","src":"21903:5:8","typeDescriptions":{}}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21903:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21920:6:8","memberName":"length","nodeType":"MemberAccess","src":"21903:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21929:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21903:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420747970652063616e6e6f7420626520656d707479","id":6471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21932:28:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e16328aee74a768cfe589dfb893be984021ba9add8c186afcada86f750ed8c97","typeString":"literal_string \"Event type cannot be empty\""},"value":"Event type cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e16328aee74a768cfe589dfb893be984021ba9add8c186afcada86f750ed8c97","typeString":"literal_string \"Event type cannot be empty\""}],"id":6463,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21895:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21895:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6473,"nodeType":"ExpressionStatement","src":"21895:66:8"},{"assignments":[6475],"declarations":[{"constant":false,"id":6475,"mutability":"mutable","name":"previousHash","nameLocation":"22026:12:8","nodeType":"VariableDeclaration","scope":6557,"src":"22012:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6474,"name":"string","nodeType":"ElementaryTypeName","src":"22012:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6479,"initialValue":{"baseExpression":{"id":6476,"name":"surveyCurrentTimelineHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"22041:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":6478,"indexExpression":{"id":6477,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"22067:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22041:39:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22012:68:8"},{"assignments":[6481],"declarations":[{"constant":false,"id":6481,"mutability":"mutable","name":"newEventHash","nameLocation":"22151:12:8","nodeType":"VariableDeclaration","scope":6557,"src":"22137:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6480,"name":"string","nodeType":"ElementaryTypeName","src":"22137:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6500,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":6487,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"22218:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6488,"name":"eventType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"22245:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6489,"name":"ownerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"22269:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6490,"name":"landType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"22291:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6491,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"22314:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6492,"name":"previousHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"22336:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":6493,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"22363:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22369:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"22363:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22379:8:8","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":412,"src":"22363:24:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22363:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6485,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"22187:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22191:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"22187:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22187:213:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22180:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6483,"name":"string","nodeType":"ElementaryTypeName","src":"22180:6:8","typeDescriptions":{}}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22180:221:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6482,"name":"_generateHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"22166:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22166:236:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"22137:265:8"},{"assignments":[6502],"declarations":[{"constant":false,"id":6502,"mutability":"mutable","name":"eventIndex","nameLocation":"22469:10:8","nodeType":"VariableDeclaration","scope":6557,"src":"22461:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6501,"name":"uint256","nodeType":"ElementaryTypeName","src":"22461:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6506,"initialValue":{"baseExpression":{"id":6503,"name":"surveyTimelineCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"22482:19:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":6505,"indexExpression":{"id":6504,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"22502:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22482:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22461:54:8"},{"assignments":[6509],"declarations":[{"constant":false,"id":6509,"mutability":"mutable","name":"newEvent","nameLocation":"22547:8:8","nodeType":"VariableDeclaration","scope":6557,"src":"22526:29:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent"},"typeName":{"id":6508,"nodeType":"UserDefinedTypeName","pathNode":{"id":6507,"name":"TimelineEvent","nameLocations":["22526:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":5332,"src":"22526:13:8"},"referencedDeclaration":5332,"src":"22526:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_storage_ptr","typeString":"struct LandRecordsContract.TimelineEvent"}},"visibility":"internal"}],"id":6525,"initialValue":{"arguments":[{"id":6511,"name":"eventType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"22598:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6512,"name":"ownerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"22631:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6513,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"22667:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6514,"name":"landType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"22704:8:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6515,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6442,"src":"22736:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6516,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"22769:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22775:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"22769:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"22808:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22812:6:8","memberName":"sender","nodeType":"MemberAccess","src":"22808:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6520,"name":"newEventHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"22844:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6521,"name":"previousHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"22885:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6522,"name":"eventIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"22924:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22958:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6510,"name":"TimelineEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"22558:13:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TimelineEvent_$5332_storage_ptr_$","typeString":"type(struct LandRecordsContract.TimelineEvent storage pointer)"}},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["22587:9:8","22622:7:8","22653:12:8","22694:8:8","22727:7:8","22758:9:8","22799:7:8","22833:9:8","22871:12:8","22912:10:8","22949:7:8"],"names":["eventType","ownerId","surveyNumber","landType","details","timestamp","officer","eventHash","previousHash","eventIndex","isValid"],"nodeType":"FunctionCall","src":"22558:416:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}},"nodeType":"VariableDeclarationStatement","src":"22526:448:8"},{"expression":{"arguments":[{"id":6530,"name":"newEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6509,"src":"23059:8:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}],"expression":{"baseExpression":{"id":6526,"name":"surveyTimeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"23025:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.TimelineEvent storage ref[] storage ref)"}},"id":6528,"indexExpression":{"id":6527,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"23040:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23025:28:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage","typeString":"struct LandRecordsContract.TimelineEvent storage ref[] storage ref"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23054:4:8","memberName":"push","nodeType":"MemberAccess","src":"23025:33:8","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage_ptr_$_t_struct$_TimelineEvent_$5332_storage_$returns$__$attached_to$_t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage_ptr_$","typeString":"function (struct LandRecordsContract.TimelineEvent storage ref[] storage pointer,struct LandRecordsContract.TimelineEvent storage ref)"}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23025:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6532,"nodeType":"ExpressionStatement","src":"23025:43:8"},{"expression":{"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6533,"name":"surveyTimelineCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"23079:19:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":6535,"indexExpression":{"id":6534,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"23099:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23079:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6536,"name":"eventIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"23115:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23128:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23115:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23079:50:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6540,"nodeType":"ExpressionStatement","src":"23079:50:8"},{"expression":{"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6541,"name":"surveyCurrentTimelineHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"23140:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":6543,"indexExpression":{"id":6542,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"23166:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23140:39:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6544,"name":"newEventHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"23182:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"23140:54:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6546,"nodeType":"ExpressionStatement","src":"23140:54:8"},{"eventCall":{"arguments":[{"id":6548,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"23239:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6549,"name":"eventType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"23253:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6550,"name":"ownerId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"23264:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6551,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"23273:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23279:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"23273:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6553,"name":"newEventHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"23290:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6554,"name":"eventIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"23304:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6547,"name":"TimelineEventAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"23220:18:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,string memory,string memory,uint256,string memory,uint256)"}},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23220:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6556,"nodeType":"EmitStatement","src":"23215:100:8"}]},"documentation":{"id":6432,"nodeType":"StructuredDocumentation","src":"21174:328:8","text":" @dev Add new timeline event for survey changes\n @param surveyNumber The survey number\n @param eventType Type of event (AwardDeclared, Compensated, etc.)\n @param ownerId Current owner ID\n @param landType Land classification\n @param details Detailed description of the event"},"functionSelector":"8a589fa5","id":6558,"implemented":true,"kind":"function","modifiers":[{"id":6445,"kind":"modifierInvocation","modifierName":{"id":6444,"name":"onlyAuthorizedOfficer","nameLocations":["21718:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5480,"src":"21718:21:8"},"nodeType":"ModifierInvocation","src":"21718:21:8"},{"arguments":[{"id":6447,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"21762:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6448,"kind":"modifierInvocation","modifierName":{"id":6446,"name":"onlyValidSurveyNumber","nameLocations":["21740:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"21740:21:8"},"nodeType":"ModifierInvocation","src":"21740:35:8"}],"name":"addTimelineEvent","nameLocation":"21517:16:8","nodeType":"FunctionDefinition","parameters":{"id":6443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6434,"mutability":"mutable","name":"surveyNumber","nameLocation":"21558:12:8","nodeType":"VariableDeclaration","scope":6558,"src":"21544:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6433,"name":"string","nodeType":"ElementaryTypeName","src":"21544:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6436,"mutability":"mutable","name":"eventType","nameLocation":"21595:9:8","nodeType":"VariableDeclaration","scope":6558,"src":"21581:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6435,"name":"string","nodeType":"ElementaryTypeName","src":"21581:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6438,"mutability":"mutable","name":"ownerId","nameLocation":"21629:7:8","nodeType":"VariableDeclaration","scope":6558,"src":"21615:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6437,"name":"string","nodeType":"ElementaryTypeName","src":"21615:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6440,"mutability":"mutable","name":"landType","nameLocation":"21661:8:8","nodeType":"VariableDeclaration","scope":6558,"src":"21647:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6439,"name":"string","nodeType":"ElementaryTypeName","src":"21647:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6442,"mutability":"mutable","name":"details","nameLocation":"21694:7:8","nodeType":"VariableDeclaration","scope":6558,"src":"21680:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6441,"name":"string","nodeType":"ElementaryTypeName","src":"21680:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21533:175:8"},"returnParameters":{"id":6449,"nodeType":"ParameterList","parameters":[],"src":"21776:0:8"},"scope":6923,"src":"21508:1815:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6753,"nodeType":"Block","src":"24336:998:8","statements":[{"assignments":[6595],"declarations":[{"constant":false,"id":6595,"mutability":"mutable","name":"timeline","nameLocation":"24370:8:8","nodeType":"VariableDeclaration","scope":6753,"src":"24347:31:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent[]"},"typeName":{"baseType":{"id":6593,"nodeType":"UserDefinedTypeName","pathNode":{"id":6592,"name":"TimelineEvent","nameLocations":["24347:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":5332,"src":"24347:13:8"},"referencedDeclaration":5332,"src":"24347:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_storage_ptr","typeString":"struct LandRecordsContract.TimelineEvent"}},"id":6594,"nodeType":"ArrayTypeName","src":"24347:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage_ptr","typeString":"struct LandRecordsContract.TimelineEvent[]"}},"visibility":"internal"}],"id":6599,"initialValue":{"baseExpression":{"id":6596,"name":"surveyTimeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"24381:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.TimelineEvent storage ref[] storage ref)"}},"id":6598,"indexExpression":{"id":6597,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"24396:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24381:28:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_storage_$dyn_storage","typeString":"struct LandRecordsContract.TimelineEvent storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"24347:62:8"},{"assignments":[6601],"declarations":[{"constant":false,"id":6601,"mutability":"mutable","name":"eventCount","nameLocation":"24428:10:8","nodeType":"VariableDeclaration","scope":6753,"src":"24420:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6600,"name":"uint256","nodeType":"ElementaryTypeName","src":"24420:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6604,"initialValue":{"expression":{"id":6602,"name":"timeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"24441:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory[] memory"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24450:6:8","memberName":"length","nodeType":"MemberAccess","src":"24441:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24420:36:8"},{"expression":{"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6605,"name":"eventTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"24477:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6609,"name":"eventCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"24503:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24490:12:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":6606,"name":"string","nodeType":"ElementaryTypeName","src":"24494:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6607,"nodeType":"ArrayTypeName","src":"24494:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24490:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"24477:37:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6612,"nodeType":"ExpressionStatement","src":"24477:37:8"},{"expression":{"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6613,"name":"ownerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"24525:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6617,"name":"eventCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"24549:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24536:12:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":6614,"name":"string","nodeType":"ElementaryTypeName","src":"24540:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6615,"nodeType":"ArrayTypeName","src":"24540:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24536:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"24525:35:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6620,"nodeType":"ExpressionStatement","src":"24525:35:8"},{"expression":{"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6621,"name":"landTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"24571:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6625,"name":"eventCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"24596:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24583:12:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":6622,"name":"string","nodeType":"ElementaryTypeName","src":"24587:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6623,"nodeType":"ArrayTypeName","src":"24587:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24583:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"24571:36:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6628,"nodeType":"ExpressionStatement","src":"24571:36:8"},{"expression":{"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6629,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"24618:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6633,"name":"eventCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"24641:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24628:12:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":6630,"name":"string","nodeType":"ElementaryTypeName","src":"24632:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6631,"nodeType":"ArrayTypeName","src":"24632:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24628:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"24618:34:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6636,"nodeType":"ExpressionStatement","src":"24618:34:8"},{"expression":{"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6637,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"24663:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6641,"name":"eventCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"24690:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24676:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6638,"name":"uint256","nodeType":"ElementaryTypeName","src":"24680:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6639,"nodeType":"ArrayTypeName","src":"24680:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24676:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"24663:38:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6644,"nodeType":"ExpressionStatement","src":"24663:38:8"},{"expression":{"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6645,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"24712:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6649,"name":"eventCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"24737:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24723:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":6646,"name":"address","nodeType":"ElementaryTypeName","src":"24727:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6647,"nodeType":"ArrayTypeName","src":"24727:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24723:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"24712:36:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6652,"nodeType":"ExpressionStatement","src":"24712:36:8"},{"expression":{"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6653,"name":"eventHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"24759:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6657,"name":"eventCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"24786:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24773:12:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":6654,"name":"string","nodeType":"ElementaryTypeName","src":"24777:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6655,"nodeType":"ArrayTypeName","src":"24777:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24773:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"24759:38:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6660,"nodeType":"ExpressionStatement","src":"24759:38:8"},{"expression":{"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6661,"name":"eventIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"24808:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6665,"name":"eventCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"24837:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"24823:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6662,"name":"uint256","nodeType":"ElementaryTypeName","src":"24827:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6663,"nodeType":"ArrayTypeName","src":"24827:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24823:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"24808:40:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6668,"nodeType":"ExpressionStatement","src":"24808:40:8"},{"body":{"id":6751,"nodeType":"Block","src":"24910:417:8","statements":[{"expression":{"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6679,"name":"eventTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"24925:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6681,"indexExpression":{"id":6680,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"24936:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24925:13:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6682,"name":"timeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"24941:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory[] memory"}},"id":6684,"indexExpression":{"id":6683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"24950:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24941:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}},"id":6685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24953:9:8","memberName":"eventType","nodeType":"MemberAccess","referencedDeclaration":5311,"src":"24941:21:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"24925:37:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6687,"nodeType":"ExpressionStatement","src":"24925:37:8"},{"expression":{"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6688,"name":"ownerIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"24977:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6690,"indexExpression":{"id":6689,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"24986:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24977:11:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6691,"name":"timeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"24991:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory[] memory"}},"id":6693,"indexExpression":{"id":6692,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25000:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24991:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}},"id":6694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25003:7:8","memberName":"ownerId","nodeType":"MemberAccess","referencedDeclaration":5313,"src":"24991:19:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"24977:33:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6696,"nodeType":"ExpressionStatement","src":"24977:33:8"},{"expression":{"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6697,"name":"landTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"25025:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6699,"indexExpression":{"id":6698,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25035:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25025:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6700,"name":"timeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"25040:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory[] memory"}},"id":6702,"indexExpression":{"id":6701,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25049:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25040:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}},"id":6703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25052:8:8","memberName":"landType","nodeType":"MemberAccess","referencedDeclaration":5317,"src":"25040:20:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"25025:35:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6705,"nodeType":"ExpressionStatement","src":"25025:35:8"},{"expression":{"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6706,"name":"details","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"25075:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6708,"indexExpression":{"id":6707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25083:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25075:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6709,"name":"timeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"25088:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory[] memory"}},"id":6711,"indexExpression":{"id":6710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25097:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25088:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}},"id":6712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25100:7:8","memberName":"details","nodeType":"MemberAccess","referencedDeclaration":5319,"src":"25088:19:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"25075:32:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6714,"nodeType":"ExpressionStatement","src":"25075:32:8"},{"expression":{"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6715,"name":"timestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"25122:10:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6717,"indexExpression":{"id":6716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25133:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25122:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6718,"name":"timeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"25138:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory[] memory"}},"id":6720,"indexExpression":{"id":6719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25147:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25138:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}},"id":6721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25150:9:8","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":5321,"src":"25138:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25122:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6723,"nodeType":"ExpressionStatement","src":"25122:37:8"},{"expression":{"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6724,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"25174:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6726,"indexExpression":{"id":6725,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25183:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25174:11:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6727,"name":"timeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"25188:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory[] memory"}},"id":6729,"indexExpression":{"id":6728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25197:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25188:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}},"id":6730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25200:7:8","memberName":"officer","nodeType":"MemberAccess","referencedDeclaration":5323,"src":"25188:19:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25174:33:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6732,"nodeType":"ExpressionStatement","src":"25174:33:8"},{"expression":{"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6733,"name":"eventHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"25222:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":6735,"indexExpression":{"id":6734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25234:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25222:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6736,"name":"timeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"25239:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory[] memory"}},"id":6738,"indexExpression":{"id":6737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25248:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25239:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}},"id":6739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25251:9:8","memberName":"eventHash","nodeType":"MemberAccess","referencedDeclaration":5325,"src":"25239:21:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"25222:38:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6741,"nodeType":"ExpressionStatement","src":"25222:38:8"},{"expression":{"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6742,"name":"eventIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"25275:12:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6744,"indexExpression":{"id":6743,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25288:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25275:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6745,"name":"timeline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6595,"src":"25293:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TimelineEvent_$5332_memory_ptr_$dyn_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory[] memory"}},"id":6747,"indexExpression":{"id":6746,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"25302:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25293:11:8","typeDescriptions":{"typeIdentifier":"t_struct$_TimelineEvent_$5332_memory_ptr","typeString":"struct LandRecordsContract.TimelineEvent memory"}},"id":6748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25305:10:8","memberName":"eventIndex","nodeType":"MemberAccess","referencedDeclaration":5329,"src":"25293:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25275:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6750,"nodeType":"ExpressionStatement","src":"25275:40:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6673,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"24889:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6674,"name":"eventCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"24893:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24889:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6752,"initializationExpression":{"assignments":[6670],"declarations":[{"constant":false,"id":6670,"mutability":"mutable","name":"i","nameLocation":"24882:1:8","nodeType":"VariableDeclaration","scope":6752,"src":"24874:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6669,"name":"uint256","nodeType":"ElementaryTypeName","src":"24874:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6672,"initialValue":{"hexValue":"30","id":6671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24886:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"24874:13:8"},"loopExpression":{"expression":{"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24905:3:8","subExpression":{"id":6676,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"24905:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6678,"nodeType":"ExpressionStatement","src":"24905:3:8"},"nodeType":"ForStatement","src":"24869:458:8"}]},"documentation":{"id":6559,"nodeType":"StructuredDocumentation","src":"23335:499:8","text":" @dev Get complete timeline for a survey number\n @param surveyNumber The survey number\n @return eventTypes Array of event types\n @return ownerIds Array of owner IDs\n @return landTypes Array of land types\n @return details Array of event details\n @return timestamps Array of timestamps\n @return officers Array of officer addresses\n @return eventHashes Array of event hashes\n @return eventIndexes Array of event indexes"},"functionSelector":"ecc0cc75","id":6754,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6564,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"23961:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6565,"kind":"modifierInvocation","modifierName":{"id":6563,"name":"onlyValidSurveyNumber","nameLocations":["23939:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"23939:21:8"},"nodeType":"ModifierInvocation","src":"23939:35:8"}],"name":"getSurveyTimeline","nameLocation":"23849:17:8","nodeType":"FunctionDefinition","parameters":{"id":6562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6561,"mutability":"mutable","name":"surveyNumber","nameLocation":"23881:12:8","nodeType":"VariableDeclaration","scope":6754,"src":"23867:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6560,"name":"string","nodeType":"ElementaryTypeName","src":"23867:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23866:28:8"},"returnParameters":{"id":6590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"eventTypes","nameLocation":"24023:10:8","nodeType":"VariableDeclaration","scope":6754,"src":"24007:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6566,"name":"string","nodeType":"ElementaryTypeName","src":"24007:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6567,"nodeType":"ArrayTypeName","src":"24007:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":6571,"mutability":"mutable","name":"ownerIds","nameLocation":"24064:8:8","nodeType":"VariableDeclaration","scope":6754,"src":"24048:24:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6569,"name":"string","nodeType":"ElementaryTypeName","src":"24048:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6570,"nodeType":"ArrayTypeName","src":"24048:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":6574,"mutability":"mutable","name":"landTypes","nameLocation":"24103:9:8","nodeType":"VariableDeclaration","scope":6754,"src":"24087:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6572,"name":"string","nodeType":"ElementaryTypeName","src":"24087:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6573,"nodeType":"ArrayTypeName","src":"24087:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":6577,"mutability":"mutable","name":"details","nameLocation":"24143:7:8","nodeType":"VariableDeclaration","scope":6754,"src":"24127:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6575,"name":"string","nodeType":"ElementaryTypeName","src":"24127:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6576,"nodeType":"ArrayTypeName","src":"24127:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":6580,"mutability":"mutable","name":"timestamps","nameLocation":"24182:10:8","nodeType":"VariableDeclaration","scope":6754,"src":"24165:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6578,"name":"uint256","nodeType":"ElementaryTypeName","src":"24165:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6579,"nodeType":"ArrayTypeName","src":"24165:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6583,"mutability":"mutable","name":"officers","nameLocation":"24224:8:8","nodeType":"VariableDeclaration","scope":6754,"src":"24207:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6581,"name":"address","nodeType":"ElementaryTypeName","src":"24207:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6582,"nodeType":"ArrayTypeName","src":"24207:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6586,"mutability":"mutable","name":"eventHashes","nameLocation":"24263:11:8","nodeType":"VariableDeclaration","scope":6754,"src":"24247:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":6584,"name":"string","nodeType":"ElementaryTypeName","src":"24247:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":6585,"nodeType":"ArrayTypeName","src":"24247:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":6589,"mutability":"mutable","name":"eventIndexes","nameLocation":"24306:12:8","nodeType":"VariableDeclaration","scope":6754,"src":"24289:29:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6587,"name":"uint256","nodeType":"ElementaryTypeName","src":"24289:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6588,"nodeType":"ArrayTypeName","src":"24289:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"23992:337:8"},"scope":6923,"src":"23840:1494:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6857,"nodeType":"Block","src":"25892:1255:8","statements":[{"assignments":[6772],"declarations":[{"constant":false,"id":6772,"mutability":"mutable","name":"blockchainHash","nameLocation":"25917:14:8","nodeType":"VariableDeclaration","scope":6857,"src":"25903:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6771,"name":"string","nodeType":"ElementaryTypeName","src":"25903:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6776,"initialValue":{"baseExpression":{"id":6773,"name":"surveyCurrentTimelineHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"25934:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":6775,"indexExpression":{"id":6774,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"25960:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25934:39:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"25903:70:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6779,"name":"blockchainHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"26004:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25998:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6777,"name":"bytes","nodeType":"ElementaryTypeName","src":"25998:5:8","typeDescriptions":{}}},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25998:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26020:6:8","memberName":"length","nodeType":"MemberAccess","src":"25998:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26030:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25998:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6796,"name":"databaseHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"26184:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6794,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26167:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26171:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"26167:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26167:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6793,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"26157:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26157:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"arguments":[{"id":6802,"name":"blockchainHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"26229:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6800,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26212:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26216:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"26212:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26212:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6799,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"26202:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26202:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"26157:88:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6823,"nodeType":"Block","src":"26393:121:8","statements":[{"expression":{"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6815,"name":"isCompromised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"26408:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26424:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"26408:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6818,"nodeType":"ExpressionStatement","src":"26408:21:8"},{"expression":{"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6819,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"26444:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4461746120696e74656772697479207665726966696564202d206e6f2074616d706572696e67206465746563746564","id":6820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26453:49:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb6afec239600a8631de26632a9916e6770568f2d96d16cd09a9b5ac7bbbbd2d","typeString":"literal_string \"Data integrity verified - no tampering detected\""},"value":"Data integrity verified - no tampering detected"},"src":"26444:58:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6822,"nodeType":"ExpressionStatement","src":"26444:58:8"}]},"id":6824,"nodeType":"IfStatement","src":"26153:361:8","trueBody":{"id":6814,"nodeType":"Block","src":"26247:140:8","statements":[{"expression":{"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6806,"name":"isCompromised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"26262:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26278:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"26262:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6809,"nodeType":"ExpressionStatement","src":"26262:20:8"},{"expression":{"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6810,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"26297:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4461746162617365206861736820646f6573206e6f74206d6174636820626c6f636b636861696e2068617368202d2064617461206d61792062652074616d7065726564","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26306:69:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_63cddd9377cc27e996937aee977fe88ff02278f301cb173592b9562b559de498","typeString":"literal_string \"Database hash does not match blockchain hash - data may be tampered\""},"value":"Database hash does not match blockchain hash - data may be tampered"},"src":"26297:78:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6813,"nodeType":"ExpressionStatement","src":"26297:78:8"}]}},"id":6825,"nodeType":"IfStatement","src":"25994:520:8","trueBody":{"id":6792,"nodeType":"Block","src":"26033:114:8","statements":[{"expression":{"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6784,"name":"isCompromised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"26048:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26064:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"26048:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6787,"nodeType":"ExpressionStatement","src":"26048:20:8"},{"expression":{"id":6790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6788,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"26083:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"53757276657920626c6f636b20646f6573206e6f74206578697374206f6e20626c6f636b636861696e","id":6789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26092:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3cde7b985d0af0002c843313553dd4946dc24c9abee91ee1a463e2356dceaa1","typeString":"literal_string \"Survey block does not exist on blockchain\""},"value":"Survey block does not exist on blockchain"},"src":"26083:52:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6791,"nodeType":"ExpressionStatement","src":"26083:52:8"}]}},{"expression":{"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6826,"name":"integrityChecks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"26575:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_IntegrityCheck_$5345_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.IntegrityCheck storage ref)"}},"id":6828,"indexExpression":{"id":6827,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"26591:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26575:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_IntegrityCheck_$5345_storage","typeString":"struct LandRecordsContract.IntegrityCheck storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6830,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"26651:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6831,"name":"databaseHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"26692:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6832,"name":"blockchainHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"26735:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6833,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"26777:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26783:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"26777:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6835,"name":"isCompromised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"26822:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6836,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"26868:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6829,"name":"IntegrityCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"26607:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_IntegrityCheck_$5345_storage_ptr_$","typeString":"type(struct LandRecordsContract.IntegrityCheck storage pointer)"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["26637:12:8","26678:12:8","26719:14:8","26764:11:8","26807:13:8","26850:16:8"],"names":["surveyNumber","databaseHash","blockchainHash","lastChecked","isCompromised","compromiseReason"],"nodeType":"FunctionCall","src":"26607:279:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_IntegrityCheck_$5345_memory_ptr","typeString":"struct LandRecordsContract.IntegrityCheck memory"}},"src":"26575:311:8","typeDescriptions":{"typeIdentifier":"t_struct$_IntegrityCheck_$5345_storage","typeString":"struct LandRecordsContract.IntegrityCheck storage ref"}},"id":6839,"nodeType":"ExpressionStatement","src":"26575:311:8"},{"expression":{"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6840,"name":"surveyIntegrityStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"26950:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6842,"indexExpression":{"id":6841,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"26972:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"26950:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"26988:14:8","subExpression":{"id":6843,"name":"isCompromised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"26989:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26950:52:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6846,"nodeType":"ExpressionStatement","src":"26950:52:8"},{"eventCall":{"arguments":[{"id":6848,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"27052:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6849,"name":"isCompromised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"27066:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6850,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"27081:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6847,"name":"IntegrityCheckPerformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"27028:23:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,bool,string memory)"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27028:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6852,"nodeType":"EmitStatement","src":"27023:65:8"},{"expression":{"components":[{"id":6853,"name":"isCompromised","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"27117:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6854,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6769,"src":"27132:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27116:23:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_string_memory_ptr_$","typeString":"tuple(bool,string memory)"}},"functionReturnParameters":6770,"id":6856,"nodeType":"Return","src":"27109:30:8"}]},"documentation":{"id":6755,"nodeType":"StructuredDocumentation","src":"25346:310:8","text":" @dev Verify survey integrity by comparing database hash with blockchain hash\n @param surveyNumber The survey number\n @param databaseHash Hash from database\n @return isCompromised Whether data integrity is compromised\n @return reason Reason for compromise if any"},"functionSelector":"705ecbce","id":6858,"implemented":true,"kind":"function","modifiers":[{"id":6762,"kind":"modifierInvocation","modifierName":{"id":6761,"name":"onlyAuthorizedOfficer","nameLocations":["25783:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5480,"src":"25783:21:8"},"nodeType":"ModifierInvocation","src":"25783:21:8"},{"arguments":[{"id":6764,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6757,"src":"25827:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6765,"kind":"modifierInvocation","modifierName":{"id":6763,"name":"onlyValidSurveyNumber","nameLocations":["25805:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"25805:21:8"},"nodeType":"ModifierInvocation","src":"25805:35:8"}],"name":"verifySurveyIntegrity","nameLocation":"25671:21:8","nodeType":"FunctionDefinition","parameters":{"id":6760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6757,"mutability":"mutable","name":"surveyNumber","nameLocation":"25717:12:8","nodeType":"VariableDeclaration","scope":6858,"src":"25703:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6756,"name":"string","nodeType":"ElementaryTypeName","src":"25703:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6759,"mutability":"mutable","name":"databaseHash","nameLocation":"25754:12:8","nodeType":"VariableDeclaration","scope":6858,"src":"25740:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6758,"name":"string","nodeType":"ElementaryTypeName","src":"25740:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25692:81:8"},"returnParameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6767,"mutability":"mutable","name":"isCompromised","nameLocation":"25855:13:8","nodeType":"VariableDeclaration","scope":6858,"src":"25850:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6766,"name":"bool","nodeType":"ElementaryTypeName","src":"25850:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6769,"mutability":"mutable","name":"reason","nameLocation":"25884:6:8","nodeType":"VariableDeclaration","scope":6858,"src":"25870:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6768,"name":"string","nodeType":"ElementaryTypeName","src":"25870:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25849:42:8"},"scope":6923,"src":"25662:1485:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6873,"nodeType":"Block","src":"27523:65:8","statements":[{"expression":{"baseExpression":{"id":6869,"name":"surveyCurrentTimelineHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"27541:25:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_string_storage_$","typeString":"mapping(string memory => string storage ref)"}},"id":6871,"indexExpression":{"id":6870,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"27567:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27541:39:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":6868,"id":6872,"nodeType":"Return","src":"27534:46:8"}]},"documentation":{"id":6859,"nodeType":"StructuredDocumentation","src":"27159:167:8","text":" @dev Get current timeline hash for a survey number\n @param surveyNumber The survey number\n @return currentHash Current timeline hash"},"functionSelector":"2e81e1b7","id":6874,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6864,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"27458:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6865,"kind":"modifierInvocation","modifierName":{"id":6863,"name":"onlyValidSurveyNumber","nameLocations":["27436:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"27436:21:8"},"nodeType":"ModifierInvocation","src":"27436:35:8"}],"name":"getCurrentTimelineHash","nameLocation":"27341:22:8","nodeType":"FunctionDefinition","parameters":{"id":6862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6861,"mutability":"mutable","name":"surveyNumber","nameLocation":"27378:12:8","nodeType":"VariableDeclaration","scope":6874,"src":"27364:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6860,"name":"string","nodeType":"ElementaryTypeName","src":"27364:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27363:28:8"},"returnParameters":{"id":6868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6867,"mutability":"mutable","name":"currentHash","nameLocation":"27504:11:8","nodeType":"VariableDeclaration","scope":6874,"src":"27490:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6866,"name":"string","nodeType":"ElementaryTypeName","src":"27490:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27489:27:8"},"scope":6923,"src":"27332:256:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6905,"nodeType":"Block","src":"28199:226:8","statements":[{"assignments":[6891],"declarations":[{"constant":false,"id":6891,"mutability":"mutable","name":"check","nameLocation":"28232:5:8","nodeType":"VariableDeclaration","scope":6905,"src":"28210:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_IntegrityCheck_$5345_memory_ptr","typeString":"struct LandRecordsContract.IntegrityCheck"},"typeName":{"id":6890,"nodeType":"UserDefinedTypeName","pathNode":{"id":6889,"name":"IntegrityCheck","nameLocations":["28210:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":5345,"src":"28210:14:8"},"referencedDeclaration":5345,"src":"28210:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_IntegrityCheck_$5345_storage_ptr","typeString":"struct LandRecordsContract.IntegrityCheck"}},"visibility":"internal"}],"id":6895,"initialValue":{"baseExpression":{"id":6892,"name":"integrityChecks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5392,"src":"28240:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_IntegrityCheck_$5345_storage_$","typeString":"mapping(string memory => struct LandRecordsContract.IntegrityCheck storage ref)"}},"id":6894,"indexExpression":{"id":6893,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"28256:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28240:29:8","typeDescriptions":{"typeIdentifier":"t_struct$_IntegrityCheck_$5345_storage","typeString":"struct LandRecordsContract.IntegrityCheck storage ref"}},"nodeType":"VariableDeclarationStatement","src":"28210:59:8"},{"expression":{"components":[{"baseExpression":{"id":6896,"name":"surveyIntegrityStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"28302:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6898,"indexExpression":{"id":6897,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"28324:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28302:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6899,"name":"check","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"28352:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_IntegrityCheck_$5345_memory_ptr","typeString":"struct LandRecordsContract.IntegrityCheck memory"}},"id":6900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28358:11:8","memberName":"lastChecked","nodeType":"MemberAccess","referencedDeclaration":5340,"src":"28352:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6901,"name":"check","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6891,"src":"28384:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_IntegrityCheck_$5345_memory_ptr","typeString":"struct LandRecordsContract.IntegrityCheck memory"}},"id":6902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28390:16:8","memberName":"compromiseReason","nodeType":"MemberAccess","referencedDeclaration":5344,"src":"28384:22:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28287:130:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$_t_string_memory_ptr_$","typeString":"tuple(bool,uint256,string memory)"}},"functionReturnParameters":6888,"id":6904,"nodeType":"Return","src":"28280:137:8"}]},"documentation":{"id":6875,"nodeType":"StructuredDocumentation","src":"27600:301:8","text":" @dev Get integrity status for a survey number\n @param surveyNumber The survey number\n @return isIntegrityValid Whether survey integrity is valid\n @return lastChecked When integrity was last checked\n @return compromiseReason Reason for compromise if any"},"functionSelector":"7c636833","id":6906,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6880,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"28035:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6881,"kind":"modifierInvocation","modifierName":{"id":6879,"name":"onlyValidSurveyNumber","nameLocations":["28013:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"28013:21:8"},"nodeType":"ModifierInvocation","src":"28013:35:8"}],"name":"getSurveyIntegrityStatus","nameLocation":"27916:24:8","nodeType":"FunctionDefinition","parameters":{"id":6878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6877,"mutability":"mutable","name":"surveyNumber","nameLocation":"27955:12:8","nodeType":"VariableDeclaration","scope":6906,"src":"27941:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6876,"name":"string","nodeType":"ElementaryTypeName","src":"27941:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27940:28:8"},"returnParameters":{"id":6888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6883,"mutability":"mutable","name":"isIntegrityValid","nameLocation":"28086:16:8","nodeType":"VariableDeclaration","scope":6906,"src":"28081:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6882,"name":"bool","nodeType":"ElementaryTypeName","src":"28081:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6885,"mutability":"mutable","name":"lastChecked","nameLocation":"28125:11:8","nodeType":"VariableDeclaration","scope":6906,"src":"28117:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6884,"name":"uint256","nodeType":"ElementaryTypeName","src":"28117:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6887,"mutability":"mutable","name":"compromiseReason","nameLocation":"28165:16:8","nodeType":"VariableDeclaration","scope":6906,"src":"28151:30:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6886,"name":"string","nodeType":"ElementaryTypeName","src":"28151:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28066:126:8"},"scope":6923,"src":"27907:518:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6921,"nodeType":"Block","src":"28774:59:8","statements":[{"expression":{"baseExpression":{"id":6917,"name":"surveyTimelineCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5379,"src":"28792:19:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":6919,"indexExpression":{"id":6918,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"28812:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28792:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6916,"id":6920,"nodeType":"Return","src":"28785:40:8"}]},"documentation":{"id":6907,"nodeType":"StructuredDocumentation","src":"28437:158:8","text":" @dev Get timeline count for a survey number\n @param surveyNumber The survey number\n @return count Number of timeline events"},"functionSelector":"3c925fe7","id":6922,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6912,"name":"surveyNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"28721:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6913,"kind":"modifierInvocation","modifierName":{"id":6911,"name":"onlyValidSurveyNumber","nameLocations":["28699:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":5497,"src":"28699:21:8"},"nodeType":"ModifierInvocation","src":"28699:35:8"}],"name":"getTimelineCount","nameLocation":"28610:16:8","nodeType":"FunctionDefinition","parameters":{"id":6910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6909,"mutability":"mutable","name":"surveyNumber","nameLocation":"28641:12:8","nodeType":"VariableDeclaration","scope":6922,"src":"28627:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6908,"name":"string","nodeType":"ElementaryTypeName","src":"28627:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28626:28:8"},"returnParameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"count","nameLocation":"28761:5:8","nodeType":"VariableDeclaration","scope":6922,"src":"28753:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6914,"name":"uint256","nodeType":"ElementaryTypeName","src":"28753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28752:15:8"},"scope":6923,"src":"28601:232:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6924,"src":"396:28440:8","usedErrors":[13,18,243,358],"usedEvents":[24,5408,5420,5432,5438,5452,5460,5468]}],"src":"33:28805:8"},"id":8}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:2:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:2:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ec9a8c937c91eba1992c88e143ac8251b8896a1167d1c07eff8524a3feb5186264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP11 DUP13 SWAP4 PUSH29 0x91EBA1992C88E143AC8251B8896A1167D1C07EFF8524A3FEB518626473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"297:18982:4:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ec9a8c937c91eba1992c88e143ac8251b8896a1167d1c07eff8524a3feb5186264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC SWAP11 DUP13 SWAP4 PUSH29 0x91EBA1992C88E143AC8251B8896A1167D1C07EFF8524A3FEB518626473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"297:18982:4:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:5:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/LandRecordsContract.sol":{"LandRecordsContract":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"surveyNumber","type":"string"},{"indexed":false,"internalType":"bool","name":"isCompromised","type":"bool"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"IntegrityCheckPerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"surveyNumber","type":"string"},{"indexed":false,"internalType":"string","name":"eventType","type":"string"},{"indexed":true,"internalType":"address","name":"officer","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"string","name":"metadata","type":"string"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"},{"indexed":false,"internalType":"string","name":"dataHash","type":"string"}],"name":"LandRecordUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"officerAddress","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"designation","type":"string"},{"indexed":false,"internalType":"string","name":"district","type":"string"},{"indexed":false,"internalType":"string","name":"taluka","type":"string"}],"name":"OfficerRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"officerAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"OfficerStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"surveyNumber","type":"string"},{"indexed":false,"internalType":"string","name":"initialHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SurveyBlockCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"surveyNumber","type":"string"},{"indexed":false,"internalType":"string","name":"ownerId","type":"string"},{"indexed":false,"internalType":"string","name":"landType","type":"string"},{"indexed":false,"internalType":"string","name":"dataHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SurveyDataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"surveyNumber","type":"string"},{"indexed":false,"internalType":"string","name":"eventType","type":"string"},{"indexed":false,"internalType":"string","name":"ownerId","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"string","name":"eventHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"eventIndex","type":"uint256"}],"name":"TimelineEventAdded","type":"event"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"string","name":"eventType","type":"string"},{"internalType":"string","name":"ownerId","type":"string"},{"internalType":"string","name":"landType","type":"string"},{"internalType":"string","name":"details","type":"string"}],"name":"addTimelineEvent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedOfficers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"string","name":"jmrData","type":"string"},{"internalType":"string","name":"awardData","type":"string"},{"internalType":"string","name":"landRecordData","type":"string"},{"internalType":"string","name":"ownerId","type":"string"},{"internalType":"string","name":"landType","type":"string"}],"name":"createSurveyBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"string","name":"ownerId","type":"string"},{"internalType":"string","name":"landType","type":"string"},{"internalType":"string","name":"landArea","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"projectDetails","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"generateSurveyDataHash","outputs":[{"internalType":"string","name":"dataHash","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getContractStats","outputs":[{"internalType":"uint256","name":"totalOfficers","type":"uint256"},{"internalType":"uint256","name":"activeOfficers","type":"uint256"},{"internalType":"uint256","name":"totalRecords","type":"uint256"},{"internalType":"uint256","name":"totalSurveys","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"}],"name":"getCurrentHash","outputs":[{"internalType":"string","name":"currentHash","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"}],"name":"getCurrentTimelineHash","outputs":[{"internalType":"string","name":"currentHash","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"}],"name":"getLandRecord","outputs":[{"internalType":"string[]","name":"recordTypes","type":"string[]"},{"internalType":"uint256[]","name":"timestamps","type":"uint256[]"},{"internalType":"address[]","name":"officers","type":"address[]"},{"internalType":"string[]","name":"metadata","type":"string[]"},{"internalType":"string[]","name":"dataHashes","type":"string[]"},{"internalType":"string[]","name":"currentHashes","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"officerAddress","type":"address"}],"name":"getOfficerInfo","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"designation","type":"string"},{"internalType":"string","name":"district","type":"string"},{"internalType":"string","name":"taluka","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"registrationDate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"}],"name":"getRecordCount","outputs":[{"internalType":"uint256","name":"count","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"}],"name":"getSurveyData","outputs":[{"components":[{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"string","name":"ownerId","type":"string"},{"internalType":"string","name":"landType","type":"string"},{"internalType":"string","name":"landArea","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"projectDetails","type":"string"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct LandRecordsContract.SurveyData","name":"data","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"}],"name":"getSurveyIntegrityStatus","outputs":[{"internalType":"bool","name":"isIntegrityValid","type":"bool"},{"internalType":"uint256","name":"lastChecked","type":"uint256"},{"internalType":"string","name":"compromiseReason","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"}],"name":"getSurveyTimeline","outputs":[{"internalType":"string[]","name":"eventTypes","type":"string[]"},{"internalType":"string[]","name":"ownerIds","type":"string[]"},{"internalType":"string[]","name":"landTypes","type":"string[]"},{"internalType":"string[]","name":"details","type":"string[]"},{"internalType":"uint256[]","name":"timestamps","type":"uint256[]"},{"internalType":"address[]","name":"officers","type":"address[]"},{"internalType":"string[]","name":"eventHashes","type":"string[]"},{"internalType":"uint256[]","name":"eventIndexes","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"}],"name":"getTimelineCount","outputs":[{"internalType":"uint256","name":"count","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"integrityChecks","outputs":[{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"string","name":"databaseHash","type":"string"},{"internalType":"string","name":"blockchainHash","type":"string"},{"internalType":"uint256","name":"lastChecked","type":"uint256"},{"internalType":"bool","name":"isCompromised","type":"bool"},{"internalType":"string","name":"compromiseReason","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"invalidateRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"officerAddress","type":"address"}],"name":"isAuthorizedOfficer","outputs":[{"internalType":"bool","name":"isAuthorized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"landRecords","outputs":[{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"string","name":"eventType","type":"string"},{"internalType":"address","name":"officer","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bool","name":"isValid","type":"bool"},{"internalType":"string","name":"previousHash","type":"string"},{"internalType":"string","name":"currentHash","type":"string"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"string","name":"dataHash","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"officers","outputs":[{"internalType":"address","name":"officerAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"designation","type":"string"},{"internalType":"string","name":"district","type":"string"},{"internalType":"string","name":"taluka","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"registrationDate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"officerAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"designation","type":"string"},{"internalType":"string","name":"district","type":"string"},{"internalType":"string","name":"taluka","type":"string"}],"name":"registerOfficer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"officerAddress","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"}],"name":"setOfficerStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"surveyCurrentTimelineHash","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"surveyData","outputs":[{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"string","name":"ownerId","type":"string"},{"internalType":"string","name":"landType","type":"string"},{"internalType":"string","name":"landArea","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"projectDetails","type":"string"},{"internalType":"uint256","name":"lastUpdated","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"surveyDataHashes","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"surveyIntegrityStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"surveyTimeline","outputs":[{"internalType":"string","name":"eventType","type":"string"},{"internalType":"string","name":"ownerId","type":"string"},{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"string","name":"landType","type":"string"},{"internalType":"string","name":"details","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"address","name":"officer","type":"address"},{"internalType":"string","name":"eventHash","type":"string"},{"internalType":"string","name":"previousHash","type":"string"},{"internalType":"uint256","name":"eventIndex","type":"uint256"},{"internalType":"bool","name":"isValid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"surveyTimelineCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"string","name":"eventType","type":"string"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"string","name":"ownerId","type":"string"},{"internalType":"string","name":"landType","type":"string"},{"internalType":"string","name":"landArea","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string","name":"projectDetails","type":"string"}],"name":"updateLandRecord","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"verifyRecord","outputs":[{"internalType":"bool","name":"isValid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"surveyNumber","type":"string"},{"internalType":"string","name":"databaseHash","type":"string"}],"name":"verifySurveyIntegrity","outputs":[{"internalType":"bool","name":"isCompromised","type":"bool"},{"internalType":"string","name":"reason","type":"string"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x98 JUMPI CALLER ISZERO PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE CALLER DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x5801 SWAP1 DUP2 PUSH3 0x9E DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84866DD EQ PUSH2 0x43CD JUMPI DUP1 PUSH4 0x2B4F75D1 EQ PUSH2 0x40DF JUMPI DUP1 PUSH4 0x2E81E1B7 EQ PUSH2 0x40A4 JUMPI DUP1 PUSH4 0x3C925FE7 EQ PUSH2 0x406E JUMPI DUP1 PUSH4 0x4A7B7677 EQ PUSH2 0x402F JUMPI DUP1 PUSH4 0x5EAAB2E8 EQ PUSH2 0x384C JUMPI DUP1 PUSH4 0x63E25495 EQ PUSH2 0x247D JUMPI DUP1 PUSH4 0x66EA50DD EQ PUSH2 0x240C JUMPI DUP1 PUSH4 0x67AE9D21 EQ PUSH2 0x23D1 JUMPI DUP1 PUSH4 0x705ECBCE EQ PUSH2 0x1C3F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BE6 JUMPI DUP1 PUSH4 0x7AF8E3A0 EQ PUSH2 0x1BAB JUMPI DUP1 PUSH4 0x7C636833 EQ PUSH2 0x1A9C JUMPI DUP1 PUSH4 0x807D0FA7 EQ PUSH2 0x15AA JUMPI DUP1 PUSH4 0x8A589FA5 EQ PUSH2 0x1105 JUMPI DUP1 PUSH4 0x8C154AC8 EQ PUSH2 0x10BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1093 JUMPI DUP1 PUSH4 0xA58BF0B1 EQ PUSH2 0xF51 JUMPI DUP1 PUSH4 0xB3475060 EQ PUSH2 0xE93 JUMPI DUP1 PUSH4 0xB893BB10 EQ PUSH2 0xE35 JUMPI DUP1 PUSH4 0xBF9CF4CF EQ PUSH2 0xD2C JUMPI DUP1 PUSH4 0xC3CEF20A EQ PUSH2 0xCD7 JUMPI DUP1 PUSH4 0xD25BD7A8 EQ PUSH2 0xB99 JUMPI DUP1 PUSH4 0xD41EEC4E EQ PUSH2 0xAC6 JUMPI DUP1 PUSH4 0xDE0C6FF4 EQ PUSH2 0x9B3 JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x982 JUMPI DUP1 PUSH4 0xE53A1CC2 EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xEB4FC6AC EQ PUSH2 0x8F6 JUMPI DUP1 PUSH4 0xECC0CC75 EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0xEDA03AA7 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xF04B5AAB EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH4 0xF5124CD9 EQ PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1B8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 DUP1 DUP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1C8 DUP6 PUSH2 0x4528 JUMP JUMPDEST PUSH1 0x60 SWAP5 DUP6 DUP2 MSTORE DUP6 DUP4 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE DUP6 DUP1 DUP3 ADD MSTORE DUP6 PUSH1 0x80 DUP3 ADD MSTORE DUP6 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x0 SWAP1 MSTORE DUP1 MLOAD ISZERO ISZERO PUSH2 0x206 SWAP1 PUSH2 0x4A7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 DUP3 DUP2 SWAP4 MLOAD SWAP3 DUP4 SWAP2 ADD SWAP2 PUSH2 0x21D SWAP3 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234 DUP4 PUSH2 0x4528 JUMP JUMPDEST PUSH2 0x23D DUP3 PUSH2 0x45B6 JUMP JUMPDEST DUP4 MSTORE PUSH2 0x24B PUSH1 0x1 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP4 PUSH2 0x25E PUSH1 0x2 DUP5 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD SWAP1 DUP2 MSTORE SWAP5 PUSH2 0x272 PUSH1 0x3 DUP6 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP6 DUP4 ADD SWAP1 DUP2 MSTORE PUSH2 0x284 PUSH1 0x4 DUP7 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH2 0x297 PUSH1 0x5 DUP8 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP9 ADD SWAP3 DUP4 MSTORE PUSH1 0x6 DUP8 ADD SLOAD SWAP7 PUSH1 0xC0 DUP10 ADD SWAP8 DUP9 MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF AND SWAP5 PUSH1 0xE0 DUP10 ADD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP9 DUP12 MSTORE MLOAD PUSH2 0x100 DUP1 SWAP10 DUP13 ADD MSTORE PUSH2 0x120 DUP12 ADD PUSH2 0x2DD SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP6 MLOAD PUSH1 0x1F NOT SWAP7 DUP8 DUP13 DUP3 SUB ADD PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x2F6 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP7 DUP12 DUP4 SUB ADD SWAP1 DUP12 ADD MSTORE PUSH2 0x30B SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP5 DUP10 DUP3 SUB ADD PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x321 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP4 DUP9 DUP3 SUB ADD PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x337 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP7 DUP3 SUB ADD PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x34C SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP3 MLOAD PUSH1 0xE0 DUP6 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH2 0x37C PUSH2 0x44A1 JUMP JUMPDEST PUSH2 0x384 PUSH2 0x4852 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH1 0xFF PUSH2 0x437 PUSH1 0x20 PUSH2 0x424 DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0xA DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 PUSH2 0x475 PUSH2 0x460 CALLDATASIZE PUSH2 0x47D3 JUMP JUMPDEST SWAP3 SWAP1 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x35E JUMPI PUSH2 0x492 SWAP2 PUSH2 0x4820 JUMP JUMPDEST POP PUSH2 0x49C DUP2 PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x4A8 PUSH1 0x1 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP2 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CA PUSH1 0x4 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x4E3 PUSH1 0x7 DUP7 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP3 PUSH2 0x4F0 PUSH1 0x8 DUP8 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP5 PUSH1 0x9 DUP8 ADD SLOAD SWAP7 PUSH1 0xA ADD PUSH2 0x503 SWAP1 PUSH2 0x45B6 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x160 DUP1 DUP14 MSTORE DUP13 ADD PUSH2 0x51B SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x52C SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE DUP9 DUP2 SUB PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x548 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP9 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE DUP6 DUP2 SUB PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x566 SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP5 DUP2 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x578 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP1 PUSH2 0x120 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x591 SWAP2 PUSH2 0x467F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x5C6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH2 0x5D2 DUP2 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST DUP2 PUSH2 0x5E6 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD SWAP1 DUP3 DUP2 PUSH1 0x7 SWAP4 DUP5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x601 DUP3 PUSH2 0x4B4F JUMP JUMPDEST SWAP3 PUSH2 0x60F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x4595 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP5 DUP3 KECCAK256 SWAP1 DUP6 DUP1 DUP7 ADD JUMPDEST DUP6 DUP6 LT PUSH2 0x82F JUMPI POP DUP6 MLOAD DUP7 PUSH2 0x634 DUP3 PUSH2 0x4B66 JUMP JUMPDEST SWAP2 PUSH2 0x63E DUP2 PUSH2 0x4B66 JUMP JUMPDEST PUSH2 0x647 DUP3 PUSH2 0x4B66 JUMP JUMPDEST PUSH2 0x650 DUP4 PUSH2 0x4B66 JUMP JUMPDEST PUSH2 0x659 DUP5 PUSH2 0x4BB0 JUMP JUMPDEST SWAP2 PUSH2 0x663 DUP6 PUSH2 0x4BB0 JUMP JUMPDEST SWAP4 PUSH2 0x66D DUP7 PUSH2 0x4B66 JUMP JUMPDEST SWAP6 PUSH2 0x677 DUP2 PUSH2 0x4BB0 JUMP JUMPDEST SWAP8 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x713 JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH2 0x100 DUP1 DUP12 MSTORE DUP11 ADD PUSH2 0x69C SWAP2 PUSH2 0x4706 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB SWAP1 DUP11 ADD MSTORE PUSH2 0x6AD SWAP2 PUSH2 0x4706 JUMP JUMPDEST DUP8 DUP2 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x6BE SWAP2 PUSH2 0x4706 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x6CF SWAP2 PUSH2 0x4706 JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x6E0 SWAP2 PUSH2 0x4762 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x6F1 SWAP2 PUSH2 0x4796 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x702 SWAP2 PUSH2 0x4706 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x591 SWAP2 PUSH2 0x4762 JUMP JUMPDEST DUP1 DUP12 PUSH2 0x72E DUP3 PUSH2 0x726 PUSH2 0x82A SWAP6 DUP8 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD MLOAD SWAP3 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x739 DUP2 DUP14 PUSH2 0x4BF1 JUMP JUMPDEST POP DUP13 PUSH2 0x745 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x752 DUP3 DUP8 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x75D DUP2 DUP7 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH1 0x60 PUSH2 0x76A DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x777 DUP3 DUP9 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x782 DUP2 DUP8 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH1 0x80 PUSH2 0x78F DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x79C DUP3 DUP10 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x7A7 DUP2 DUP9 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH1 0xA0 PUSH2 0x7B4 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x7C1 DUP3 DUP11 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 PUSH2 0x7D6 DUP4 DUP7 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD AND PUSH2 0x7E4 DUP3 DUP12 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH1 0xE0 PUSH2 0x7F1 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x7FE DUP3 DUP13 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x809 DUP2 DUP12 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH2 0x120 PUSH2 0x817 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x824 DUP3 DUP14 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x40 MLOAD PUSH2 0x841 DUP2 PUSH2 0x44F1 JUMP JUMPDEST PUSH2 0x84A DUP8 PUSH2 0x45B6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x857 DUP6 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH2 0x867 PUSH1 0x2 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x878 PUSH1 0x3 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x889 PUSH1 0x4 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 DUP9 ADD SLOAD AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x8B4 DUP7 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x8C5 PUSH1 0x8 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP8 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0xA DUP9 ADD SLOAD AND ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP4 ADD SWAP3 SWAP2 DUP7 SWAP1 PUSH2 0x620 JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x917 PUSH2 0x44A1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 PUSH2 0x93C JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x92F JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 PUSH2 0x978 PUSH2 0x966 CALLDATASIZE PUSH2 0x47D3 JUMP JUMPDEST SWAP1 PUSH2 0x973 DUP2 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST PUSH2 0x4C05 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x80 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x9EB PUSH1 0x20 PUSH2 0x424 PUSH2 0xA6F SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x9FE DUP2 PUSH2 0x45B6 JUMP JUMPDEST SWAP1 PUSH2 0xA0B PUSH1 0x1 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xAB5 PUSH2 0xA1A PUSH1 0x2 DUP5 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xAA7 PUSH2 0xA29 PUSH1 0x3 DUP7 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xA99 PUSH2 0xA38 PUSH1 0x4 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0xA8B PUSH2 0xA48 PUSH1 0x5 DUP11 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP6 PUSH2 0xA7D PUSH1 0xFF PUSH1 0x7 PUSH1 0x6 DUP14 ADD SLOAD SWAP13 ADD SLOAD AND SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 PUSH2 0x100 SWAP1 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST DUP14 DUP2 SUB PUSH1 0x20 DUP16 ADD MSTORE SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xAFE PUSH1 0x20 PUSH2 0x424 PUSH2 0xB63 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST DUP2 ADD PUSH1 0xB DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x591 PUSH2 0xB14 DUP3 PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0xB21 PUSH1 0x1 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xB2D PUSH1 0x2 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0xB7F PUSH1 0x3 DUP3 ADD SLOAD SWAP4 PUSH2 0xB71 PUSH2 0xB4E PUSH1 0x5 PUSH1 0xFF PUSH1 0x4 DUP8 ADD SLOAD AND SWAP6 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xC0 DUP12 MSTORE PUSH1 0xC0 DUP12 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x20 DUP12 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xBBB PUSH2 0x44A1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xBD6 DUP2 PUSH2 0x450D JUMP JUMPDEST DUP2 DUP4 SLOAD AND DUP2 MSTORE PUSH2 0xBE8 PUSH1 0x1 DUP5 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD SWAP4 DUP5 MSTORE PUSH2 0xBFC PUSH1 0x2 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD SWAP4 DUP5 MSTORE PUSH2 0xC10 PUSH1 0x3 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP5 ADD SWAP3 DUP4 MSTORE PUSH2 0xC24 PUSH1 0x4 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0x6 PUSH1 0xFF PUSH1 0x5 DUP5 ADD SLOAD AND SWAP3 PUSH1 0xA0 DUP8 ADD SWAP4 ISZERO ISZERO DUP5 MSTORE ADD SLOAD SWAP5 PUSH1 0xC0 DUP2 ADD SWAP6 DUP7 MSTORE MLOAD AND ISZERO PUSH2 0xC9E JUMPI PUSH2 0xC81 PUSH2 0xC8F SWAP3 PUSH2 0xB71 PUSH2 0xB63 SWAP9 MLOAD SWAP8 MLOAD SWAP6 MLOAD SWAP2 MLOAD SWAP4 MLOAD ISZERO ISZERO SWAP7 MLOAD SWAP6 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xC0 DUP12 MSTORE PUSH1 0xC0 DUP12 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x13D9999A58D95C881B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xD19 PUSH1 0x20 PUSH2 0xD0D DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH2 0x424 DUP2 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH2 0xD45 PUSH2 0x44A1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SWAP1 DUP2 DUP2 SUB PUSH2 0x35E JUMPI PUSH2 0xD5B PUSH2 0x4852 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH2 0xD72 DUP5 ISZERO ISZERO PUSH2 0x4D6A JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xDF7 JUMPI PUSH32 0x8A40EF3E42980AA96509D3E2E04B0C037F32D7251181D8843C0CB9B3378C99DF SWAP2 PUSH2 0xDEE PUSH1 0x20 SWAP3 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH2 0xDD4 DUP2 PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13D9999A58D95C881B9BDD081C9959DA5CDD195C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xE7F PUSH2 0xE70 PUSH1 0x20 PUSH2 0x424 PUSH2 0x591 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xEC4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xEDD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xEF6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xF0F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xF27 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x35E JUMPI PUSH2 0x591 SWAP6 PUSH2 0xF47 PUSH2 0xE7F SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP4 PUSH1 0xC4 CALLDATALOAD SWAP6 PUSH2 0x487E JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 PUSH2 0xF64 PUSH2 0x460 CALLDATASIZE PUSH2 0x47D3 JUMP JUMPDEST DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x35E JUMPI PUSH2 0xF81 SWAP2 PUSH2 0x4820 JUMP JUMPDEST POP PUSH2 0xF8B DUP2 PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xF97 PUSH1 0x1 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0xFA4 PUSH1 0x2 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xFB0 PUSH1 0x3 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xFBC PUSH1 0x4 DUP5 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFDB PUSH1 0x7 DUP8 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP3 PUSH2 0xFE8 PUSH1 0x8 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP5 PUSH1 0x9 DUP9 ADD SLOAD SWAP8 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x160 DUP1 DUP14 MSTORE DUP13 ADD PUSH2 0x100E SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x101F SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x1030 SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP10 DUP2 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x1041 SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP9 DUP2 SUB PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x1052 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE DUP6 DUP2 SUB PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x106E SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP5 DUP2 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x1080 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH2 0x120 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x10F2 PUSH1 0x20 PUSH2 0x424 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1136 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x114E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1166 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x117F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1197 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x5 DUP8 MSTORE PUSH2 0x11B4 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x4A15 JUMP JUMPDEST PUSH2 0x11C0 DUP3 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11EA DUP4 MLOAD SWAP2 DUP10 DUP2 DUP2 DUP8 ADD SWAP5 PUSH2 0x11DA DUP2 DUP4 DUP9 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x9 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH2 0x44B7 JUMP JUMPDEST ISZERO PUSH2 0x1565 JUMPI SWAP1 DUP4 SWAP2 PUSH2 0x11FE DUP8 MLOAD ISZERO ISZERO PUSH2 0x4AC6 JUMP JUMPDEST PUSH2 0x12D8 PUSH2 0x1254 PUSH2 0x12D3 DUP12 DUP8 DUP12 DUP14 DUP13 PUSH2 0x1234 PUSH2 0x1225 DUP7 DUP12 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x9 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x45B6 JUMP JUMPDEST SWAP13 DUP14 SWAP3 PUSH2 0x1240 TIMESTAMP PUSH2 0x48AD JUMP JUMPDEST SWAP5 DUP12 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP9 MLOAD DUP1 SWAP3 DUP12 DUP12 ADD SWAP1 PUSH2 0x465C JUMP JUMPDEST DUP8 ADD PUSH2 0x1268 DUP3 MLOAD DUP1 SWAP4 DUP12 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x127B DUP3 MLOAD DUP1 SWAP4 DUP11 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x128E DUP3 MLOAD DUP1 SWAP4 DUP10 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x12A1 DUP3 MLOAD DUP1 SWAP4 DUP9 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x12B4 DUP3 MLOAD DUP1 SWAP4 DUP8 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x12C7 DUP3 MLOAD DUP1 SWAP4 DUP7 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x4595 JUMP JUMPDEST PUSH2 0x4DD4 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD DUP11 DUP2 DUP8 MLOAD PUSH2 0x12EB DUP2 DUP4 DUP9 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x1304 DUP7 PUSH2 0x44F1 JUMP JUMPDEST DUP10 DUP7 MSTORE DUP11 DUP13 DUP8 ADD MSTORE DUP7 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP6 ADD MSTORE CALLER PUSH1 0xC0 DUP6 ADD MSTORE DUP6 PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE DUP6 PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x1369 PUSH1 0x1 SWAP4 DUP5 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP12 DUP2 DUP9 MLOAD PUSH2 0x135A DUP2 DUP4 DUP10 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x4FA6 JUMP JUMPDEST DUP3 DUP7 ADD DUP1 DUP8 GT PUSH2 0x154F JUMPI PUSH2 0x13A7 SWAP2 DUP11 SWAP2 PUSH1 0x40 MLOAD DUP4 DUP2 DUP10 MLOAD PUSH2 0x138B DUP2 DUP4 DUP9 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x9 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 DUP5 MLOAD SWAP2 DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x13C5 DUP4 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x14F0 JUMPI JUMPDEST POP DUP9 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x146B JUMPI PUSH2 0x1455 SWAP5 PUSH2 0x1434 SWAP9 SWAP8 SWAP7 SWAP5 DUP5 DUP1 PUSH2 0x1441 SWAP7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x57AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP14 SWAP15 SWAP7 PUSH2 0x141F SWAP7 PUSH1 0x0 SWAP4 PUSH2 0x1460 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x4B2F JUMP JUMPDEST SWAP9 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0xA0 DUP10 MSTORE PUSH1 0xA0 DUP10 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP2 DUP8 DUP4 SUB SWAP1 DUP9 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 TIMESTAMP PUSH1 0x40 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST DUP11 ADD MLOAD SWAP3 POP CODESIZE PUSH2 0x140A JUMP JUMPDEST PUSH1 0x1F SWAP3 SWAP2 SWAP3 NOT DUP3 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x14DB JUMPI POP SWAP5 PUSH2 0x1441 SWAP5 DUP5 PUSH2 0x141F SWAP5 PUSH2 0x1455 SWAP10 SWAP5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x57AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP15 SWAP16 SWAP8 PUSH2 0x1434 SWAP15 SWAP14 SWAP13 SWAP11 LT PUSH2 0x14C2 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x4B2F JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 PUSH2 0x14B6 JUMP JUMPDEST DUP9 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP6 ADD SWAP3 SWAP2 DUP13 ADD SWAP2 DUP13 ADD PUSH2 0x1480 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP12 DUP6 LT PUSH2 0x152F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP3 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1523 JUMPI POP POP PUSH2 0x13CE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP3 SWAP1 PUSH2 0x1515 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53757276657920626C6F636B20646F6573206E6F742065786973740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x15DB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x15F4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x160C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1625 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP4 PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x163E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP4 PUSH1 0xA4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1657 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x5 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1675 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST DUP4 MLOAD ISZERO ISZERO PUSH2 0x1682 SWAP1 PUSH2 0x4A7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP5 MLOAD SWAP9 DUP8 DUP2 DUP12 DUP2 DUP4 DUP11 ADD SWAP14 PUSH2 0x169B SWAP2 DUP16 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x9 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH2 0x16AF SWAP1 PUSH2 0x44B7 JUMP JUMPDEST PUSH2 0x1A57 JUMPI DUP7 DUP10 PUSH2 0x173F SWAP5 SWAP4 DUP11 PUSH2 0x12D3 SWAP5 PUSH2 0x16C8 TIMESTAMP PUSH2 0x48AD JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 PUSH2 0x16DF DUP14 MLOAD DUP1 SWAP3 DUP11 DUP11 ADD SWAP1 PUSH2 0x465C JUMP JUMPDEST DUP7 ADD PUSH2 0x16F3 DUP3 MLOAD DUP1 SWAP4 DUP11 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x1706 DUP3 MLOAD DUP1 SWAP4 DUP10 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x1719 DUP3 MLOAD DUP1 SWAP4 DUP9 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x172C DUP3 MLOAD DUP1 SWAP4 DUP8 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST DUP11 MLOAD SWAP2 ADD PUSH2 0x12B4 DUP3 DUP7 DUP4 ADD DUP8 DUP15 ADD PUSH2 0x465C JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x174D DUP4 PUSH2 0x44F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 PUSH2 0x175A DUP7 PUSH2 0x457A JUMP JUMPDEST PUSH1 0x12 DUP7 MSTORE PUSH18 0x14DD5C9D995E509B1BD8DAD0DC99585D1959 PUSH1 0x72 SHL SWAP6 DUP7 DUP9 DUP3 ADD MSTORE DUP5 MSTORE DUP8 DUP8 DUP6 ADD MSTORE DUP5 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1798 DUP2 PUSH2 0x455F JUMP JUMPDEST PUSH1 0x2F DUP2 MSTORE PUSH32 0x496E697469616C2073757276657920626C6F636B206372656174656420776974 DUP8 DUP3 ADD MSTORE PUSH15 0x6820616C6C206C616E642064617461 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP5 ADD MSTORE CALLER PUSH1 0xC0 DUP5 ADD MSTORE DUP8 PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x17F8 PUSH2 0x4B12 JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x1825 PUSH1 0x1 SWAP4 DUP5 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP9 DUP2 DUP9 MLOAD PUSH2 0x135A DUP2 DUP4 DUP11 PUSH2 0x465C JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP8 DUP2 DUP8 MLOAD PUSH2 0x1838 DUP2 DUP4 DUP10 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE PUSH1 0x40 MLOAD DUP7 DUP2 DUP7 MLOAD PUSH2 0x1855 DUP2 DUP4 DUP9 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x9 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP9 MLOAD SWAP1 DUP2 GT PUSH2 0x1539 JUMPI PUSH2 0x1873 DUP3 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A0E JUMPI JUMPDEST POP DUP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x198B JUMPI SWAP4 PUSH2 0x18DA DUP9 PUSH2 0x1960 SWAP6 PUSH2 0x193A SWAP6 DUP6 PUSH2 0x1974 SWAP11 SWAP7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x57AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP15 SWAP16 SWAP11 PUSH1 0x0 SWAP2 PUSH2 0x1980 JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP7 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0xA DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x18F7 DUP2 PUSH2 0x4B2F JUMP JUMPDEST PUSH32 0x2F32FDDD89C87048CDBC120D2AFD8519AB4D1664738F25E8475B703DC21EAAEC PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 MSTORE DUP1 PUSH2 0x192D PUSH1 0x40 DUP3 ADD DUP10 PUSH2 0x467F JUMP JUMPDEST TIMESTAMP DUP13 DUP4 ADD MSTORE SUB SWAP1 LOG2 PUSH2 0x4B2F JUMP JUMPDEST SWAP7 PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0xA0 DUP9 MSTORE PUSH1 0x12 PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 TIMESTAMP PUSH1 0x40 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST SWAP1 POP DUP11 ADD MLOAD CODESIZE PUSH2 0x18B6 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x19F9 JUMPI POP PUSH2 0x1960 SWAP6 PUSH2 0x193A SWAP6 DUP9 DUP7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x57AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP15 SWAP16 SWAP11 SWAP7 PUSH2 0x18DA SWAP7 DUP16 SWAP7 SWAP10 PUSH2 0x1974 SWAP15 SWAP11 LT PUSH2 0x19E0 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x18C9 JUMP JUMPDEST DUP13 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x19D4 JUMP JUMPDEST DUP13 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP8 ADD SWAP3 SWAP2 DUP11 ADD SWAP2 DUP11 ADD PUSH2 0x199D JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP10 DUP5 LT PUSH2 0x1A4D JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1A41 JUMPI POP POP PUSH2 0x187C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53757276657920626C6F636B20616C7265616479206578697374730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1ACD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH2 0x1AD9 DUP2 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST PUSH2 0x591 PUSH1 0x40 MLOAD SWAP2 PUSH1 0xFF PUSH2 0x1B7C DUP6 DUP4 MLOAD SWAP6 DUP2 DUP2 DUP2 DUP8 ADD SWAP9 PUSH2 0x1AFA DUP2 DUP4 DUP13 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0xB DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP6 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x1B12 DUP7 PUSH2 0x4544 JUMP JUMPDEST PUSH2 0x1B1B DUP9 PUSH2 0x45B6 JUMP JUMPDEST DUP7 MSTORE PUSH2 0x1B29 PUSH1 0x1 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP4 DUP8 ADD MSTORE PUSH2 0x1B39 PUSH1 0x2 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 PUSH2 0x1B66 PUSH1 0x5 PUSH1 0x3 DUP12 ADD SLOAD SWAP11 PUSH1 0x60 DUP11 ADD SWAP12 DUP13 MSTORE DUP9 PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP12 ADD MSTORE ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP7 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0xA DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP3 MLOAD SWAP1 MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xE7F PUSH2 0xE70 PUSH1 0x20 PUSH2 0xD0D PUSH2 0x591 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH2 0x1BFF PUSH2 0x4852 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1C6F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1C8E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1CA8 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x4A15 JUMP JUMPDEST PUSH2 0x1CB4 DUP3 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST PUSH2 0x1CCC PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH2 0x1225 DUP2 DUP4 DUP6 DUP11 ADD PUSH2 0x465C JUMP JUMPDEST SWAP2 DUP3 MLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x22A7 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x1CE6 DUP2 PUSH2 0x455F JUMP JUMPDEST PUSH1 0x29 DUP2 MSTORE PUSH32 0x53757276657920626C6F636B20646F6573206E6F74206578697374206F6E2062 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x3637B1B5B1B430B4B7 PUSH1 0xB9 SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP4 JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1D31 DUP4 PUSH2 0x4544 JUMP JUMPDEST DUP4 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE DUP4 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP5 MLOAD PUSH2 0x1D67 DUP2 DUP4 DUP6 DUP10 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0xB DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x1D90 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2257 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x21EB JUMPI PUSH1 0x0 SWAP3 PUSH2 0x21E0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x1DEA PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x218D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x211B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2110 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x1E45 PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x20C9 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2054 JUMPI SWAP2 DUP1 PUSH1 0xA0 SWAP5 SWAP3 PUSH1 0x5 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2049 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x1EAF PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0x4 DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SWAP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x1ECE DUP4 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2001 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F94 JUMPI PUSH2 0x1F47 SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1F89 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x1F42 PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0x1F21 DUP2 DUP4 PUSH1 0x20 DUP8 ADD PUSH2 0x465C JUMP JUMPDEST PUSH1 0xA SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO PUSH1 0xFF AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4B2F JUMP JUMPDEST PUSH32 0x3F8DAFEB5450B12547CAD6D7F76B6C1F7808F789148F742314A6499132C95552 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1F77 DUP7 DUP7 DUP4 PUSH2 0x4804 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x591 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x4804 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1EF6 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FE9 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH2 0x1F47 SWAP9 SWAP8 SWAP7 SWAP5 LT PUSH2 0x1FD0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1F0B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1FA8 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x203F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2033 JUMPI POP PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2026 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x1E6E JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x20B1 JUMPI POP SWAP3 PUSH1 0xA0 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x5 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2098 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x1E86 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x2088 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2109 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x20FD JUMPI POP POP PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x20E7 JUMP JUMPDEST POP DUP1 PUSH2 0x20E7 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1E0A JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2172 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2159 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x1E22 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x2149 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x21D9 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x21CA JUMPI POP POP PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x21B4 JUMP JUMPDEST POP DUP1 PUSH2 0x21AE JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1DB0 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x223C JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2223 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x1DC5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x2216 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x21FB JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x22A0 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2291 JUMPI POP POP PUSH2 0x1D99 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x227B JUMP JUMPDEST POP DUP1 PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x22D1 PUSH1 0x20 DUP3 DUP7 MLOAD PUSH2 0x22C4 DUP2 DUP8 DUP6 DUP12 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x4595 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x22F1 PUSH1 0x20 DUP3 DUP9 MLOAD PUSH2 0x22C4 DUP2 DUP8 DUP6 DUP14 ADD PUSH2 0x465C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH2 0x237A JUMPI PUSH1 0x1 SWAP2 PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE PUSH1 0x43 DUP2 MSTORE PUSH32 0x4461746162617365206861736820646F6573206E6F74206D6174636820626C6F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x636B636861696E2068617368202D2064617461206D61792062652074616D7065 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x1C9959 PUSH1 0xEA SHL PUSH1 0x60 DUP3 ADD MSTORE SWAP4 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x2389 DUP2 PUSH2 0x455F JUMP JUMPDEST PUSH1 0x2F DUP2 MSTORE PUSH32 0x4461746120696E74656772697479207665726966696564202D206E6F2074616D PUSH1 0x20 DUP3 ADD MSTORE PUSH15 0x1C195C9A5B99C819195D1958DD1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP4 PUSH2 0x1D24 JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xE7F PUSH2 0x1225 PUSH1 0x20 PUSH2 0x424 PUSH2 0x591 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 PUSH2 0x2429 PUSH2 0x241F CALLDATASIZE PUSH2 0x47D3 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0xD0D PUSH2 0x4852 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x247B JUMPI DUP3 PUSH1 0x5 PUSH2 0x244C DUP4 DUP6 PUSH2 0x4820 JUMP JUMPDEST POP ADD SLOAD EQ PUSH2 0x2462 JUMPI PUSH2 0x245D SWAP1 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x6 SWAP3 POP PUSH2 0x246F SWAP2 PUSH2 0x4820 JUMP JUMPDEST POP ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x24AE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x24CD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x24ED SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x250C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x252C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP4 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x254C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP3 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x256C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x258B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP5 CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x25A6 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x4A15 JUMP JUMPDEST PUSH2 0x25B2 DUP6 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST PUSH2 0x25BE DUP5 MLOAD ISZERO ISZERO PUSH2 0x4AC6 JUMP JUMPDEST PUSH2 0x25CD TIMESTAMP DUP8 DUP5 DUP5 DUP13 DUP13 DUP12 PUSH2 0x487E JUMP JUMPDEST SWAP6 PUSH2 0x25E8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0xE70 DUP12 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST SWAP3 DUP4 MLOAD ISZERO PUSH2 0x383C JUMPI JUMPDEST PUSH2 0x2687 DUP7 PUSH2 0x12D3 PUSH1 0x34 DUP11 DUP13 PUSH2 0x2605 TIMESTAMP PUSH2 0x48AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP4 PUSH2 0x261E DUP9 SWAP6 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP1 DUP10 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST DUP5 ADD PUSH2 0x2633 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD CALLER PUSH1 0x60 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2650 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP9 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x2664 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST DUP11 MLOAD SWAP2 ADD PUSH2 0x2678 DUP3 DUP6 DUP4 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x465C JUMP JUMPDEST ADD SUB PUSH1 0x14 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x4595 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2695 DUP3 PUSH2 0x44F1 JUMP JUMPDEST DUP9 DUP3 MSTORE DUP8 PUSH1 0x20 DUP4 ADD MSTORE CALLER PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE DUP7 PUSH1 0x80 DUP4 ADD MSTORE NUMBER PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE DUP5 PUSH2 0x100 DUP3 ADD MSTORE NUMBER PUSH2 0x120 DUP3 ADD MSTORE DUP9 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0x26EE DUP13 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x2715 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x4820 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x3826 JUMPI DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x273B DUP6 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x37D6 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x376A JUMPI PUSH1 0x0 SWAP3 PUSH2 0x375F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2795 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x370C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x369A JUMPI PUSH1 0x0 SWAP3 PUSH2 0x368F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x281E PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x363C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x35CA JUMPI PUSH1 0x0 SWAP3 PUSH2 0x35BF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH2 0x287F PUSH1 0xC0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x6 DUP5 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x28A4 PUSH1 0x7 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x356C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x34FA JUMPI PUSH1 0x0 SWAP3 PUSH2 0x34EF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP4 ADD SSTORE JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x2900 PUSH1 0x8 DUP6 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x34A8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3434 JUMPI PUSH2 0x140 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3429 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 DUP5 ADD SSTORE JUMPDEST PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP5 ADD SSTORE ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x296A PUSH1 0xA DUP5 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x33E2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3372 JUMPI PUSH1 0xA SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3367 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP2 ADD SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x29B2 DUP5 PUSH2 0x4528 JUMP JUMPDEST DUP8 DUP5 MSTORE DUP10 PUSH1 0x20 DUP6 ADD MSTORE DUP11 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP8 MLOAD PUSH2 0x29F2 DUP2 DUP4 DUP6 DUP13 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2A1C DUP6 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3317 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x32AB JUMPI PUSH1 0x0 SWAP3 PUSH2 0x32A0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2A76 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x324D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x31DB JUMPI PUSH1 0x0 SWAP3 PUSH2 0x31D0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2AD3 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x317D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x310B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3100 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2B30 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x30AD JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x303B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3030 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2B8D PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2FDD JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2F6B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2F60 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x2BE8 PUSH1 0x5 DUP6 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2F19 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2EA0 JUMPI SWAP3 DUP3 PUSH1 0x7 SWAP4 PUSH1 0xE0 SWAP4 PUSH2 0x2C4E SWAP8 SWAP7 PUSH1 0x0 SWAP3 PUSH2 0x2E95 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 DUP6 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x2C63 DUP2 DUP4 DUP6 DUP12 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x2C89 DUP4 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2E51 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2DB6 JUMPI SWAP5 PUSH2 0x2D84 SWAP8 SWAP5 PUSH2 0x2D92 SWAP5 DUP5 PUSH2 0x2D6F SWAP6 PUSH32 0x68375F142C78057CDAFC077F46DE16BA1149B3D9EC67C8C315F7A48B859722C4 SWAP13 SWAP11 SWAP6 PUSH2 0x2DA0 SWAP11 PUSH1 0x0 SWAP3 PUSH2 0x2DAB JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH32 0xE85D545CAA9029B0E323A8D64A4B1FABA24F52ACCB1E5A05EFD882C6AE9C2492 PUSH2 0x2D4C PUSH2 0x2D22 DUP6 PUSH2 0x4B2F JUMP JUMPDEST SWAP3 PUSH2 0x2D38 PUSH1 0x40 MLOAD SWAP6 PUSH1 0xA0 DUP8 MSTORE PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 TIMESTAMP PUSH1 0x20 DUP8 ADD MSTORE DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP3 NUMBER PUSH1 0x60 DUP3 ADD MSTORE DUP1 DUP5 SUB PUSH1 0x80 DUP3 ADD MSTORE DUP1 PUSH2 0x2D67 CALLER SWAP6 DUP11 PUSH2 0x467F JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x4B2F JUMP JUMPDEST SWAP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x80 DUP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x2CE0 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2E39 JUMPI POP SWAP5 PUSH1 0x1 DUP6 PUSH32 0x68375F142C78057CDAFC077F46DE16BA1149B3D9EC67C8C315F7A48B859722C4 SWAP13 SWAP11 SWAP6 PUSH2 0x2DA0 SWAP11 SWAP6 PUSH2 0x2D84 SWAP14 SWAP11 SWAP6 PUSH2 0x2D6F SWAP10 PUSH2 0x2D92 SWAP12 LT PUSH2 0x2E20 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2CF5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x2E13 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x2DCA JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2E8E JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2E82 JUMPI POP POP PUSH2 0x2C92 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E6C JUMP JUMPDEST POP DUP1 PUSH2 0x2E6C JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x2C15 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x2F01 JUMPI POP DUP4 PUSH1 0xE0 SWAP4 PUSH2 0x2C4E SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH1 0x7 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2EE8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x2C2D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x2ED8 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2EB1 JUMP JUMPDEST PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2F59 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2F4D JUMPI POP POP PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F37 JUMP JUMPDEST POP DUP1 PUSH2 0x2F37 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2BAD JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2FC2 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2FA9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x2BC5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x2F99 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2F7E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3029 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x301A JUMPI POP POP PUSH2 0x2B96 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3004 JUMP JUMPDEST POP DUP1 PUSH2 0x2FFE JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2B50 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3092 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3079 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x2B68 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x3069 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x304E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x30F9 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x30EA JUMPI POP POP PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x30D4 JUMP JUMPDEST POP DUP1 PUSH2 0x30CE JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2AF3 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3162 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3149 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x2B0B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x3139 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x311E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x31C9 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x31BA JUMPI POP POP PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x31A4 JUMP JUMPDEST POP DUP1 PUSH2 0x319E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2A96 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3232 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3219 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x2AAE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x3209 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x31EE JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3299 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x328A JUMPI POP POP PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3274 JUMP JUMPDEST POP DUP1 PUSH2 0x326E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2A3C JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x32FC JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x32E3 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0x2A51 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x32D6 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x32BB JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3360 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3351 JUMPI POP POP PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x333B JUMP JUMPDEST POP DUP1 PUSH2 0x3335 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x298F JUMP JUMPDEST SWAP1 PUSH1 0xA DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x33CA JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH1 0xA SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x33B1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP2 ADD SSTORE PUSH2 0x29A5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x33A3 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3383 JUMP JUMPDEST PUSH1 0xA DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3422 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3416 JUMPI POP POP PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3400 JUMP JUMPDEST POP DUP1 PUSH2 0x3400 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x2927 JUMP JUMPDEST SWAP1 PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x3490 JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0x140 SWAP7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3477 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 DUP5 ADD SSTORE PUSH2 0x293F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0x3467 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3445 JUMP JUMPDEST PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x34E8 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x34DC JUMPI POP POP PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x34C6 JUMP JUMPDEST POP DUP1 PUSH2 0x34C6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x28C4 JUMP JUMPDEST SWAP3 POP PUSH1 0x7 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3551 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3538 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x28DC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x3528 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x7 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x35B8 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x35A9 JUMPI POP POP PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3593 JUMP JUMPDEST POP DUP1 PUSH2 0x358D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x283E JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3621 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3608 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x2856 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x35F8 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x35DD JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3688 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3679 JUMPI POP POP PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3663 JUMP JUMPDEST POP DUP1 PUSH2 0x365D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x27B5 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x36F1 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x36D8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x27CD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x36C8 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x36AD JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3758 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3749 JUMPI POP POP PUSH2 0x279E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3733 JUMP JUMPDEST POP DUP1 PUSH2 0x372D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x275B JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x37BB JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x37A2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0x2770 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x3795 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x377A JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x381F JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3810 JUMPI POP POP PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x37FA JUMP JUMPDEST POP DUP1 PUSH2 0x37F4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 POP PUSH2 0x3846 PUSH2 0x4B12 JUMP JUMPDEST SWAP3 PUSH2 0x25F1 JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH2 0x3865 PUSH2 0x44A1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x3884 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x38A3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x38C3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x38E2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP4 PUSH2 0x38EB PUSH2 0x4852 JUMP JUMPDEST PUSH2 0x38FF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x4D6A JUMP JUMPDEST DUP4 MLOAD ISZERO PUSH2 0x3FF3 JUMPI DUP1 MLOAD ISZERO PUSH2 0x3FAE JUMPI DUP2 MLOAD ISZERO PUSH2 0x3F69 JUMPI DUP5 MLOAD ISZERO PUSH2 0x3F2B JUMPI PUSH1 0x40 MLOAD PUSH2 0x3927 DUP2 PUSH2 0x450D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 DUP8 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE MLOAD DUP1 MLOAD SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x39A6 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3ED8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3E66 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3E5B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x3A03 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3E08 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3D96 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3D8B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x3A60 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3D38 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3CC6 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3CBB JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x3ABB PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3C74 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3BCC JUMPI SWAP5 PUSH2 0x3B87 SWAP8 SWAP5 PUSH1 0x6 PUSH1 0xC0 PUSH2 0x3BA3 SWAP7 DUP7 PUSH32 0xC5D4B575E5BDB27802D44E5CDBE4804D1C9B0C111CDF21A596835E7424E6C7C4 SWAP14 SWAP12 SWAP8 PUSH2 0x3B95 SWAP8 PUSH2 0x3BBC SWAP13 PUSH1 0x0 SWAP3 PUSH2 0x3BC1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP6 ADD SSTORE JUMPDEST PUSH2 0x3B4D PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0x80 DUP10 MSTORE PUSH1 0x80 DUP10 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP6 PUSH2 0x467F JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3B16 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x3C5C JUMPI POP SWAP5 PUSH1 0x6 PUSH1 0xC0 PUSH2 0x3BA3 SWAP7 PUSH1 0x1 DUP8 PUSH2 0x3B95 SWAP8 PUSH32 0xC5D4B575E5BDB27802D44E5CDBE4804D1C9B0C111CDF21A596835E7424E6C7C4 SWAP16 SWAP14 SWAP10 SWAP8 PUSH2 0x3B87 SWAP16 SWAP13 PUSH2 0x3BBC SWAP15 SWAP10 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3C43 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x3B2E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3C33 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3BDD JUMP JUMPDEST PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3CB4 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3CA8 JUMPI POP POP PUSH2 0x3AC4 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3C92 JUMP JUMPDEST POP DUP1 PUSH2 0x3C92 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x3A80 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3D1D JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3D04 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x3A98 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x3CF4 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3CD9 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3D84 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3D75 JUMPI POP POP PUSH2 0x3A69 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3D5F JUMP JUMPDEST POP DUP1 PUSH2 0x3D59 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x3A23 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3DED JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3DD4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x3A3B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x3DC4 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3DA9 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3E54 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3E45 JUMPI POP POP PUSH2 0x3A0C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3E2F JUMP JUMPDEST POP DUP1 PUSH2 0x3E29 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x39C6 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3EBD JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3EA4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x39DE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3E79 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3F24 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3F15 JUMPI POP POP PUSH2 0x39AF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3EFF JUMP JUMPDEST POP DUP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x54616C756B612063616E6E6F7420626520656D707479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44697374726963742063616E6E6F7420626520656D7074790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44657369676E6174696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E616D652063616E6E6F7420626520656D707479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4050 PUSH2 0x44A1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x10F2 PUSH1 0x20 PUSH2 0xD0D DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xE7F PUSH2 0x1225 PUSH1 0x20 PUSH2 0xD0D PUSH2 0x591 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x4110 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH2 0x411C DUP2 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST DUP2 PUSH2 0x4130 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD SWAP1 DUP3 DUP2 PUSH1 0x2 SWAP4 DUP5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x414B DUP3 PUSH2 0x4B4F JUMP JUMPDEST SWAP3 PUSH2 0x4159 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x4595 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP5 DUP3 KECCAK256 SWAP1 DUP6 DUP1 DUP7 ADD JUMPDEST DUP6 DUP6 LT PUSH2 0x430D JUMPI POP DUP6 DUP1 MLOAD PUSH2 0x417E DUP2 PUSH2 0x4B66 JUMP JUMPDEST SWAP3 PUSH2 0x4188 DUP3 PUSH2 0x4BB0 JUMP JUMPDEST SWAP1 PUSH2 0x4192 DUP4 PUSH2 0x4BB0 JUMP JUMPDEST SWAP1 PUSH2 0x419C DUP5 PUSH2 0x4B66 JUMP JUMPDEST SWAP3 PUSH2 0x41A6 DUP6 PUSH2 0x4B66 JUMP JUMPDEST SWAP5 PUSH2 0x41B0 DUP2 PUSH2 0x4B66 JUMP JUMPDEST SWAP7 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x422D JUMPI DUP10 PUSH1 0xC0 PUSH2 0x591 DUP12 PUSH2 0x421F DUP13 PUSH2 0x4211 DUP14 PUSH2 0x4203 DUP15 PUSH2 0x41F5 DUP16 DUP16 PUSH2 0x41E8 PUSH1 0x40 MLOAD SWAP14 DUP14 DUP16 SWAP15 DUP16 SWAP1 DUP2 MSTORE ADD SWAP1 PUSH2 0x4706 JUMP JUMPDEST SWAP2 DUP13 DUP4 SUB SWAP1 DUP14 ADD MSTORE PUSH2 0x4762 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x4796 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x4706 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x4706 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x4706 JUMP JUMPDEST DUP1 DUP6 PUSH2 0x423C PUSH2 0x4308 SWAP4 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x4249 DUP3 DUP14 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x4254 DUP2 DUP13 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH1 0x60 PUSH2 0x4261 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x426E DUP3 DUP8 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH2 0x4283 DUP4 DUP7 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD AND PUSH2 0x4291 DUP3 DUP10 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH1 0x80 PUSH2 0x429E DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x42AB DUP3 DUP11 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x42B6 DUP2 DUP10 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH2 0x140 PUSH2 0x42C4 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x42D1 DUP3 DUP12 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x42DC DUP2 DUP11 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH2 0x100 PUSH2 0x42EA DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x42F7 DUP3 DUP13 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x4302 DUP2 DUP12 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x41B4 JUMP JUMPDEST PUSH1 0x1 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x40 MLOAD PUSH2 0x431F DUP2 PUSH2 0x44F1 JUMP JUMPDEST PUSH2 0x4328 DUP8 PUSH2 0x45B6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4335 DUP6 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP7 DUP9 ADD SLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP8 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x435F PUSH1 0x4 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP9 ADD SLOAD AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x4389 PUSH1 0x7 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x439A PUSH1 0x8 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP8 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x43B7 PUSH1 0xA DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP4 ADD SWAP3 SWAP2 DUP7 SWAP1 PUSH2 0x416A JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x43EF PUSH2 0x44A1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD AND PUSH2 0x440D PUSH1 0x1 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0x441A PUSH1 0x2 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x4490 PUSH2 0x4429 PUSH1 0x3 DUP5 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x4482 PUSH2 0x4438 PUSH1 0x4 DUP7 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0x4474 PUSH1 0x6 PUSH1 0xFF PUSH1 0x5 DUP10 ADD SLOAD AND SWAP8 ADD SLOAD SWAP6 PUSH2 0x4466 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0xE0 DUP12 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x35E JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x44E7 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x44D1 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x44C6 JUMP JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x45CA DUP5 PUSH2 0x44B7 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x4639 JUMPI POP PUSH1 0x1 EQ PUSH2 0x45F6 JUMPI JUMPDEST POP POP PUSH2 0x45F4 SWAP3 POP SUB DUP4 PUSH2 0x4595 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x4621 JUMPI POP POP PUSH2 0x45F4 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x45E6 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x4609 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x45F4 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x45E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x466F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x465F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x4698 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1539 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x35E JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x46D6 DUP3 PUSH2 0x46A4 JUMP JUMPDEST SWAP3 PUSH2 0x46E4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x4595 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x35E JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 DUP2 DUP1 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x4734 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x4752 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x467F JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x4724 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x4782 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x4774 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x47B6 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x47A8 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x35E JUMPI PUSH2 0x47FD SWAP2 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x481D SWAP4 SWAP3 ISZERO ISZERO DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x483C JUMPI PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4866 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP2 SWAP5 PUSH2 0x12D3 SWAP5 PUSH2 0x4892 PUSH2 0x481D SWAP9 PUSH2 0x48AD JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP8 MLOAD PUSH2 0x1254 DUP2 PUSH1 0x20 SWAP11 DUP12 DUP1 DUP13 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x4A07 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x49F8 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x49E9 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x49DA JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x49CB JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x49BB JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x49B1 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 DUP2 DUP7 ADD SWAP6 PUSH2 0x4946 DUP8 PUSH2 0x46A4 JUMP JUMPDEST SWAP7 PUSH2 0x4954 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x4595 JUMP JUMPDEST DUP1 DUP9 MSTORE PUSH2 0x4963 PUSH1 0x1F NOT SWAP2 PUSH2 0x46A4 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP10 ADD CALLDATACOPY DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x497B JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x49AC JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x496F JUMP JUMPDEST PUSH2 0x4974 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x4933 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x4928 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x491D JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x4910 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x4901 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x48EF JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x48D6 JUMP JUMPDEST ISZERO PUSH2 0x4A1C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F72697A6564206F666669636572732063616E20706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3337B936903A3434B99030B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4A81 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537572766579206E756D6265722063616E6E6F7420626520656D707479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4ACD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420747970652063616E6E6F7420626520656D707479000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4B1F DUP3 PUSH2 0x457A JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x4B47 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1539 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4B70 DUP3 PUSH2 0x4B4F JUMP JUMPDEST PUSH2 0x4B7D PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x4595 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x4B8E PUSH1 0x1F NOT SWAP2 PUSH2 0x4B4F JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x4B9F JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x4B93 JUMP JUMPDEST SWAP1 PUSH2 0x4BBA DUP3 PUSH2 0x4B4F JUMP JUMPDEST PUSH2 0x4BC7 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x4595 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x4BD8 PUSH1 0x1F NOT SWAP2 PUSH2 0x4B4F JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x154F JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x483C JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP1 MLOAD PUSH2 0x4C1B DUP2 DUP6 PUSH1 0x20 DUP1 SWAP6 ADD PUSH2 0x465C JUMP JUMPDEST DUP4 ADD SWAP3 DUP2 DUP2 PUSH1 0x2 SWAP6 DUP7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP2 SLOAD SWAP3 PUSH2 0x4C37 DUP5 PUSH2 0x4B4F JUMP JUMPDEST SWAP5 PUSH2 0x4C44 DUP3 MLOAD SWAP7 DUP8 PUSH2 0x4595 JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP2 DUP4 DUP8 ADD JUMPDEST DUP7 DUP7 LT PUSH2 0x4CAE JUMPI POP POP POP POP POP POP POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x4CA6 JUMPI DUP3 PUSH1 0xA0 PUSH2 0x4C7B DUP4 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD EQ PUSH2 0x4C91 JUMPI PUSH2 0x4C8C SWAP1 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x4C65 JUMP JUMPDEST PUSH1 0xC0 SWAP3 POP PUSH2 0x4C9E SWAP2 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xB DUP6 PUSH1 0x1 SWAP3 DUP5 MLOAD PUSH2 0x4CBF DUP2 PUSH2 0x44F1 JUMP JUMPDEST PUSH2 0x4CC8 DUP9 PUSH2 0x45B6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4CD5 DUP6 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP8 DUP10 ADD SLOAD AND DUP7 DUP3 ADD MSTORE PUSH1 0x3 DUP9 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x4CFE PUSH1 0x4 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP9 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP10 ADD SLOAD AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x4D28 PUSH1 0x7 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x4D39 PUSH1 0x8 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP9 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x4D56 PUSH1 0xA DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP5 ADD SWAP6 ADD SWAP5 SWAP3 PUSH2 0x4C54 JUMP JUMPDEST ISZERO PUSH2 0x4D71 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F6666696365722061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x154F JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x483C JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP3 LT ISZERO PUSH2 0x4E15 JUMPI PUSH2 0x4E09 PUSH2 0x4DF5 DUP3 PUSH2 0x4E0F SWAP4 PUSH1 0x5 SHL PUSH2 0x4DB6 JUMP JUMPDEST PUSH2 0x4DFF DUP5 DUP8 PUSH2 0x4DC3 JUMP JUMPDEST MLOAD PUSH1 0xF8 SHR SWAP1 PUSH2 0x4DB6 JUMP JUMPDEST SWAP2 PUSH2 0x4BE2 JUMP JUMPDEST SWAP1 PUSH2 0x4DD9 JUMP JUMPDEST SWAP2 SWAP3 POP POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH1 0x7 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP3 SHR GT PUSH1 0x6 SHL OR PUSH4 0xFFFFFFFF DUP3 DUP3 SHR GT PUSH1 0x5 SHL OR PUSH1 0x4 SWAP1 PUSH2 0xFFFF DUP4 DUP3 SHR GT DUP3 SHL OR SWAP2 PUSH1 0x1 DUP4 PUSH1 0xFF DUP4 DUP4 SWAP7 SHR GT SWAP1 PUSH1 0x3 SHR OR ADD SWAP1 DUP1 DUP3 DUP6 SHL SWAP5 PUSH1 0x1 DUP1 PUSH1 0xFF SHL SUB DUP5 AND DUP5 SUB PUSH2 0x4F91 JUMPI PUSH1 0x2 DUP7 ADD SWAP6 DUP7 DUP2 GT PUSH2 0x4F52 JUMPI PUSH2 0x4EAD PUSH2 0x4E97 DUP9 PUSH2 0x46A4 JUMP JUMPDEST SWAP8 PUSH2 0x4EA5 PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x4595 JUMP JUMPDEST DUP1 DUP10 MSTORE PUSH2 0x46A4 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP3 CALLDATACOPY DUP8 MLOAD ISZERO PUSH2 0x4F67 JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP7 MLOAD DUP3 LT ISZERO PUSH2 0x4F7C JUMPI PUSH1 0x78 PUSH1 0x21 DUP9 ADD MSTORE8 DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x4F52 JUMPI SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x4F0F JUMPI POP POP PUSH2 0x4EF3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE22E27EB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x4F67 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 BYTE PUSH2 0x4F3E DUP5 DUP10 PUSH2 0x4DC3 JUMP JUMPDEST MSTORE8 DUP6 SHR SWAP2 DUP1 ISZERO PUSH2 0x4F52 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x4EE0 JUMP JUMPDEST PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x32 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x32 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x4FC6 SWAP1 PUSH1 0x1 SWAP4 DUP5 DUP3 ADD DUP2 SSTORE PUSH2 0x4820 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x3826 JUMPI DUP2 MLOAD SWAP1 DUP2 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP2 GT PUSH2 0x1539 JUMPI DUP1 PUSH2 0x4FEE DUP8 SLOAD PUSH2 0x44B7 JUMP JUMPDEST SWAP5 PUSH1 0x1F SWAP6 DUP7 DUP2 GT PUSH2 0x5757 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP7 DUP4 GT PUSH1 0x1 EQ PUSH2 0x56F4 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x56E9 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR DUP6 SSTORE JUMPDEST DUP1 DUP6 ADD PUSH1 0x20 DUP6 ADD MLOAD DUP1 MLOAD SWAP1 DUP5 DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x5042 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP8 DUP2 GT PUSH2 0x5696 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP8 DUP4 GT PUSH1 0x1 EQ PUSH2 0x5633 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x5628 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP6 ADD PUSH1 0x40 DUP6 ADD MLOAD DUP1 MLOAD SWAP1 DUP5 DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x5093 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP8 DUP2 GT PUSH2 0x55D5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP8 DUP4 GT PUSH1 0x1 EQ PUSH2 0x5572 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x5567 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 SWAP1 DUP2 DUP7 ADD PUSH1 0x60 DUP7 ADD MLOAD DUP1 MLOAD SWAP1 DUP6 DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x50E6 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP9 DUP2 GT PUSH2 0x5514 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP9 DUP4 GT PUSH1 0x1 EQ PUSH2 0x54B2 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x54A7 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP7 ADD PUSH1 0x80 DUP7 ADD MLOAD DUP1 MLOAD SWAP1 DUP6 DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x5135 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP9 DUP2 GT PUSH2 0x5454 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP9 DUP4 GT PUSH1 0x1 EQ PUSH2 0x53F2 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x53E7 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x5 DUP8 ADD SSTORE PUSH1 0x6 DUP7 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP8 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x7 DUP7 ADD PUSH1 0xE0 DUP7 ADD MLOAD DUP1 MLOAD SWAP1 DUP6 DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x51B0 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP9 DUP2 GT PUSH2 0x5394 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP9 DUP4 GT PUSH1 0x1 EQ PUSH2 0x5332 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x5327 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x8 DUP7 ADD SWAP4 PUSH2 0x100 DUP7 ADD MLOAD DUP1 MLOAD SWAP5 DUP6 GT PUSH2 0x1539 JUMPI PUSH2 0x51FE DUP7 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP3 DUP2 GT PUSH2 0x52DF JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 DUP6 GT PUSH1 0x1 EQ PUSH2 0x526A JUMPI SWAP4 PUSH2 0x45F4 SWAP8 SWAP7 SWAP4 DUP2 PUSH1 0xA SWAP8 SWAP5 DUP2 SWAP5 PUSH2 0x140 SWAP9 PUSH1 0x0 SWAP6 PUSH2 0x525F JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH2 0x522D JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP3 DUP7 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x52C9 JUMPI POP SWAP3 DUP6 SWAP3 PUSH1 0xA SWAP9 SWAP6 SWAP3 PUSH2 0x45F4 SWAP12 SWAP11 SWAP8 PUSH2 0x140 SWAP10 SWAP7 LT PUSH2 0x52AF JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x523D JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x52A1 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP7 SSTORE SWAP5 DUP8 ADD SWAP5 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5280 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP4 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP10 LT PUSH2 0x531E JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP5 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5312 JUMPI POP POP PUSH2 0x5206 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP5 SWAP1 PUSH2 0x5304 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x52FB JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x51CE JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x537C JUMPI POP DUP5 GT PUSH2 0x5364 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x51E0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x5357 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5348 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP9 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x53DE JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x53CF JUMPI POP POP PUSH2 0x51B8 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x53C1 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x53B3 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5153 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x543C JUMPI POP DUP5 GT PUSH2 0x5424 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x5165 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x5417 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5408 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP9 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x549E JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x548F JUMPI POP POP PUSH2 0x513D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x5481 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x5473 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5104 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x54FC JUMPI POP DUP5 GT PUSH2 0x54E4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x5116 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x54D7 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x54C8 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP9 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x555E JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x554F JUMPI POP POP PUSH2 0x50EE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x5541 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x5533 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x50B1 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x55BD JUMPI POP DUP5 GT PUSH2 0x55A4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x50C5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x5597 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5588 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP8 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x561F JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x5610 JUMPI POP POP PUSH2 0x509B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x5602 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x55F4 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5060 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x567E JUMPI POP DUP5 GT PUSH2 0x5665 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x5074 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x5658 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5649 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP8 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x56E0 JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x56D1 JUMPI POP POP PUSH2 0x504A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x56C3 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x56B5 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5010 JUMP JUMPDEST SWAP1 DUP5 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP10 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x573F JUMPI POP DUP5 GT PUSH2 0x5726 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH2 0x5024 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x5719 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP8 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x570A JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 DUP8 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP4 PUSH1 0x20 DUP8 LT PUSH2 0x57A2 JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP8 SWAP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP3 JUMPDEST DUP4 DUP2 LT PUSH2 0x5794 JUMPI POP POP POP PUSH2 0x4FFA JUMP JUMPDEST DUP3 DUP2 SSTORE DUP7 SWAP6 POP DUP8 SWAP2 ADD PUSH2 0x5785 JUMP JUMPDEST SWAP4 POP DUP2 SWAP4 PUSH2 0x5776 JUMP INVALID SLT DUP8 PUSH25 0xF26BAA9F7315389EC7CF48371494BAD555182F0B0507E85DFD REVERT CREATE LOG4 GASLIMIT LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SGT 0xA6 BLOCKHASH 0xB8 BALANCE DUP16 ORIGIN MULMOD 0x4E DIV LOG4 DUP6 CODESIZE SWAP4 0xE5 0xA8 XOR NOT 0xDC MSTORE 0xB2 SHL 0xF 0xB7 0x25 SLOAD PUSH21 0xBDB5D3F064736F6C63430008140033000000000000 ","sourceMap":"396:28440:8:-:0;;;;;;;540:10;1273:26:0;1269:95;;1297:1;396:28440:8;;540:10;-1:-1:-1;;;;;;396:28440:8;;;;;;;;;;;;1297:1:0;;540:10:8;-1:-1:-1;;;;;396:28440:8;3052:40:0;1297:1;;3052:40;396:28440:8;1857:1:3;;540:10:8;396:28440;;5260:18;396:28440;;;;;;;;;;;;;;;;;;;1269:95:0;-1:-1:-1;;;1322:31:0;;1297:1;1322:31;;;396:28440:8;;;1322:31:0;396:28440:8;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":17569,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":18111,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_uint256":{"entryPoint":18387,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_array_address_dyn":{"entryPoint":18326,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_string_dyn":{"entryPoint":18182,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":18274,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_string":{"entryPoint":18436,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":18047,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_string_dyn":{"entryPoint":19302,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":19376,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_struct_LandRecord_dyn":{"entryPoint":19279,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":18084,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_struct_TimelineEvent_to_array_struct_TimelineEvent_storage_dyn_ptr":{"entryPoint":20390,"id":null,"parameterSlots":2,"returnSlots":0},"checked_add_uint256":{"entryPoint":19894,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":17846,"id":null,"parameterSlots":1,"returnSlots":1},"copy_literal_to_memory_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d":{"entryPoint":19218,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":18012,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":17591,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":17813,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_108103":{"entryPoint":17759,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_108106":{"entryPoint":17786,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_87917":{"entryPoint":17649,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_87920":{"entryPoint":17677,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_87922":{"entryPoint":17704,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_87927":{"entryPoint":17732,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":18514,"id":84,"parameterSlots":0,"returnSlots":0},"fun_generateHash":{"entryPoint":19924,"id":6314,"parameterSlots":1,"returnSlots":1},"fun_generateSurveyDataHash":{"entryPoint":18558,"id":5551,"parameterSlots":7,"returnSlots":1},"fun_toString":{"entryPoint":18605,"id":412,"parameterSlots":1,"returnSlots":1},"fun_verifyRecord_inner":{"entryPoint":19461,"id":null,"parameterSlots":2,"returnSlots":1},"increment_uint256":{"entryPoint":19426,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":19907,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_struct_LandRecord_dyn":{"entryPoint":19441,"id":null,"parameterSlots":2,"returnSlots":1},"packed_hashed_string_to_string":{"entryPoint":19247,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":19818,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_03c5":{"entryPoint":18965,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_419b":{"entryPoint":19066,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e163":{"entryPoint":19142,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_TimelineEvent_dyn":{"entryPoint":18464,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84866DD EQ PUSH2 0x43CD JUMPI DUP1 PUSH4 0x2B4F75D1 EQ PUSH2 0x40DF JUMPI DUP1 PUSH4 0x2E81E1B7 EQ PUSH2 0x40A4 JUMPI DUP1 PUSH4 0x3C925FE7 EQ PUSH2 0x406E JUMPI DUP1 PUSH4 0x4A7B7677 EQ PUSH2 0x402F JUMPI DUP1 PUSH4 0x5EAAB2E8 EQ PUSH2 0x384C JUMPI DUP1 PUSH4 0x63E25495 EQ PUSH2 0x247D JUMPI DUP1 PUSH4 0x66EA50DD EQ PUSH2 0x240C JUMPI DUP1 PUSH4 0x67AE9D21 EQ PUSH2 0x23D1 JUMPI DUP1 PUSH4 0x705ECBCE EQ PUSH2 0x1C3F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BE6 JUMPI DUP1 PUSH4 0x7AF8E3A0 EQ PUSH2 0x1BAB JUMPI DUP1 PUSH4 0x7C636833 EQ PUSH2 0x1A9C JUMPI DUP1 PUSH4 0x807D0FA7 EQ PUSH2 0x15AA JUMPI DUP1 PUSH4 0x8A589FA5 EQ PUSH2 0x1105 JUMPI DUP1 PUSH4 0x8C154AC8 EQ PUSH2 0x10BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1093 JUMPI DUP1 PUSH4 0xA58BF0B1 EQ PUSH2 0xF51 JUMPI DUP1 PUSH4 0xB3475060 EQ PUSH2 0xE93 JUMPI DUP1 PUSH4 0xB893BB10 EQ PUSH2 0xE35 JUMPI DUP1 PUSH4 0xBF9CF4CF EQ PUSH2 0xD2C JUMPI DUP1 PUSH4 0xC3CEF20A EQ PUSH2 0xCD7 JUMPI DUP1 PUSH4 0xD25BD7A8 EQ PUSH2 0xB99 JUMPI DUP1 PUSH4 0xD41EEC4E EQ PUSH2 0xAC6 JUMPI DUP1 PUSH4 0xDE0C6FF4 EQ PUSH2 0x9B3 JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x982 JUMPI DUP1 PUSH4 0xE53A1CC2 EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xEB4FC6AC EQ PUSH2 0x8F6 JUMPI DUP1 PUSH4 0xECC0CC75 EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0xEDA03AA7 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xF04B5AAB EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH4 0xF5124CD9 EQ PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1B8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 DUP1 DUP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1C8 DUP6 PUSH2 0x4528 JUMP JUMPDEST PUSH1 0x60 SWAP5 DUP6 DUP2 MSTORE DUP6 DUP4 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE DUP6 DUP1 DUP3 ADD MSTORE DUP6 PUSH1 0x80 DUP3 ADD MSTORE DUP6 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x0 SWAP1 MSTORE DUP1 MLOAD ISZERO ISZERO PUSH2 0x206 SWAP1 PUSH2 0x4A7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 DUP3 DUP2 SWAP4 MLOAD SWAP3 DUP4 SWAP2 ADD SWAP2 PUSH2 0x21D SWAP3 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x234 DUP4 PUSH2 0x4528 JUMP JUMPDEST PUSH2 0x23D DUP3 PUSH2 0x45B6 JUMP JUMPDEST DUP4 MSTORE PUSH2 0x24B PUSH1 0x1 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP4 DUP3 ADD SWAP1 DUP2 MSTORE SWAP4 PUSH2 0x25E PUSH1 0x2 DUP5 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD SWAP1 DUP2 MSTORE SWAP5 PUSH2 0x272 PUSH1 0x3 DUP6 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP6 DUP4 ADD SWAP1 DUP2 MSTORE PUSH2 0x284 PUSH1 0x4 DUP7 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH2 0x297 PUSH1 0x5 DUP8 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP9 ADD SWAP3 DUP4 MSTORE PUSH1 0x6 DUP8 ADD SLOAD SWAP7 PUSH1 0xC0 DUP10 ADD SWAP8 DUP9 MSTORE PUSH1 0x7 ADD SLOAD PUSH1 0xFF AND SWAP5 PUSH1 0xE0 DUP10 ADD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP9 DUP12 MSTORE MLOAD PUSH2 0x100 DUP1 SWAP10 DUP13 ADD MSTORE PUSH2 0x120 DUP12 ADD PUSH2 0x2DD SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP6 MLOAD PUSH1 0x1F NOT SWAP7 DUP8 DUP13 DUP3 SUB ADD PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x2F6 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP7 DUP12 DUP4 SUB ADD SWAP1 DUP12 ADD MSTORE PUSH2 0x30B SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP5 DUP10 DUP3 SUB ADD PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x321 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP4 DUP9 DUP3 SUB ADD PUSH1 0xA0 DUP10 ADD MSTORE PUSH2 0x337 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP7 DUP3 SUB ADD PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x34C SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP3 MLOAD PUSH1 0xE0 DUP6 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH2 0x37C PUSH2 0x44A1 JUMP JUMPDEST PUSH2 0x384 PUSH2 0x4852 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH1 0xFF PUSH2 0x437 PUSH1 0x20 PUSH2 0x424 DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0xA DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 PUSH2 0x475 PUSH2 0x460 CALLDATASIZE PUSH2 0x47D3 JUMP JUMPDEST SWAP3 SWAP1 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x35E JUMPI PUSH2 0x492 SWAP2 PUSH2 0x4820 JUMP JUMPDEST POP PUSH2 0x49C DUP2 PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x4A8 PUSH1 0x1 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP2 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4CA PUSH1 0x4 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x4E3 PUSH1 0x7 DUP7 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP3 PUSH2 0x4F0 PUSH1 0x8 DUP8 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP5 PUSH1 0x9 DUP8 ADD SLOAD SWAP7 PUSH1 0xA ADD PUSH2 0x503 SWAP1 PUSH2 0x45B6 JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x160 DUP1 DUP14 MSTORE DUP13 ADD PUSH2 0x51B SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x52C SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE DUP9 DUP2 SUB PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x548 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP9 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE DUP6 DUP2 SUB PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x566 SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP5 DUP2 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x578 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP1 PUSH2 0x120 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x591 SWAP2 PUSH2 0x467F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x5C6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH2 0x5D2 DUP2 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST DUP2 PUSH2 0x5E6 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD SWAP1 DUP3 DUP2 PUSH1 0x7 SWAP4 DUP5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x601 DUP3 PUSH2 0x4B4F JUMP JUMPDEST SWAP3 PUSH2 0x60F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x4595 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP5 DUP3 KECCAK256 SWAP1 DUP6 DUP1 DUP7 ADD JUMPDEST DUP6 DUP6 LT PUSH2 0x82F JUMPI POP DUP6 MLOAD DUP7 PUSH2 0x634 DUP3 PUSH2 0x4B66 JUMP JUMPDEST SWAP2 PUSH2 0x63E DUP2 PUSH2 0x4B66 JUMP JUMPDEST PUSH2 0x647 DUP3 PUSH2 0x4B66 JUMP JUMPDEST PUSH2 0x650 DUP4 PUSH2 0x4B66 JUMP JUMPDEST PUSH2 0x659 DUP5 PUSH2 0x4BB0 JUMP JUMPDEST SWAP2 PUSH2 0x663 DUP6 PUSH2 0x4BB0 JUMP JUMPDEST SWAP4 PUSH2 0x66D DUP7 PUSH2 0x4B66 JUMP JUMPDEST SWAP6 PUSH2 0x677 DUP2 PUSH2 0x4BB0 JUMP JUMPDEST SWAP8 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x713 JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH2 0x100 DUP1 DUP12 MSTORE DUP11 ADD PUSH2 0x69C SWAP2 PUSH2 0x4706 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB SWAP1 DUP11 ADD MSTORE PUSH2 0x6AD SWAP2 PUSH2 0x4706 JUMP JUMPDEST DUP8 DUP2 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x6BE SWAP2 PUSH2 0x4706 JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x6CF SWAP2 PUSH2 0x4706 JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x6E0 SWAP2 PUSH2 0x4762 JUMP JUMPDEST DUP5 DUP2 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH2 0x6F1 SWAP2 PUSH2 0x4796 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x702 SWAP2 PUSH2 0x4706 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x591 SWAP2 PUSH2 0x4762 JUMP JUMPDEST DUP1 DUP12 PUSH2 0x72E DUP3 PUSH2 0x726 PUSH2 0x82A SWAP6 DUP8 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD MLOAD SWAP3 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x739 DUP2 DUP14 PUSH2 0x4BF1 JUMP JUMPDEST POP DUP13 PUSH2 0x745 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x752 DUP3 DUP8 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x75D DUP2 DUP7 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH1 0x60 PUSH2 0x76A DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x777 DUP3 DUP9 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x782 DUP2 DUP8 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH1 0x80 PUSH2 0x78F DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x79C DUP3 DUP10 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x7A7 DUP2 DUP9 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH1 0xA0 PUSH2 0x7B4 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x7C1 DUP3 DUP11 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 PUSH2 0x7D6 DUP4 DUP7 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD AND PUSH2 0x7E4 DUP3 DUP12 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH1 0xE0 PUSH2 0x7F1 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x7FE DUP3 DUP13 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x809 DUP2 DUP12 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH2 0x120 PUSH2 0x817 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x824 DUP3 DUP14 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x67B JUMP JUMPDEST PUSH1 0x1 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x40 MLOAD PUSH2 0x841 DUP2 PUSH2 0x44F1 JUMP JUMPDEST PUSH2 0x84A DUP8 PUSH2 0x45B6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x857 DUP6 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE PUSH2 0x867 PUSH1 0x2 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x878 PUSH1 0x3 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x889 PUSH1 0x4 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x6 DUP9 ADD SLOAD AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x8B4 DUP7 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x8C5 PUSH1 0x8 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP8 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0xA DUP9 ADD SLOAD AND ISZERO ISZERO PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP4 ADD SWAP3 SWAP2 DUP7 SWAP1 PUSH2 0x620 JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x917 PUSH2 0x44A1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 PUSH2 0x93C JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0x92F JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 PUSH2 0x978 PUSH2 0x966 CALLDATASIZE PUSH2 0x47D3 JUMP JUMPDEST SWAP1 PUSH2 0x973 DUP2 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST PUSH2 0x4C05 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x80 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x9EB PUSH1 0x20 PUSH2 0x424 PUSH2 0xA6F SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x9FE DUP2 PUSH2 0x45B6 JUMP JUMPDEST SWAP1 PUSH2 0xA0B PUSH1 0x1 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xAB5 PUSH2 0xA1A PUSH1 0x2 DUP5 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xAA7 PUSH2 0xA29 PUSH1 0x3 DUP7 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xA99 PUSH2 0xA38 PUSH1 0x4 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0xA8B PUSH2 0xA48 PUSH1 0x5 DUP11 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP6 PUSH2 0xA7D PUSH1 0xFF PUSH1 0x7 PUSH1 0x6 DUP14 ADD SLOAD SWAP13 ADD SLOAD AND SWAP10 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 PUSH2 0x100 SWAP1 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST DUP14 DUP2 SUB PUSH1 0x20 DUP16 ADD MSTORE SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0xA0 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xAFE PUSH1 0x20 PUSH2 0x424 PUSH2 0xB63 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST DUP2 ADD PUSH1 0xB DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x591 PUSH2 0xB14 DUP3 PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0xB21 PUSH1 0x1 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xB2D PUSH1 0x2 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0xB7F PUSH1 0x3 DUP3 ADD SLOAD SWAP4 PUSH2 0xB71 PUSH2 0xB4E PUSH1 0x5 PUSH1 0xFF PUSH1 0x4 DUP8 ADD SLOAD AND SWAP6 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xC0 DUP12 MSTORE PUSH1 0xC0 DUP12 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x20 DUP12 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xBBB PUSH2 0x44A1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD PUSH2 0xBD6 DUP2 PUSH2 0x450D JUMP JUMPDEST DUP2 DUP4 SLOAD AND DUP2 MSTORE PUSH2 0xBE8 PUSH1 0x1 DUP5 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD SWAP4 DUP5 MSTORE PUSH2 0xBFC PUSH1 0x2 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD SWAP4 DUP5 MSTORE PUSH2 0xC10 PUSH1 0x3 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP5 ADD SWAP3 DUP4 MSTORE PUSH2 0xC24 PUSH1 0x4 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP6 ADD SWAP3 DUP4 MSTORE PUSH1 0x6 PUSH1 0xFF PUSH1 0x5 DUP5 ADD SLOAD AND SWAP3 PUSH1 0xA0 DUP8 ADD SWAP4 ISZERO ISZERO DUP5 MSTORE ADD SLOAD SWAP5 PUSH1 0xC0 DUP2 ADD SWAP6 DUP7 MSTORE MLOAD AND ISZERO PUSH2 0xC9E JUMPI PUSH2 0xC81 PUSH2 0xC8F SWAP3 PUSH2 0xB71 PUSH2 0xB63 SWAP9 MLOAD SWAP8 MLOAD SWAP6 MLOAD SWAP2 MLOAD SWAP4 MLOAD ISZERO ISZERO SWAP7 MLOAD SWAP6 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH1 0xC0 DUP12 MSTORE PUSH1 0xC0 DUP12 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x13D9999A58D95C881B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xD19 PUSH1 0x20 PUSH2 0xD0D DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH2 0x424 DUP2 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH2 0xD45 PUSH2 0x44A1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SWAP1 DUP2 DUP2 SUB PUSH2 0x35E JUMPI PUSH2 0xD5B PUSH2 0x4852 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH2 0xD72 DUP5 ISZERO ISZERO PUSH2 0x4D6A JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xDF7 JUMPI PUSH32 0x8A40EF3E42980AA96509D3E2E04B0C037F32D7251181D8843C0CB9B3378C99DF SWAP2 PUSH2 0xDEE PUSH1 0x20 SWAP3 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 DUP5 MSTORE PUSH2 0xDD4 DUP2 PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13D9999A58D95C881B9BDD081C9959DA5CDD195C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xE7F PUSH2 0xE70 PUSH1 0x20 PUSH2 0x424 PUSH2 0x591 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xEC4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xEDD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xEF6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP3 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xF0F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xF27 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x35E JUMPI PUSH2 0x591 SWAP6 PUSH2 0xF47 PUSH2 0xE7F SWAP7 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP4 PUSH1 0xC4 CALLDATALOAD SWAP6 PUSH2 0x487E JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 PUSH2 0xF64 PUSH2 0x460 CALLDATASIZE PUSH2 0x47D3 JUMP JUMPDEST DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x35E JUMPI PUSH2 0xF81 SWAP2 PUSH2 0x4820 JUMP JUMPDEST POP PUSH2 0xF8B DUP2 PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xF97 PUSH1 0x1 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0xFA4 PUSH1 0x2 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xFB0 PUSH1 0x3 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0xFBC PUSH1 0x4 DUP5 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x6 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFDB PUSH1 0x7 DUP8 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP3 PUSH2 0xFE8 PUSH1 0x8 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP5 PUSH1 0x9 DUP9 ADD SLOAD SWAP8 PUSH1 0xA ADD SLOAD PUSH1 0xFF AND SWAP7 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x160 DUP1 DUP14 MSTORE DUP13 ADD PUSH2 0x100E SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x101F SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x40 DUP13 ADD MSTORE PUSH2 0x1030 SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP10 DUP2 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x1041 SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP9 DUP2 SUB PUSH1 0x80 DUP11 ADD MSTORE PUSH2 0x1052 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE DUP6 DUP2 SUB PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x106E SWAP2 PUSH2 0x467F JUMP JUMPDEST DUP5 DUP2 SUB PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x1080 SWAP2 PUSH2 0x467F JUMP JUMPDEST SWAP2 PUSH2 0x120 DUP5 ADD MSTORE ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x10F2 PUSH1 0x20 PUSH2 0x424 DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1136 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x114E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1166 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x117F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1197 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x5 DUP8 MSTORE PUSH2 0x11B4 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x4A15 JUMP JUMPDEST PUSH2 0x11C0 DUP3 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11EA DUP4 MLOAD SWAP2 DUP10 DUP2 DUP2 DUP8 ADD SWAP5 PUSH2 0x11DA DUP2 DUP4 DUP9 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x9 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH2 0x44B7 JUMP JUMPDEST ISZERO PUSH2 0x1565 JUMPI SWAP1 DUP4 SWAP2 PUSH2 0x11FE DUP8 MLOAD ISZERO ISZERO PUSH2 0x4AC6 JUMP JUMPDEST PUSH2 0x12D8 PUSH2 0x1254 PUSH2 0x12D3 DUP12 DUP8 DUP12 DUP14 DUP13 PUSH2 0x1234 PUSH2 0x1225 DUP7 DUP12 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x9 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x45B6 JUMP JUMPDEST SWAP13 DUP14 SWAP3 PUSH2 0x1240 TIMESTAMP PUSH2 0x48AD JUMP JUMPDEST SWAP5 DUP12 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP9 MLOAD DUP1 SWAP3 DUP12 DUP12 ADD SWAP1 PUSH2 0x465C JUMP JUMPDEST DUP8 ADD PUSH2 0x1268 DUP3 MLOAD DUP1 SWAP4 DUP12 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x127B DUP3 MLOAD DUP1 SWAP4 DUP11 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x128E DUP3 MLOAD DUP1 SWAP4 DUP10 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x12A1 DUP3 MLOAD DUP1 SWAP4 DUP9 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x12B4 DUP3 MLOAD DUP1 SWAP4 DUP8 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x12C7 DUP3 MLOAD DUP1 SWAP4 DUP7 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x4595 JUMP JUMPDEST PUSH2 0x4DD4 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD DUP11 DUP2 DUP8 MLOAD PUSH2 0x12EB DUP2 DUP4 DUP9 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x1304 DUP7 PUSH2 0x44F1 JUMP JUMPDEST DUP10 DUP7 MSTORE DUP11 DUP13 DUP8 ADD MSTORE DUP7 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP6 ADD MSTORE CALLER PUSH1 0xC0 DUP6 ADD MSTORE DUP6 PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE DUP6 PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x1369 PUSH1 0x1 SWAP4 DUP5 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP12 DUP2 DUP9 MLOAD PUSH2 0x135A DUP2 DUP4 DUP10 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x4FA6 JUMP JUMPDEST DUP3 DUP7 ADD DUP1 DUP8 GT PUSH2 0x154F JUMPI PUSH2 0x13A7 SWAP2 DUP11 SWAP2 PUSH1 0x40 MLOAD DUP4 DUP2 DUP10 MLOAD PUSH2 0x138B DUP2 DUP4 DUP9 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x9 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 DUP5 MLOAD SWAP2 DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x13C5 DUP4 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x14F0 JUMPI JUMPDEST POP DUP9 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x146B JUMPI PUSH2 0x1455 SWAP5 PUSH2 0x1434 SWAP9 SWAP8 SWAP7 SWAP5 DUP5 DUP1 PUSH2 0x1441 SWAP7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x57AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP14 SWAP15 SWAP7 PUSH2 0x141F SWAP7 PUSH1 0x0 SWAP4 PUSH2 0x1460 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x4B2F JUMP JUMPDEST SWAP9 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0xA0 DUP10 MSTORE PUSH1 0xA0 DUP10 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP2 DUP8 DUP4 SUB SWAP1 DUP9 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 TIMESTAMP PUSH1 0x40 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST DUP11 ADD MLOAD SWAP3 POP CODESIZE PUSH2 0x140A JUMP JUMPDEST PUSH1 0x1F SWAP3 SWAP2 SWAP3 NOT DUP3 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x14DB JUMPI POP SWAP5 PUSH2 0x1441 SWAP5 DUP5 PUSH2 0x141F SWAP5 PUSH2 0x1455 SWAP10 SWAP5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x57AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP15 SWAP16 SWAP8 PUSH2 0x1434 SWAP15 SWAP14 SWAP13 SWAP11 LT PUSH2 0x14C2 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x4B2F JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 PUSH2 0x14B6 JUMP JUMPDEST DUP9 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP6 ADD SWAP3 SWAP2 DUP13 ADD SWAP2 DUP13 ADD PUSH2 0x1480 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP12 DUP6 LT PUSH2 0x152F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP3 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1523 JUMPI POP POP PUSH2 0x13CE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP3 SWAP1 PUSH2 0x1515 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53757276657920626C6F636B20646F6573206E6F742065786973740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x15DB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x15F4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x160C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1625 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP4 PUSH1 0x84 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x163E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP4 PUSH1 0xA4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1657 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x5 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1675 SWAP1 PUSH2 0x4A15 JUMP JUMPDEST DUP4 MLOAD ISZERO ISZERO PUSH2 0x1682 SWAP1 PUSH2 0x4A7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP5 MLOAD SWAP9 DUP8 DUP2 DUP12 DUP2 DUP4 DUP11 ADD SWAP14 PUSH2 0x169B SWAP2 DUP16 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x9 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD PUSH2 0x16AF SWAP1 PUSH2 0x44B7 JUMP JUMPDEST PUSH2 0x1A57 JUMPI DUP7 DUP10 PUSH2 0x173F SWAP5 SWAP4 DUP11 PUSH2 0x12D3 SWAP5 PUSH2 0x16C8 TIMESTAMP PUSH2 0x48AD JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 PUSH2 0x16DF DUP14 MLOAD DUP1 SWAP3 DUP11 DUP11 ADD SWAP1 PUSH2 0x465C JUMP JUMPDEST DUP7 ADD PUSH2 0x16F3 DUP3 MLOAD DUP1 SWAP4 DUP11 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x1706 DUP3 MLOAD DUP1 SWAP4 DUP10 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x1719 DUP3 MLOAD DUP1 SWAP4 DUP9 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x172C DUP3 MLOAD DUP1 SWAP4 DUP8 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST DUP11 MLOAD SWAP2 ADD PUSH2 0x12B4 DUP3 DUP7 DUP4 ADD DUP8 DUP15 ADD PUSH2 0x465C JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x174D DUP4 PUSH2 0x44F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 PUSH2 0x175A DUP7 PUSH2 0x457A JUMP JUMPDEST PUSH1 0x12 DUP7 MSTORE PUSH18 0x14DD5C9D995E509B1BD8DAD0DC99585D1959 PUSH1 0x72 SHL SWAP6 DUP7 DUP9 DUP3 ADD MSTORE DUP5 MSTORE DUP8 DUP8 DUP6 ADD MSTORE DUP5 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1798 DUP2 PUSH2 0x455F JUMP JUMPDEST PUSH1 0x2F DUP2 MSTORE PUSH32 0x496E697469616C2073757276657920626C6F636B206372656174656420776974 DUP8 DUP3 ADD MSTORE PUSH15 0x6820616C6C206C616E642064617461 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP5 ADD MSTORE CALLER PUSH1 0xC0 DUP5 ADD MSTORE DUP8 PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x17F8 PUSH2 0x4B12 JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x1825 PUSH1 0x1 SWAP4 DUP5 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP9 DUP2 DUP9 MLOAD PUSH2 0x135A DUP2 DUP4 DUP11 PUSH2 0x465C JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP8 DUP2 DUP8 MLOAD PUSH2 0x1838 DUP2 DUP4 DUP10 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SSTORE PUSH1 0x40 MLOAD DUP7 DUP2 DUP7 MLOAD PUSH2 0x1855 DUP2 DUP4 DUP9 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x9 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP9 MLOAD SWAP1 DUP2 GT PUSH2 0x1539 JUMPI PUSH2 0x1873 DUP3 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A0E JUMPI JUMPDEST POP DUP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x198B JUMPI SWAP4 PUSH2 0x18DA DUP9 PUSH2 0x1960 SWAP6 PUSH2 0x193A SWAP6 DUP6 PUSH2 0x1974 SWAP11 SWAP7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x57AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP15 SWAP16 SWAP11 PUSH1 0x0 SWAP2 PUSH2 0x1980 JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP7 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP8 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0xA DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x18F7 DUP2 PUSH2 0x4B2F JUMP JUMPDEST PUSH32 0x2F32FDDD89C87048CDBC120D2AFD8519AB4D1664738F25E8475B703DC21EAAEC PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 MSTORE DUP1 PUSH2 0x192D PUSH1 0x40 DUP3 ADD DUP10 PUSH2 0x467F JUMP JUMPDEST TIMESTAMP DUP13 DUP4 ADD MSTORE SUB SWAP1 LOG2 PUSH2 0x4B2F JUMP JUMPDEST SWAP7 PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0xA0 DUP9 MSTORE PUSH1 0x12 PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 TIMESTAMP PUSH1 0x40 DUP6 ADD MSTORE DUP4 DUP3 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST SWAP1 POP DUP11 ADD MLOAD CODESIZE PUSH2 0x18B6 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x19F9 JUMPI POP PUSH2 0x1960 SWAP6 PUSH2 0x193A SWAP6 DUP9 DUP7 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x57AC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP15 SWAP16 SWAP11 SWAP7 PUSH2 0x18DA SWAP7 DUP16 SWAP7 SWAP10 PUSH2 0x1974 SWAP15 SWAP11 LT PUSH2 0x19E0 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x18C9 JUMP JUMPDEST DUP13 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0x19D4 JUMP JUMPDEST DUP13 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP8 ADD SWAP3 SWAP2 DUP11 ADD SWAP2 DUP11 ADD PUSH2 0x199D JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP10 DUP5 LT PUSH2 0x1A4D JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1A41 JUMPI POP POP PUSH2 0x187C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1A28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53757276657920626C6F636B20616C7265616479206578697374730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1ACD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH2 0x1AD9 DUP2 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST PUSH2 0x591 PUSH1 0x40 MLOAD SWAP2 PUSH1 0xFF PUSH2 0x1B7C DUP6 DUP4 MLOAD SWAP6 DUP2 DUP2 DUP2 DUP8 ADD SWAP9 PUSH2 0x1AFA DUP2 DUP4 DUP13 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0xB DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP6 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x1B12 DUP7 PUSH2 0x4544 JUMP JUMPDEST PUSH2 0x1B1B DUP9 PUSH2 0x45B6 JUMP JUMPDEST DUP7 MSTORE PUSH2 0x1B29 PUSH1 0x1 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP4 DUP8 ADD MSTORE PUSH2 0x1B39 PUSH1 0x2 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 PUSH2 0x1B66 PUSH1 0x5 PUSH1 0x3 DUP12 ADD SLOAD SWAP11 PUSH1 0x60 DUP11 ADD SWAP12 DUP13 MSTORE DUP9 PUSH1 0x4 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x80 DUP12 ADD MSTORE ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP7 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0xA DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP3 MLOAD SWAP1 MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 ISZERO ISZERO DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xE7F PUSH2 0xE70 PUSH1 0x20 PUSH2 0xD0D PUSH2 0x591 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH2 0x1BFF PUSH2 0x4852 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1C6F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x1C8E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x1CA8 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x4A15 JUMP JUMPDEST PUSH2 0x1CB4 DUP3 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST PUSH2 0x1CCC PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP6 MLOAD PUSH2 0x1225 DUP2 DUP4 DUP6 DUP11 ADD PUSH2 0x465C JUMP JUMPDEST SWAP2 DUP3 MLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x22A7 JUMPI PUSH1 0x1 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x1CE6 DUP2 PUSH2 0x455F JUMP JUMPDEST PUSH1 0x29 DUP2 MSTORE PUSH32 0x53757276657920626C6F636B20646F6573206E6F74206578697374206F6E2062 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0x3637B1B5B1B430B4B7 PUSH1 0xB9 SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP4 JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1D31 DUP4 PUSH2 0x4544 JUMP JUMPDEST DUP4 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE DUP4 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP5 MLOAD PUSH2 0x1D67 DUP2 DUP4 DUP6 DUP10 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0xB DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x1D90 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2257 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x21EB JUMPI PUSH1 0x0 SWAP3 PUSH2 0x21E0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x1DEA PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x218D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x211B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2110 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x1E45 PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x20C9 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2054 JUMPI SWAP2 DUP1 PUSH1 0xA0 SWAP5 SWAP3 PUSH1 0x5 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2049 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x1EAF PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0x4 DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SWAP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x1ECE DUP4 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2001 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F94 JUMPI PUSH2 0x1F47 SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x1F89 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x1F42 PUSH1 0x40 MLOAD DUP3 MLOAD PUSH2 0x1F21 DUP2 DUP4 PUSH1 0x20 DUP8 ADD PUSH2 0x465C JUMP JUMPDEST PUSH1 0xA SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO PUSH1 0xFF AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4B2F JUMP JUMPDEST PUSH32 0x3F8DAFEB5450B12547CAD6D7F76B6C1F7808F789148F742314A6499132C95552 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1F77 DUP7 DUP7 DUP4 PUSH2 0x4804 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x591 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x4804 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1EF6 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1FE9 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH2 0x1F47 SWAP9 SWAP8 SWAP7 SWAP5 LT PUSH2 0x1FD0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1F0B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1FA8 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x203F JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2033 JUMPI POP PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2026 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x1E6E JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x20B1 JUMPI POP SWAP3 PUSH1 0xA0 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x5 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2098 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x1E86 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x2088 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2109 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x20FD JUMPI POP POP PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x20E7 JUMP JUMPDEST POP DUP1 PUSH2 0x20E7 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1E0A JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2172 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2159 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x1E22 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x2149 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x21D9 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x21CA JUMPI POP POP PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x21B4 JUMP JUMPDEST POP DUP1 PUSH2 0x21AE JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1DB0 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x223C JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2223 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x1DC5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x2216 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x21FB JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x22A0 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2291 JUMPI POP POP PUSH2 0x1D99 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x227B JUMP JUMPDEST POP DUP1 PUSH2 0x2275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x22D1 PUSH1 0x20 DUP3 DUP7 MLOAD PUSH2 0x22C4 DUP2 DUP8 DUP6 DUP12 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD SUB DUP1 DUP5 MSTORE ADD DUP3 PUSH2 0x4595 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x22F1 PUSH1 0x20 DUP3 DUP9 MLOAD PUSH2 0x22C4 DUP2 DUP8 DUP6 DUP14 ADD PUSH2 0x465C JUMP JUMPDEST MLOAD SWAP1 KECCAK256 EQ PUSH2 0x237A JUMPI PUSH1 0x1 SWAP2 PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE PUSH1 0x43 DUP2 MSTORE PUSH32 0x4461746162617365206861736820646F6573206E6F74206D6174636820626C6F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x636B636861696E2068617368202D2064617461206D61792062652074616D7065 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x1C9959 PUSH1 0xEA SHL PUSH1 0x60 DUP3 ADD MSTORE SWAP4 PUSH2 0x1D24 JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x2389 DUP2 PUSH2 0x455F JUMP JUMPDEST PUSH1 0x2F DUP2 MSTORE PUSH32 0x4461746120696E74656772697479207665726966696564202D206E6F2074616D PUSH1 0x20 DUP3 ADD MSTORE PUSH15 0x1C195C9A5B99C819195D1958DD1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP4 PUSH2 0x1D24 JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xE7F PUSH2 0x1225 PUSH1 0x20 PUSH2 0x424 PUSH2 0x591 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 PUSH2 0x2429 PUSH2 0x241F CALLDATASIZE PUSH2 0x47D3 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0xD0D PUSH2 0x4852 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x247B JUMPI DUP3 PUSH1 0x5 PUSH2 0x244C DUP4 DUP6 PUSH2 0x4820 JUMP JUMPDEST POP ADD SLOAD EQ PUSH2 0x2462 JUMPI PUSH2 0x245D SWAP1 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x6 SWAP3 POP PUSH2 0x246F SWAP2 PUSH2 0x4820 JUMP JUMPDEST POP ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x24AE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x24CD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x24ED SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x250C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x252C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP4 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x254C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP3 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x256C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x258B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP5 CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x25A6 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x4A15 JUMP JUMPDEST PUSH2 0x25B2 DUP6 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST PUSH2 0x25BE DUP5 MLOAD ISZERO ISZERO PUSH2 0x4AC6 JUMP JUMPDEST PUSH2 0x25CD TIMESTAMP DUP8 DUP5 DUP5 DUP13 DUP13 DUP12 PUSH2 0x487E JUMP JUMPDEST SWAP6 PUSH2 0x25E8 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0xE70 DUP12 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST SWAP3 DUP4 MLOAD ISZERO PUSH2 0x383C JUMPI JUMPDEST PUSH2 0x2687 DUP7 PUSH2 0x12D3 PUSH1 0x34 DUP11 DUP13 PUSH2 0x2605 TIMESTAMP PUSH2 0x48AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP4 PUSH2 0x261E DUP9 SWAP6 MLOAD DUP1 SWAP3 PUSH1 0x20 DUP1 DUP10 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST DUP5 ADD PUSH2 0x2633 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD CALLER PUSH1 0x60 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2650 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP9 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST ADD PUSH2 0x2664 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP8 DUP6 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST DUP11 MLOAD SWAP2 ADD PUSH2 0x2678 DUP3 DUP6 DUP4 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x465C JUMP JUMPDEST ADD SUB PUSH1 0x14 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x4595 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2695 DUP3 PUSH2 0x44F1 JUMP JUMPDEST DUP9 DUP3 MSTORE DUP8 PUSH1 0x20 DUP4 ADD MSTORE CALLER PUSH1 0x40 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE DUP7 PUSH1 0x80 DUP4 ADD MSTORE NUMBER PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE DUP5 PUSH2 0x100 DUP3 ADD MSTORE NUMBER PUSH2 0x120 DUP3 ADD MSTORE DUP9 PUSH2 0x140 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0x26EE DUP13 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x2715 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x4820 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x3826 JUMPI DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x273B DUP6 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x37D6 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x376A JUMPI PUSH1 0x0 SWAP3 PUSH2 0x375F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2795 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x370C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x369A JUMPI PUSH1 0x0 SWAP3 PUSH2 0x368F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x281E PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x363C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x35CA JUMPI PUSH1 0x0 SWAP3 PUSH2 0x35BF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH2 0x287F PUSH1 0xC0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x6 DUP5 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x28A4 PUSH1 0x7 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x356C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x34FA JUMPI PUSH1 0x0 SWAP3 PUSH2 0x34EF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP4 ADD SSTORE JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x2900 PUSH1 0x8 DUP6 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x34A8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3434 JUMPI PUSH2 0x140 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3429 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 DUP5 ADD SSTORE JUMPDEST PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP5 ADD SSTORE ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x296A PUSH1 0xA DUP5 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x33E2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3372 JUMPI PUSH1 0xA SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x3367 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP2 ADD SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x29B2 DUP5 PUSH2 0x4528 JUMP JUMPDEST DUP8 DUP5 MSTORE DUP10 PUSH1 0x20 DUP6 ADD MSTORE DUP11 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP8 MLOAD PUSH2 0x29F2 DUP2 DUP4 DUP6 DUP13 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2A1C DUP6 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3317 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x32AB JUMPI PUSH1 0x0 SWAP3 PUSH2 0x32A0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2A76 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x324D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x31DB JUMPI PUSH1 0x0 SWAP3 PUSH2 0x31D0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2AD3 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x317D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x310B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3100 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2B30 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x30AD JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x303B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3030 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x2B8D PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2FDD JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2F6B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2F60 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x2BE8 PUSH1 0x5 DUP6 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2F19 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2EA0 JUMPI SWAP3 DUP3 PUSH1 0x7 SWAP4 PUSH1 0xE0 SWAP4 PUSH2 0x2C4E SWAP8 SWAP7 PUSH1 0x0 SWAP3 PUSH2 0x2E95 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x5 DUP6 ADD SSTORE JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x6 DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x2C63 DUP2 DUP4 DUP6 DUP12 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x2C89 DUP4 SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2E51 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2DB6 JUMPI SWAP5 PUSH2 0x2D84 SWAP8 SWAP5 PUSH2 0x2D92 SWAP5 DUP5 PUSH2 0x2D6F SWAP6 PUSH32 0x68375F142C78057CDAFC077F46DE16BA1149B3D9EC67C8C315F7A48B859722C4 SWAP13 SWAP11 SWAP6 PUSH2 0x2DA0 SWAP11 PUSH1 0x0 SWAP3 PUSH2 0x2DAB JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH32 0xE85D545CAA9029B0E323A8D64A4B1FABA24F52ACCB1E5A05EFD882C6AE9C2492 PUSH2 0x2D4C PUSH2 0x2D22 DUP6 PUSH2 0x4B2F JUMP JUMPDEST SWAP3 PUSH2 0x2D38 PUSH1 0x40 MLOAD SWAP6 PUSH1 0xA0 DUP8 MSTORE PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 TIMESTAMP PUSH1 0x20 DUP8 ADD MSTORE DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP3 NUMBER PUSH1 0x60 DUP3 ADD MSTORE DUP1 DUP5 SUB PUSH1 0x80 DUP3 ADD MSTORE DUP1 PUSH2 0x2D67 CALLER SWAP6 DUP11 PUSH2 0x467F JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x4B2F JUMP JUMPDEST SWAP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x80 DUP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST TIMESTAMP PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x2CE0 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2E39 JUMPI POP SWAP5 PUSH1 0x1 DUP6 PUSH32 0x68375F142C78057CDAFC077F46DE16BA1149B3D9EC67C8C315F7A48B859722C4 SWAP13 SWAP11 SWAP6 PUSH2 0x2DA0 SWAP11 SWAP6 PUSH2 0x2D84 SWAP14 SWAP11 SWAP6 PUSH2 0x2D6F SWAP10 PUSH2 0x2D92 SWAP12 LT PUSH2 0x2E20 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2CF5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x2E13 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x2DCA JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2E8E JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2E82 JUMPI POP POP PUSH2 0x2C92 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2E6C JUMP JUMPDEST POP DUP1 PUSH2 0x2E6C JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x2C15 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x2F01 JUMPI POP DUP4 PUSH1 0xE0 SWAP4 PUSH2 0x2C4E SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH1 0x7 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2EE8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x2C2D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x2ED8 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2EB1 JUMP JUMPDEST PUSH1 0x5 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x2F59 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x2F4D JUMPI POP POP PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F37 JUMP JUMPDEST POP DUP1 PUSH2 0x2F37 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2BAD JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2FC2 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2FA9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x2BC5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x2F99 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2F7E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3029 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x301A JUMPI POP POP PUSH2 0x2B96 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3004 JUMP JUMPDEST POP DUP1 PUSH2 0x2FFE JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2B50 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3092 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3079 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x2B68 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x3069 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x304E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x30F9 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x30EA JUMPI POP POP PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x30D4 JUMP JUMPDEST POP DUP1 PUSH2 0x30CE JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2AF3 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3162 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3149 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x2B0B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x3139 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x311E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x31C9 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x31BA JUMPI POP POP PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x31A4 JUMP JUMPDEST POP DUP1 PUSH2 0x319E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2A96 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3232 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3219 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x2AAE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x3209 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x31EE JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3299 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x328A JUMPI POP POP PUSH2 0x2A7F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3274 JUMP JUMPDEST POP DUP1 PUSH2 0x326E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2A3C JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x32FC JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x32E3 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0x2A51 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x32D6 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x32BB JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3360 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3351 JUMPI POP POP PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x333B JUMP JUMPDEST POP DUP1 PUSH2 0x3335 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x298F JUMP JUMPDEST SWAP1 PUSH1 0xA DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x33CA JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH1 0xA SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x33B1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP2 ADD SSTORE PUSH2 0x29A5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x33A3 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3383 JUMP JUMPDEST PUSH1 0xA DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3422 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3416 JUMPI POP POP PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3400 JUMP JUMPDEST POP DUP1 PUSH2 0x3400 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x2927 JUMP JUMPDEST SWAP1 PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x3490 JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0x140 SWAP7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3477 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 DUP5 ADD SSTORE PUSH2 0x293F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0x3467 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3445 JUMP JUMPDEST PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x34E8 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x34DC JUMPI POP POP PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x34C6 JUMP JUMPDEST POP DUP1 PUSH2 0x34C6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x28C4 JUMP JUMPDEST SWAP3 POP PUSH1 0x7 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3551 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3538 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x28DC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x3528 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x7 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x35B8 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x35A9 JUMPI POP POP PUSH2 0x28AD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3593 JUMP JUMPDEST POP DUP1 PUSH2 0x358D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x283E JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3621 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3608 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x2856 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x35F8 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x35DD JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3688 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3679 JUMPI POP POP PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3663 JUMP JUMPDEST POP DUP1 PUSH2 0x365D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x27B5 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x36F1 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x36D8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x27CD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x36C8 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x36AD JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3758 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3749 JUMPI POP POP PUSH2 0x279E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3733 JUMP JUMPDEST POP DUP1 PUSH2 0x372D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x275B JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x37BB JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x37A2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0x2770 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x3795 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x377A JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x381F JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3810 JUMPI POP POP PUSH2 0x2744 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x37FA JUMP JUMPDEST POP DUP1 PUSH2 0x37F4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 POP PUSH2 0x3846 PUSH2 0x4B12 JUMP JUMPDEST SWAP3 PUSH2 0x25F1 JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH2 0x3865 PUSH2 0x44A1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x3884 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x38A3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x38C3 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x38E2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP4 PUSH2 0x38EB PUSH2 0x4852 JUMP JUMPDEST PUSH2 0x38FF PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO PUSH2 0x4D6A JUMP JUMPDEST DUP4 MLOAD ISZERO PUSH2 0x3FF3 JUMPI DUP1 MLOAD ISZERO PUSH2 0x3FAE JUMPI DUP2 MLOAD ISZERO PUSH2 0x3F69 JUMPI DUP5 MLOAD ISZERO PUSH2 0x3F2B JUMPI PUSH1 0x40 MLOAD PUSH2 0x3927 DUP2 PUSH2 0x450D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x80 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 DUP8 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE MLOAD DUP1 MLOAD SWAP2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x39A6 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3ED8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3E66 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3E5B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x3A03 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3E08 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3D96 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3D8B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x3A60 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3D38 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3CC6 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3CBB JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1539 JUMPI PUSH2 0x3ABB PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x44B7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3C74 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3BCC JUMPI SWAP5 PUSH2 0x3B87 SWAP8 SWAP5 PUSH1 0x6 PUSH1 0xC0 PUSH2 0x3BA3 SWAP7 DUP7 PUSH32 0xC5D4B575E5BDB27802D44E5CDBE4804D1C9B0C111CDF21A596835E7424E6C7C4 SWAP14 SWAP12 SWAP8 PUSH2 0x3B95 SWAP8 PUSH2 0x3BBC SWAP13 PUSH1 0x0 SWAP3 PUSH2 0x3BC1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP6 ADD SSTORE JUMPDEST PUSH2 0x3B4D PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0x80 DUP10 MSTORE PUSH1 0x80 DUP10 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP6 PUSH2 0x467F JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3B16 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x3C5C JUMPI POP SWAP5 PUSH1 0x6 PUSH1 0xC0 PUSH2 0x3BA3 SWAP7 PUSH1 0x1 DUP8 PUSH2 0x3B95 SWAP8 PUSH32 0xC5D4B575E5BDB27802D44E5CDBE4804D1C9B0C111CDF21A596835E7424E6C7C4 SWAP16 SWAP14 SWAP10 SWAP8 PUSH2 0x3B87 SWAP16 SWAP13 PUSH2 0x3BBC SWAP15 SWAP10 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3C43 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x3B2E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3C33 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3BDD JUMP JUMPDEST PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3CB4 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3CA8 JUMPI POP POP PUSH2 0x3AC4 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3C92 JUMP JUMPDEST POP DUP1 PUSH2 0x3C92 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x3A80 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3D1D JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3D04 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x3A98 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x3CF4 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3CD9 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3D84 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3D75 JUMPI POP POP PUSH2 0x3A69 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3D5F JUMP JUMPDEST POP DUP1 PUSH2 0x3D59 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x3A23 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3DED JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3DD4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x3A3B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x3DC4 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3DA9 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3E54 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3E45 JUMPI POP POP PUSH2 0x3A0C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3E2F JUMP JUMPDEST POP DUP1 PUSH2 0x3E29 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x39C6 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3EBD JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3EA4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x39DE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3E79 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x3F24 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x3F15 JUMPI POP POP PUSH2 0x39AF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x3EFF JUMP JUMPDEST POP DUP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x54616C756B612063616E6E6F7420626520656D707479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44697374726963742063616E6E6F7420626520656D7074790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44657369676E6174696F6E2063616E6E6F7420626520656D7074790000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E616D652063616E6E6F7420626520656D707479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4050 PUSH2 0x44A1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x10F2 PUSH1 0x20 PUSH2 0xD0D DUP2 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0xE7F PUSH2 0x1225 PUSH1 0x20 PUSH2 0xD0D PUSH2 0x591 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x35E JUMPI PUSH2 0x4110 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST PUSH2 0x411C DUP2 MLOAD ISZERO ISZERO PUSH2 0x4A7A JUMP JUMPDEST DUP2 PUSH2 0x4130 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD SWAP1 DUP3 DUP2 PUSH1 0x2 SWAP4 DUP5 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD SWAP1 PUSH2 0x414B DUP3 PUSH2 0x4B4F JUMP JUMPDEST SWAP3 PUSH2 0x4159 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x4595 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE DUP5 DUP3 KECCAK256 SWAP1 DUP6 DUP1 DUP7 ADD JUMPDEST DUP6 DUP6 LT PUSH2 0x430D JUMPI POP DUP6 DUP1 MLOAD PUSH2 0x417E DUP2 PUSH2 0x4B66 JUMP JUMPDEST SWAP3 PUSH2 0x4188 DUP3 PUSH2 0x4BB0 JUMP JUMPDEST SWAP1 PUSH2 0x4192 DUP4 PUSH2 0x4BB0 JUMP JUMPDEST SWAP1 PUSH2 0x419C DUP5 PUSH2 0x4B66 JUMP JUMPDEST SWAP3 PUSH2 0x41A6 DUP6 PUSH2 0x4B66 JUMP JUMPDEST SWAP5 PUSH2 0x41B0 DUP2 PUSH2 0x4B66 JUMP JUMPDEST SWAP7 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x422D JUMPI DUP10 PUSH1 0xC0 PUSH2 0x591 DUP12 PUSH2 0x421F DUP13 PUSH2 0x4211 DUP14 PUSH2 0x4203 DUP15 PUSH2 0x41F5 DUP16 DUP16 PUSH2 0x41E8 PUSH1 0x40 MLOAD SWAP14 DUP14 DUP16 SWAP15 DUP16 SWAP1 DUP2 MSTORE ADD SWAP1 PUSH2 0x4706 JUMP JUMPDEST SWAP2 DUP13 DUP4 SUB SWAP1 DUP14 ADD MSTORE PUSH2 0x4762 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x4796 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x4706 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x4706 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0x4706 JUMP JUMPDEST DUP1 DUP6 PUSH2 0x423C PUSH2 0x4308 SWAP4 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x4249 DUP3 DUP14 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x4254 DUP2 DUP13 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH1 0x60 PUSH2 0x4261 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x426E DUP3 DUP8 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH2 0x4283 DUP4 DUP7 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD AND PUSH2 0x4291 DUP3 DUP10 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH1 0x80 PUSH2 0x429E DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x42AB DUP3 DUP11 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x42B6 DUP2 DUP10 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH2 0x140 PUSH2 0x42C4 DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x42D1 DUP3 DUP12 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x42DC DUP2 DUP11 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH2 0x100 PUSH2 0x42EA DUP3 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD PUSH2 0x42F7 DUP3 DUP13 PUSH2 0x4BF1 JUMP JUMPDEST MSTORE PUSH2 0x4302 DUP2 DUP12 PUSH2 0x4BF1 JUMP JUMPDEST POP PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x41B4 JUMP JUMPDEST PUSH1 0x1 SWAP2 PUSH1 0xB SWAP2 PUSH1 0x40 MLOAD PUSH2 0x431F DUP2 PUSH2 0x44F1 JUMP JUMPDEST PUSH2 0x4328 DUP8 PUSH2 0x45B6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4335 DUP6 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP7 DUP9 ADD SLOAD AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP8 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x435F PUSH1 0x4 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP8 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP9 ADD SLOAD AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x4389 PUSH1 0x7 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x439A PUSH1 0x8 DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP8 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x43B7 PUSH1 0xA DUP9 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP4 ADD SWAP3 SWAP2 DUP7 SWAP1 PUSH2 0x416A JUMP JUMPDEST CALLVALUE PUSH2 0x35E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x35E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x43EF PUSH2 0x44A1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD AND PUSH2 0x440D PUSH1 0x1 DUP4 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0x441A PUSH1 0x2 DUP3 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x4490 PUSH2 0x4429 PUSH1 0x3 DUP5 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x4482 PUSH2 0x4438 PUSH1 0x4 DUP7 ADD PUSH2 0x45B6 JUMP JUMPDEST SWAP2 PUSH2 0x4474 PUSH1 0x6 PUSH1 0xFF PUSH1 0x5 DUP10 ADD SLOAD AND SWAP8 ADD SLOAD SWAP6 PUSH2 0x4466 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0xE0 DUP12 ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0x467F JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x35E JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x44E7 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x44D1 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x44C6 JUMP JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1539 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x45CA DUP5 PUSH2 0x44B7 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x4639 JUMPI POP PUSH1 0x1 EQ PUSH2 0x45F6 JUMPI JUMPDEST POP POP PUSH2 0x45F4 SWAP3 POP SUB DUP4 PUSH2 0x4595 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x4621 JUMPI POP POP PUSH2 0x45F4 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x45E6 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x4609 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x45F4 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x45E6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x466F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x465F JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x4698 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1539 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x35E JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x46D6 DUP3 PUSH2 0x46A4 JUMP JUMPDEST SWAP3 PUSH2 0x46E4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x4595 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x35E JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 DUP3 MLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 DUP2 DUP1 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x4734 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x4752 PUSH1 0x1 SWAP4 PUSH1 0x1F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x467F JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x4724 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x4782 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x4774 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x47B6 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x47A8 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x35E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x35E JUMPI PUSH2 0x47FD SWAP2 PUSH1 0x4 ADD PUSH2 0x46BF JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x481D SWAP4 SWAP3 ISZERO ISZERO DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x467F JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x483C JUMPI PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x4866 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 SWAP1 SWAP2 SWAP5 PUSH2 0x12D3 SWAP5 PUSH2 0x4892 PUSH2 0x481D SWAP9 PUSH2 0x48AD JUMP JUMPDEST SWAP3 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP6 DUP8 MLOAD PUSH2 0x1254 DUP2 PUSH1 0x20 SWAP11 DUP12 DUP1 DUP13 ADD SWAP2 ADD PUSH2 0x465C JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x4A07 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x49F8 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x49E9 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x49DA JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x49CB JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x49BB JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x49B1 JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 DUP2 DUP7 ADD SWAP6 PUSH2 0x4946 DUP8 PUSH2 0x46A4 JUMP JUMPDEST SWAP7 PUSH2 0x4954 PUSH1 0x40 MLOAD SWAP9 DUP10 PUSH2 0x4595 JUMP JUMPDEST DUP1 DUP9 MSTORE PUSH2 0x4963 PUSH1 0x1F NOT SWAP2 PUSH2 0x46A4 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP10 ADD CALLDATACOPY DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x497B JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x49AC JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x496F JUMP JUMPDEST PUSH2 0x4974 JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x4933 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x4928 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x491D JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x4910 JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x4901 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x48EF JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x48D6 JUMP JUMPDEST ISZERO PUSH2 0x4A1C JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920617574686F72697A6564206F666669636572732063616E20706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3337B936903A3434B99030B1BA34B7B7 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4A81 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537572766579206E756D6265722063616E6E6F7420626520656D707479000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4ACD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E7420747970652063616E6E6F7420626520656D707479000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x4B1F DUP3 PUSH2 0x457A JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x4B47 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x465C JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1539 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x4B70 DUP3 PUSH2 0x4B4F JUMP JUMPDEST PUSH2 0x4B7D PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x4595 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x4B8E PUSH1 0x1F NOT SWAP2 PUSH2 0x4B4F JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x4B9F JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x60 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x4B93 JUMP JUMPDEST SWAP1 PUSH2 0x4BBA DUP3 PUSH2 0x4B4F JUMP JUMPDEST PUSH2 0x4BC7 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x4595 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x4BD8 PUSH1 0x1F NOT SWAP2 PUSH2 0x4B4F JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x154F JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x483C JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP1 MLOAD PUSH2 0x4C1B DUP2 DUP6 PUSH1 0x20 DUP1 SWAP6 ADD PUSH2 0x465C JUMP JUMPDEST DUP4 ADD SWAP3 DUP2 DUP2 PUSH1 0x2 SWAP6 DUP7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP2 SLOAD SWAP3 PUSH2 0x4C37 DUP5 PUSH2 0x4B4F JUMP JUMPDEST SWAP5 PUSH2 0x4C44 DUP3 MLOAD SWAP7 DUP8 PUSH2 0x4595 JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP2 DUP4 DUP8 ADD JUMPDEST DUP7 DUP7 LT PUSH2 0x4CAE JUMPI POP POP POP POP POP POP POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x4CA6 JUMPI DUP3 PUSH1 0xA0 PUSH2 0x4C7B DUP4 DUP6 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD EQ PUSH2 0x4C91 JUMPI PUSH2 0x4C8C SWAP1 PUSH2 0x4BE2 JUMP JUMPDEST PUSH2 0x4C65 JUMP JUMPDEST PUSH1 0xC0 SWAP3 POP PUSH2 0x4C9E SWAP2 PUSH2 0x4BF1 JUMP JUMPDEST MLOAD ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xB DUP6 PUSH1 0x1 SWAP3 DUP5 MLOAD PUSH2 0x4CBF DUP2 PUSH2 0x44F1 JUMP JUMPDEST PUSH2 0x4CC8 DUP9 PUSH2 0x45B6 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4CD5 DUP6 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST DUP4 DUP3 ADD MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP8 DUP10 ADD SLOAD AND DUP7 DUP3 ADD MSTORE PUSH1 0x3 DUP9 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x4CFE PUSH1 0x4 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP9 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x6 DUP10 ADD SLOAD AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x4D28 PUSH1 0x7 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x4D39 PUSH1 0x8 DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x9 DUP9 ADD SLOAD PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x4D56 PUSH1 0xA DUP10 ADD PUSH2 0x45B6 JUMP JUMPDEST PUSH2 0x140 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP5 ADD SWAP6 ADD SWAP5 SWAP3 PUSH2 0x4C54 JUMP JUMPDEST ISZERO PUSH2 0x4D71 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F6666696365722061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x154F JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x483C JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP3 LT ISZERO PUSH2 0x4E15 JUMPI PUSH2 0x4E09 PUSH2 0x4DF5 DUP3 PUSH2 0x4E0F SWAP4 PUSH1 0x5 SHL PUSH2 0x4DB6 JUMP JUMPDEST PUSH2 0x4DFF DUP5 DUP8 PUSH2 0x4DC3 JUMP JUMPDEST MLOAD PUSH1 0xF8 SHR SWAP1 PUSH2 0x4DB6 JUMP JUMPDEST SWAP2 PUSH2 0x4BE2 JUMP JUMPDEST SWAP1 PUSH2 0x4DD9 JUMP JUMPDEST SWAP2 SWAP3 POP POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH1 0x7 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 DUP3 SHR GT PUSH1 0x6 SHL OR PUSH4 0xFFFFFFFF DUP3 DUP3 SHR GT PUSH1 0x5 SHL OR PUSH1 0x4 SWAP1 PUSH2 0xFFFF DUP4 DUP3 SHR GT DUP3 SHL OR SWAP2 PUSH1 0x1 DUP4 PUSH1 0xFF DUP4 DUP4 SWAP7 SHR GT SWAP1 PUSH1 0x3 SHR OR ADD SWAP1 DUP1 DUP3 DUP6 SHL SWAP5 PUSH1 0x1 DUP1 PUSH1 0xFF SHL SUB DUP5 AND DUP5 SUB PUSH2 0x4F91 JUMPI PUSH1 0x2 DUP7 ADD SWAP6 DUP7 DUP2 GT PUSH2 0x4F52 JUMPI PUSH2 0x4EAD PUSH2 0x4E97 DUP9 PUSH2 0x46A4 JUMP JUMPDEST SWAP8 PUSH2 0x4EA5 PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x4595 JUMP JUMPDEST DUP1 DUP10 MSTORE PUSH2 0x46A4 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP3 CALLDATACOPY DUP8 MLOAD ISZERO PUSH2 0x4F67 JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP7 MLOAD DUP3 LT ISZERO PUSH2 0x4F7C JUMPI PUSH1 0x78 PUSH1 0x21 DUP9 ADD MSTORE8 DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x4F52 JUMPI SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x4F0F JUMPI POP POP PUSH2 0x4EF3 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE22E27EB PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x4F67 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL SWAP1 BYTE PUSH2 0x4F3E DUP5 DUP10 PUSH2 0x4DC3 JUMP JUMPDEST MSTORE8 DUP6 SHR SWAP2 DUP1 ISZERO PUSH2 0x4F52 JUMPI PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x4EE0 JUMP JUMPDEST PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x32 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x32 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1539 JUMPI PUSH2 0x4FC6 SWAP1 PUSH1 0x1 SWAP4 DUP5 DUP3 ADD DUP2 SSTORE PUSH2 0x4820 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x3826 JUMPI DUP2 MLOAD SWAP1 DUP2 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP2 GT PUSH2 0x1539 JUMPI DUP1 PUSH2 0x4FEE DUP8 SLOAD PUSH2 0x44B7 JUMP JUMPDEST SWAP5 PUSH1 0x1F SWAP6 DUP7 DUP2 GT PUSH2 0x5757 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP7 DUP4 GT PUSH1 0x1 EQ PUSH2 0x56F4 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x56E9 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR DUP6 SSTORE JUMPDEST DUP1 DUP6 ADD PUSH1 0x20 DUP6 ADD MLOAD DUP1 MLOAD SWAP1 DUP5 DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x5042 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP8 DUP2 GT PUSH2 0x5696 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP8 DUP4 GT PUSH1 0x1 EQ PUSH2 0x5633 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x5628 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x2 DUP6 ADD PUSH1 0x40 DUP6 ADD MLOAD DUP1 MLOAD SWAP1 DUP5 DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x5093 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP8 DUP2 GT PUSH2 0x55D5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP8 DUP4 GT PUSH1 0x1 EQ PUSH2 0x5572 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x5567 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 SWAP1 DUP2 DUP7 ADD PUSH1 0x60 DUP7 ADD MLOAD DUP1 MLOAD SWAP1 DUP6 DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x50E6 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP9 DUP2 GT PUSH2 0x5514 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP9 DUP4 GT PUSH1 0x1 EQ PUSH2 0x54B2 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x54A7 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP7 ADD PUSH1 0x80 DUP7 ADD MLOAD DUP1 MLOAD SWAP1 DUP6 DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x5135 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP9 DUP2 GT PUSH2 0x5454 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP9 DUP4 GT PUSH1 0x1 EQ PUSH2 0x53F2 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x53E7 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x5 DUP8 ADD SSTORE PUSH1 0x6 DUP7 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP8 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x7 DUP7 ADD PUSH1 0xE0 DUP7 ADD MLOAD DUP1 MLOAD SWAP1 DUP6 DUP3 GT PUSH2 0x1539 JUMPI DUP2 SWAP1 PUSH2 0x51B0 DUP5 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP9 DUP2 GT PUSH2 0x5394 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 DUP9 DUP4 GT PUSH1 0x1 EQ PUSH2 0x5332 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x5327 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x8 DUP7 ADD SWAP4 PUSH2 0x100 DUP7 ADD MLOAD DUP1 MLOAD SWAP5 DUP6 GT PUSH2 0x1539 JUMPI PUSH2 0x51FE DUP7 SLOAD PUSH2 0x44B7 JUMP JUMPDEST DUP3 DUP2 GT PUSH2 0x52DF JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 DUP6 GT PUSH1 0x1 EQ PUSH2 0x526A JUMPI SWAP4 PUSH2 0x45F4 SWAP8 SWAP7 SWAP4 DUP2 PUSH1 0xA SWAP8 SWAP5 DUP2 SWAP5 PUSH2 0x140 SWAP9 PUSH1 0x0 SWAP6 PUSH2 0x525F JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x120 DUP2 ADD MLOAD PUSH1 0x9 DUP6 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH2 0x522D JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP3 DUP7 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x52C9 JUMPI POP SWAP3 DUP6 SWAP3 PUSH1 0xA SWAP9 SWAP6 SWAP3 PUSH2 0x45F4 SWAP12 SWAP11 SWAP8 PUSH2 0x140 SWAP10 SWAP7 LT PUSH2 0x52AF JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x523D JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x52A1 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP7 SSTORE SWAP5 DUP8 ADD SWAP5 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5280 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP4 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP10 LT PUSH2 0x531E JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP5 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5312 JUMPI POP POP PUSH2 0x5206 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP5 SWAP1 PUSH2 0x5304 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x52FB JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x51CE JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x537C JUMPI POP DUP5 GT PUSH2 0x5364 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x51E0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x5357 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5348 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP9 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x53DE JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x53CF JUMPI POP POP PUSH2 0x51B8 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x53C1 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x53B3 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5153 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x543C JUMPI POP DUP5 GT PUSH2 0x5424 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x5165 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x5417 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5408 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP9 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x549E JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x548F JUMPI POP POP PUSH2 0x513D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x5481 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x5473 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5104 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x54FC JUMPI POP DUP5 GT PUSH2 0x54E4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x5116 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x54D7 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x54C8 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP9 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x555E JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x554F JUMPI POP POP PUSH2 0x50EE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x5541 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x5533 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x50B1 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x55BD JUMPI POP DUP5 GT PUSH2 0x55A4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x50C5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x5597 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5588 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP8 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x561F JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x5610 JUMPI POP POP PUSH2 0x509B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x5602 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x55F4 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5060 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x567E JUMPI POP DUP5 GT PUSH2 0x5665 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x5074 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x5658 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5649 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP8 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP7 LT PUSH2 0x56E0 JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x56D1 JUMPI POP POP PUSH2 0x504A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x56C3 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x56B5 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x5010 JUMP JUMPDEST SWAP1 DUP5 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP10 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x573F JUMPI POP DUP5 GT PUSH2 0x5726 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH2 0x5024 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x5719 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP8 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x570A JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 DUP8 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP4 PUSH1 0x20 DUP8 LT PUSH2 0x57A2 JUMPI JUMPDEST SWAP2 DUP8 SWAP2 DUP8 SWAP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP3 JUMPDEST DUP4 DUP2 LT PUSH2 0x5794 JUMPI POP POP POP PUSH2 0x4FFA JUMP JUMPDEST DUP3 DUP2 SSTORE DUP7 SWAP6 POP DUP8 SWAP2 ADD PUSH2 0x5785 JUMP JUMPDEST SWAP4 POP DUP2 SWAP4 PUSH2 0x5776 JUMP INVALID SLT DUP8 PUSH25 0xF26BAA9F7315389EC7CF48371494BAD555182F0B0507E85DFD REVERT CREATE LOG4 GASLIMIT LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB SGT 0xA6 BLOCKHASH 0xB8 BALANCE DUP16 ORIGIN MULMOD 0x4E DIV LOG4 DUP6 CODESIZE SWAP4 0xE5 0xA8 XOR NOT 0xDC MSTORE 0xB2 SHL 0xF 0xB7 0x25 SLOAD PUSH21 0xBDB5D3F064736F6C63430008140033000000000000 ","sourceMap":"396:28440:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5042:30;;5034:72;;;:::i;:::-;396:28440;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;396:28440:8;;;;2627:22:0;;2623:91;;396:28440:8;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;3052:40:0;396:28440:8;3052:40:0;;396:28440:8;2623:91:0;396:28440:8;;-1:-1:-1;;;2672:31:0;;396:28440:8;;2672:31:0;;396:28440:8;;;2672:31:0;396:28440:8;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;3296:52;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;2654:50;396:28440;;;;;;;;;2654:50;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;396:28440;2654:50;;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;2654:50;396:28440;2654:50;;;:::i;:::-;;;;396:28440;2654:50;;;396:28440;;;2654:50;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;396:28440;2654:50;;;;;;:::i;:::-;396:28440;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;5034:72;396:28440;;5042:30;;5034:72;:::i;:::-;396:28440;;;;;;;;;;;;;:::i;:::-;;;24381:14;;;;396:28440;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;24490:24;396:28440;24490:24;:::i;:::-;24536;;;;:::i;:::-;24583;;;:::i;:::-;24628;;;:::i;:::-;24676:25;;;:::i;:::-;24723;;;;:::i;:::-;24773:24;;;;:::i;:::-;24823:25;;;;:::i;:::-;24874:13;396:28440;24889:14;;;;;;396:28440;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;24905:3::-;24941:11;;24925:37;24941:11;;24905:3;24941:11;;;:::i;:::-;;:21;24925:37;;:::i;:::-;;;;;;:::i;:::-;;24991:11;;;;;:::i;:::-;;:19;;24977:33;;;;:::i;:::-;;;;;;:::i;:::-;;396:28440;25040:11;;;;:::i;:::-;;:20;;25025:35;;;;:::i;:::-;;;;;;:::i;:::-;;396:28440;25088:11;;;;:::i;:::-;;:19;;25075:32;;;;:::i;:::-;;;;;;:::i;:::-;;396:28440;25138:11;;;;:::i;:::-;;:21;396:28440;25122:37;;;;:::i;:::-;396:28440;-1:-1:-1;;;;;396:28440:8;25188:11;;;;:::i;:::-;;:19;396:28440;;25174:33;;;;:::i;:::-;396:28440;;25239:11;;;;:::i;:::-;;:21;;25222:38;;;;:::i;:::-;;;;;;:::i;:::-;;396:28440;25293:11;;;;:::i;:::-;;:22;396:28440;25275:40;;;;:::i;:::-;396:28440;24905:3;:::i;:::-;24874:13;;396:28440;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;-1:-1:-1;;;;;396:28440:8;;:::i;:::-;;;;16957:18;396:28440;;;;;;;;16957:71;;;396:28440;;;;;;;;;;;16957:71;-1:-1:-1;396:28440:8;;;;;;16957:18;16995:33;396:28440;;;16957:71;;396:28440;;;;;5117:1;396:28440;;;:::i;:::-;;5034:72;396:28440;;5042:30;;5034:72;:::i;:::-;5117:1;:::i;:::-;396:28440;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2711:47;;;:::i;:::-;;;;;;;:::i;:::-;396:28440;2711:47;;;;;:::i;:::-;396:28440;2711:47;396:28440;2711:47;;;:::i;:::-;396:28440;2711:47;396:28440;2711:47;;;:::i;:::-;;396:28440;2711:47;;;;;:::i;:::-;;396:28440;;2711:47;;;;396:28440;2711:47;;396:28440;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;:::i;:::-;;;3390:56;396:28440;;;;;;;3390:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;396:28440;;3390:56;;396:28440;3390:56;396:28440;3390:56;;396:28440;;3390:56;;396:28440;;3390:56;;;:::i;:::-;396:28440;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;396:28440:8;;;;-1:-1:-1;;;;;396:28440:8;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16346:36;396:28440;;;;16447:12;396:28440;;16447:12;;16474:19;;16508:16;;16539:14;;396:28440;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;:::i;:::-;5034:72;396:28440;;5042:30;;5034:72;:::i;396:28440::-;;;13450:11;396:28440;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;:::i;:::-;;;;;;;;;;;;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;396:28440:8;;;;15175:64;15183:28;;;15175:64;:::i;:::-;396:28440;;;;;;;;;;;15258:53;396:28440;;15485:46;396:28440;15414:45;396:28440;;;;;;;;15359:44;396:28440;15359:33;396:28440;;;15359:33;396:28440;;;;;;;;;;;;;;;15359:44;:33;396:28440;;;;;;;;;;;;;;;;;;;;15414:45;396:28440;;;;;15485:46;396:28440;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;;:::i;:::-;;;2872:49;396:28440;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;396:28440:8;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;3025:56;396:28440;;;;;;;;;3025:56;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;396:28440;3025:56;;;:::i;:::-;;;;396:28440;3025:56;;;396:28440;-1:-1:-1;;;;;396:28440:8;3025:56;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;396:28440;3025:56;;;396:28440;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;:::i;:::-;;;3116:53;396:28440;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4868:10;;396:28440;;;;4849:18;396:28440;;4841:91;396:28440;;;;;;4841:91;:::i;:::-;5034:72;396:28440;;5042:30;;5034:72;:::i;:::-;396:28440;;;;;;;;;;;;;;;;;:::i;:::-;;;21801:25;396:28440;;;;;;;;:::i;:::-;21795:57;396:28440;;;;;21895:66;396:28440;;21903:27;;21895:66;:::i;:::-;22166:236;396:28440;22187:213;396:28440;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;21801:25;396:28440;;;;;;;:::i;:::-;22363:15;;;:26;:15;:26;:::i;:::-;396:28440;;;;;;;;22187:213;;;;;396:28440;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;22187:213;;;;;;;:::i;:::-;22166:236;:::i;:::-;396:28440;;;;;;;;;;;;:::i;:::-;;;22482:19;396:28440;;;;;;;;;;;;;;:::i;:::-;;;;22558:416;;;;396:28440;22558:416;396:28440;22558:416;;396:28440;;22558:416;;396:28440;;22558:416;;396:28440;22363:15;396:28440;22558:416;;396:28440;4868:10;22558:416;;;396:28440;22558:416;396:28440;22558:416;;396:28440;22558:416;;;396:28440;22558:416;;;;396:28440;23025:43;22958:4;22558:416;;;;;396:28440;;;;;;;;;;;;:::i;:::-;;;23025:14;396:28440;;;;;;23025:43;:::i;:::-;396:28440;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;22482:19;396:28440;;;;;;;;;;;;;;;;;;;:::i;:::-;;;21801:25;396:28440;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;396:28440:8;;;23220:95;396:28440;;;;;;;;;;;;;;;;;;;;23220:95;:::i;:::-;396:28440;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;22363:15;;396:28440;;;;;;;;;;;;:::i;:::-;;;;;;23220:95;;;396:28440;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23220:95;396:28440;;;;-1:-1:-1;;;;;;;;;;;396:28440:8;;;;;;;;;;;;;;;;;;;23220:95;:::i;396:28440::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;4868:10;;396:28440;;;;4849:18;396:28440;;;;;;;;4841:91;;;:::i;:::-;396:28440;;5042:30;;5034:72;;;:::i;:::-;396:28440;;;;;;;;;;;;;;;;;;:::i;:::-;;;19723:25;396:28440;;;;;;;;;;:::i;:::-;;;20103:15;;19904:238;20103:15;;;19925:215;20103:15;:26;:15;:26;:::i;:::-;396:28440;;;;;;;;;19925:215;;;;;396:28440;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;19904:238::-;396:28440;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;396:28440:8;;;;;;;;20241:450;;;;396:28440;20241:450;396:28440;20241:450;;396:28440;;20241:450;;396:28440;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;20241:450;;396:28440;20103:15;396:28440;20241:450;;396:28440;4868:10;396:28440;20241:450;;396:28440;20241:450;396:28440;20241:450;;396:28440;;;:::i;:::-;20241:450;;;396:28440;;20241:450;;;396:28440;20742:47;20675:4;20241:450;;;;;396:28440;;;;;;;;;;;;:::i;20742:47::-;396:28440;;;;;;;;;;;;:::i;:::-;;;20800:19;396:28440;;;;;;;;;;;;;;;;;;:::i;:::-;;;19723:25;396:28440;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;21058:96;396:28440;;;;;-1:-1:-1;;;;;;;;;;;396:28440:8;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;20912:21;396:28440;;;;;;;;;;;;;;;20980:62;;;:::i;:::-;;396:28440;;;;;;;;;;;;:::i;:::-;20103:15;396:28440;;;;20980:62;;;21058:96;:::i;:::-;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20103:15;;396:28440;;;;;;;;;;;;:::i;:::-;;;;;;21058:96;;;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21058:96;396:28440;;;-1:-1:-1;;;;;;;;;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;5034:72;396:28440;;5042:30;;5034:72;:::i;:::-;396:28440;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;28240:15;396:28440;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;28302:21;396:28440;;;;;;;;;;28384:22;;396:28440;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;396:28440:8;;;;1500:62:0;;:::i;:::-;396:28440:8;;;-1:-1:-1;;;;;;396:28440:8;;;;-1:-1:-1;;;;;396:28440:8;3052:40:0;396:28440:8;;3052:40:0;396:28440:8;;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;4868:10;396:28440;;4849:18;396:28440;;4841:91;396:28440;;;;;;4841:91;:::i;:::-;5034:72;396:28440;;5042:30;;5034:72;:::i;:::-;396:28440;;;;;;;;;;;;;;:::i;:::-;;;;25998:33;25994:520;25998:21;;;26064:4;396:28440;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;25994:520;;396:28440;;;;;;:::i;:::-;;;;;26607:279;;396:28440;;26607:279;;396:28440;26777:15;396:28440;26607:279;;396:28440;;;;26607:279;;;396:28440;26607:279;;;;396:28440;;;;;;;;;;;;;;:::i;:::-;;;26575:15;396:28440;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;:::i;:::-;;;;;;25994:520;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26607:279;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26607:279;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;26607:279;396:28440;;4849:18;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;26607:279;;396:28440;;;;;;26607:279;;;396:28440;;;;;;;;;;;;;;;;;;;;;;;26607:279;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;27028:60;;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;26950:52;396:28440;;;;;;;;;;;:::i;:::-;26950:21;396:28440;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;26950:52;27028:60;:::i;:::-;;396:28440;;27028:60;;;;;;:::i;:::-;;;;396:28440;;;;;;;;:::i;:::-;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27028:60;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;26607:279;396:28440;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;-1:-1:-1;396:28440:8;;;25994:520;396:28440;;;26167:30;;396:28440;26167:30;396:28440;;;;;;;;;;;:::i;:::-;;;26167:30;;;;;;;:::i;:::-;396:28440;26157:41;;396:28440;;;26212:32;;396:28440;26212:32;396:28440;;;;;;;;;;;:::i;26212:32::-;396:28440;26202:43;;26157:88;26202:43;;26278:4;396:28440;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;26153:361;25994:520;;26153:361;396:28440;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;26153:361;25994:520;;396:28440;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;1500:62:0;;;;:::i;396:28440:8:-;;;18106:11;396:28440;;;;;;;18192:3;396:28440;;18172:18;;;;;18216:10;:22;:10;;;;:::i;:::-;:22;;396:28440;18216:37;18212:128;;18192:3;;;:::i;:::-;18157:13;;18212:128;18274:18;:10;;;;;:::i;:::-;-1:-1:-1;18274:18:8;396:28440;;-1:-1:-1;;396:28440:8;;;;18172:18;396:28440;;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;4868:10;;396:28440;;4849:18;396:28440;;4841:91;396:28440;;;;;;4841:91;:::i;:::-;5034:72;396:28440;;5042:30;;5034:72;:::i;:::-;7400:66;396:28440;;7408:27;;7400:66;:::i;:::-;7606:204;7507:15;7606:204;;;;;;;:::i;:::-;396:28440;;;;;;;;;;;;;;;;;:::i;:::-;;;;7958:31;7954:82;;396:28440;8118:214;7507:15;8139:191;396:28440;7507:15;;8246:20;7507:15;8246:20;:::i;:::-;396:28440;;;;;;;;8139:191;;396:28440;8139:191;;;396:28440;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;4868:10;396:28440;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;8139:191;396:28440;8139:191;;;;;;;:::i;8118:214::-;396:28440;;;;;;;:::i;:::-;;;;8413:419;396:28440;8413:419;;396:28440;4868:10;396:28440;8413:419;;396:28440;7507:15;396:28440;8413:419;;396:28440;8413:419;396:28440;8413:419;;396:28440;8630:12;396:28440;8413:419;;396:28440;8666:4;396:28440;8413:419;;396:28440;;8413:419;;396:28440;8413:419;396:28440;8413:419;;396:28440;8630:12;8413:419;;;396:28440;8413:419;;;;396:28440;;;;;;;;;;;;;;;;:::i;:::-;;;8853:11;396:28440;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;8666:4;396:28440;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;8413:419;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;8666:4;396:28440;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;8666:4;396:28440;;;;8853:11;396:28440;;;;;;;;8413:419;;396:28440;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;8413:419;;396:28440;;;;;;8413:419;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;8413:419;;396:28440;4849:18;396:28440;;;;;8413:419;;396:28440;;;7913:16;396:28440;;;;;;;;;;;;;;;;;;;8413:419;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;8413:419;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8413:419;;396:28440;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;8413:419;;;396:28440;;;;;8413:419;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;8973:305;396:28440;8973:305;;396:28440;8973:305;396:28440;8973:305;;396:28440;;8973:305;;396:28440;;8973:305;;396:28440;;8973:305;;396:28440;7507:15;396:28440;8973:305;;396:28440;8666:4;396:28440;8973:305;;396:28440;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;8973:305;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;8666:4;396:28440;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;8666:4;396:28440;;;;;8973:305;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;8853:11;396:28440;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;8853:11;396:28440;;;;;8973:305;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;8973:305;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;8973:305;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;4849:18;396:28440;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;4849:18;396:28440;;;;;8973:305;;396:28440;7913:16;396:28440;;;8973:305;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;7913:16;396:28440;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;9654:150;396:28440;9654:150;396:28440;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;9424:204;396:28440;9424:204;;;:::i;:::-;396:28440;;;;;;;;;;;;;:::i;:::-;7507:15;;396:28440;;;;;;;;;;;;:::i;:::-;8630:12;;396:28440;;;;;;;;;;;4868:10;396:28440;4868:10;396:28440;;;:::i;:::-;9424:204;;;9654:150;:::i;:::-;396:28440;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;7507:15;396:28440;;;;9654:150;;;396:28440;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;9654:150;396:28440;;;;;;;;;;9654:150;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;8666:4;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;4849:18;396:28440;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;8666:4;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;-1:-1:-1;8666:4:8;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;-1:-1:-1;8666:4:8;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;8853:11;396:28440;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;8853:11;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;8853:11;396:28440;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;-1:-1:-1;8666:4:8;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;8666:4;396:28440;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;-1:-1:-1;8666:4:8;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;-1:-1:-1;8666:4:8;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;8666:4;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;8666:4;396:28440;8413:419;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;8666:4;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;-1:-1:-1;8666:4:8;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;-1:-1:-1;8666:4:8;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;8666:4;396:28440;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;-1:-1:-1;8666:4:8;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8666:4;396:28440;;;;;;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;;4849:18;396:28440;;;;;;;;;;;;;;;;;-1:-1:-1;8666:4:8;396:28440;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;7954:82;396:28440;;;;:::i;:::-;7954:82;;;396:28440;;;;;;-1:-1:-1;;396:28440:8;;;;;;:::i;:::-;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;14065:64:8;-1:-1:-1;;;;;396:28440:8;;14073:28;;14065:64;:::i;:::-;396:28440;;14148:22;396:28440;;;;14214:29;396:28440;;;;14294:26;396:28440;;;;14368:24;396:28440;;;;;;;:::i;:::-;-1:-1:-1;;;;;396:28440:8;;;;;;;14467:268;;;396:28440;;;;14467:268;;;396:28440;;;;14467:268;;396:28440;;;;14467:268;;396:28440;;;;;14467:268;;396:28440;14708:15;14467:268;;;396:28440;-1:-1:-1;396:28440:8;;;;;;;;;;;;;-1:-1:-1;;;;;;396:28440:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14467:268;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14467:268;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14467:268;;396:28440;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;14467:268;396:28440;;;14823:70;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14467:268;;396:28440;;;;;;;;;;;;;;;;;;;;;;14467:268;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;:::i;:::-;14823:70;;;396:28440;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;14467:268;396:28440;;;;;;14823:70;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;-1:-1:-1;396:28440:8;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;-1:-1:-1;396:28440:8;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;-1:-1:-1;;;;;396:28440:8;;:::i;:::-;;;;2815:50;396:28440;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;396:28440:8;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;5034:72;396:28440;;5042:30;;5034:72;:::i;:::-;396:28440;;;;;;;;;;;;;:::i;:::-;;;10730:11;;;;396:28440;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;10837:25;;;:::i;:::-;10886:26;;;;:::i;:::-;10934;;;;:::i;:::-;10982:25;;;;:::i;:::-;11031;;;;:::i;:::-;11083;;;;:::i;:::-;11134:13;396:28440;11149:15;;;;;;396:28440;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;11166:3::-;11203:10;;;11166:3;11203:10;;;:::i;:::-;;:20;;11186:37;;;;:::i;:::-;;;;;;:::i;:::-;;396:28440;11254:10;;;;:::i;:::-;;:20;396:28440;11238:36;;;;:::i;:::-;396:28440;-1:-1:-1;;;;;396:28440:8;11303:10;;;;:::i;:::-;;:18;396:28440;;11289:32;;;;:::i;:::-;396:28440;;11350:10;;;;:::i;:::-;;:19;;11336:33;;;;:::i;:::-;;;;;;:::i;:::-;;396:28440;11400:10;;;;:::i;:::-;;:19;;11384:35;;;;:::i;:::-;;;;;;:::i;:::-;;396:28440;11453:10;;;;:::i;:::-;;:22;;11434:41;;;;:::i;:::-;;;;;;:::i;:::-;;11166:3;:::i;:::-;11134:13;;396:28440;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;-1:-1:-1;;;;;396:28440:8;;;:::i;:::-;;;;;;;;;;;;;;2765:43;396:28440;2765:43;;;:::i;:::-;;;;;;;:::i;:::-;396:28440;2765:43;396:28440;2765:43;;;:::i;:::-;396:28440;2765:43;396:28440;2765:43;;;:::i;:::-;;396:28440;2765:43;396:28440;2765:43;;;396:28440;;2765:43;;396:28440;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;:::o;:::-;;;;;;-1:-1:-1;396:28440:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;396:28440:8;;;;-1:-1:-1;396:28440:8;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;396:28440:8;;;;:::o;:::-;-1:-1:-1;;;;;396:28440:8;;;;;;-1:-1:-1;;396:28440:8;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;-1:-1:-1;396:28440:8;;;-1:-1:-1;396:28440:8;;;;;-1:-1:-1;396:28440:8;:::o;:::-;;;;;;;;;;;;1796:162:0;1710:6;396:28440:8;-1:-1:-1;;;;;396:28440:8;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;396:28440:8;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;396:28440:8;;;1901:40:0;5742:758:8;;;;;6170:209;5742:758;6348:20;6465:27;5742:758;6348:20;:::i;:::-;396:28440;;;;;;;;;6170:209;;;;;;;396:28440;;;:::i;1308:634:4:-;1430:17;-1:-1:-1;29291:8:5;;29282:17;;;;29278:103;;1308:634:4;29407:8:5;;29398:17;;;;29394:103;;1308:634:4;29523:8:5;;29514:17;;;;29510:103;;1308:634:4;29639:7:5;;29630:16;;;;29626:100;;1308:634:4;29752:7:5;;29743:16;;;;29739:100;;1308:634:4;29856:16:5;29865:7;29856:16;;;29852:100;;1308:634:4;29978:7:5;29969:16;;;;29965:66;;1308:634:4;1450:1;396:28440:8;;1545:94:4;396:28440:8;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;1545:94:4;;;1652:247;1450:1;;;1652:247;1912:13;;;;1308:634;:::o;1652:247::-;-1:-1:-1;;396:28440:8;;;;-1:-1:-1;;;1706:111:4;;;;396:28440:8;1706:111:4;396:28440:8;1834:11:4;;1867:10;1863:21;;1652:247;;;;;1863:21;1879:5;;29965:66:5;396:28440:8;30015:1:5;396:28440:8;29965:66:5;;;29852:100;396:28440:8;;29865:7:5;29936:1;396:28440:8;;;;29852:100:5;;;29739;29823:1;396:28440:8;;;;;;29739:100:5;;;;29626;29710:1;396:28440:8;;;;;;29626:100:5;;;;29510:103;29596:2;396:28440:8;;;;;;29510:103:5;;;;29394;29480:2;396:28440:8;;;;;;29394:103:5;;;;29278;29364:2;;-1:-1:-1;396:28440:8;;;-1:-1:-1;29278:103:5;;;396:28440:8;;;;:::o;:::-;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;396:28440:8;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;-1:-1:-1;;;;;396:28440:8;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;396:28440:8;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;-1:-1:-1;;396:28440:8;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;12575:490::-;396:28440;;;;;;;;;;;;;;:::i;:::-;;;12805:11;;;;396:28440;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;12856:13;;;;;;;396:28440;12891:3;396:28440;;12871:18;;;;;12915:10;396:28440;12915:10;;;;:::i;:::-;;:22;396:28440;12915:37;12911:103;;12891:3;;;:::i;:::-;12856:13;;12911:103;396:28440;12980:10;;;;;:::i;:::-;;:18;396:28440;;;12973:25;:::o;12871:18::-;;;;396:28440;12575:490;:::o;396:28440::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;18512:441::-;;18751:1;18768:13;18807:3;396:28440;;18783:22;;;;;18839:54;18840:28;396:28440;18807:3;396:28440;18854:1;396:28440;18840:28;:::i;:::-;18878:14;;;;:::i;:::-;396:28440;;;18839:54;;:::i;:::-;18807:3;;:::i;:::-;18768:13;;;18783:22;;;;;30906:34:5;30902:38;;30945:1;396:28440:8;-1:-1:-1;;;;;396:28440:8;;;31043:29:5;31077:1;396:28440:8;31022:56:5;31185:10;396:28440:8;;;31174:21:5;18854:1:8;396:28440;31153:48:5;31319:1;396:28440:8;31308:6:5;396:28440:8;;;31297:17:5;396:28440:8;;31276:44:5;2470:1:4;;396:28440:8;;;;;;31452:15:5;396:28440:8;31431:1:5;396:28440:8;31425:43:5;396:28440:8;2712:26:4;;396:28440:8;;;;;;;;;;;;;;;2780:1:4;396:28440:8;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;2805:15:4;;;396:28440:8;;;;;;;2830:15:4;396:28440:8;;;2830:15:4;396:28440:8;;;;;;;;2855:140:4;2888:5;;;;;;3008:15;;3004:96;;18915:30:8;;;18512:441;:::o;3004:96:4:-;396:28440:8;;-1:-1:-1;;;3046:43:4;;;;;396:28440:8;384:18:4;;;396:28440:8;384:18:4;;-1:-1:-1;3046:43:4;2895:3;2937:16;;2950:3;2937:16;;2926:28;;;;;;-1:-1:-1;;;2926:28:4;;2914:40;;;;:::i;:::-;;396:28440:8;;2895:3:4;396:28440:8;;;;-1:-1:-1;;396:28440:8;;2860:26:4;;396:28440:8;;;;;;18751:1;396:28440;;;18751:1;396:28440;2926:28:4;396:28440:8;;;;;18751:1;396:28440;;;18751:1;396:28440;;;;;;;18751:1;396:28440;;;18751:1;396:28440;;;;;;;18751:1;396:28440;;;18751:1;396:28440;;;;;-1:-1:-1;;;396:28440:8;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;-1:-1:-1;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;396:28440:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;396:28440:8;;;;;;;;;;;"},"methodIdentifiers":{"addTimelineEvent(string,string,string,string,string)":"8a589fa5","authorizedOfficers(address)":"4a7b7677","createSurveyBlock(string,string,string,string,string,string)":"807d0fa7","generateSurveyDataHash(string,string,string,string,string,string,uint256)":"b3475060","getContractStats()":"dfe6b5d6","getCurrentHash(string)":"7af8e3a0","getCurrentTimelineHash(string)":"2e81e1b7","getLandRecord(string)":"2b4f75d1","getOfficerInfo(address)":"d25bd7a8","getRecordCount(string)":"c3cef20a","getSurveyData(string)":"f5124cd9","getSurveyIntegrityStatus(string)":"7c636833","getSurveyTimeline(string)":"ecc0cc75","getTimelineCount(string)":"3c925fe7","integrityChecks(string)":"d41eec4e","invalidateRecord(string,uint256)":"66ea50dd","isAuthorizedOfficer(address)":"eb4fc6ac","landRecords(string,uint256)":"eda03aa7","officers(address)":"084866dd","owner()":"8da5cb5b","registerOfficer(address,string,string,string,string)":"5eaab2e8","renounceOwnership()":"715018a6","setOfficerStatus(address,bool)":"bf9cf4cf","surveyCurrentTimelineHash(string)":"67ae9d21","surveyData(string)":"de0c6ff4","surveyDataHashes(string)":"b893bb10","surveyIntegrityStatus(string)":"f04b5aab","surveyTimeline(string,uint256)":"a58bf0b1","surveyTimelineCount(string)":"8c154ac8","transferOwnership(address)":"f2fde38b","updateLandRecord(string,string,string,string,string,string,string,string)":"63e25495","verifyRecord(string,uint256)":"e53a1cc2","verifySurveyIntegrity(string,string)":"705ecbce"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isCompromised\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"IntegrityCheckPerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"eventType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"officer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dataHash\",\"type\":\"string\"}],\"name\":\"LandRecordUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"officerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"designation\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"district\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"taluka\",\"type\":\"string\"}],\"name\":\"OfficerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"officerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"OfficerStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"initialHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SurveyBlockCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"landType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dataHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"SurveyDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"eventType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"eventHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventIndex\",\"type\":\"uint256\"}],\"name\":\"TimelineEventAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"eventType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"addTimelineEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedOfficers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"jmrData\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"awardData\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landRecordData\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landType\",\"type\":\"string\"}],\"name\":\"createSurveyBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landArea\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectDetails\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"generateSurveyDataHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"dataHash\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalOfficers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeOfficers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRecords\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSurveys\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"}],\"name\":\"getCurrentHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"}],\"name\":\"getCurrentTimelineHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"}],\"name\":\"getLandRecord\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"recordTypes\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timestamps\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"officers\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"metadata\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"dataHashes\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"currentHashes\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"officerAddress\",\"type\":\"address\"}],\"name\":\"getOfficerInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"designation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"district\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"taluka\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"registrationDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"}],\"name\":\"getRecordCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"}],\"name\":\"getSurveyData\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landArea\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectDetails\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct LandRecordsContract.SurveyData\",\"name\":\"data\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"}],\"name\":\"getSurveyIntegrityStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isIntegrityValid\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lastChecked\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"compromiseReason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"}],\"name\":\"getSurveyTimeline\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"eventTypes\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"ownerIds\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"landTypes\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"details\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"timestamps\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"officers\",\"type\":\"address[]\"},{\"internalType\":\"string[]\",\"name\":\"eventHashes\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"eventIndexes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"}],\"name\":\"getTimelineCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"integrityChecks\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"databaseHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"blockchainHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lastChecked\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCompromised\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"compromiseReason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"invalidateRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"officerAddress\",\"type\":\"address\"}],\"name\":\"isAuthorizedOfficer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAuthorized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"landRecords\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"eventType\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"officer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"previousHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"currentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"dataHash\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"officers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"officerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"designation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"district\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"taluka\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"registrationDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"officerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"designation\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"district\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"taluka\",\"type\":\"string\"}],\"name\":\"registerOfficer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"officerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"setOfficerStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"surveyCurrentTimelineHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"surveyData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landArea\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectDetails\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"surveyDataHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"surveyIntegrityStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"surveyTimeline\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"eventType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"officer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"eventHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"previousHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"eventIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"surveyTimelineCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"eventType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ownerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"landArea\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"projectDetails\",\"type\":\"string\"}],\"name\":\"updateLandRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"verifyRecord\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"surveyNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"databaseHash\",\"type\":\"string\"}],\"name\":\"verifySurveyIntegrity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCompromised\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SARAL Bhoomi Team\",\"details\":\"Enhanced smart contract for tracking land records with comprehensive hash generation\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{\"addTimelineEvent(string,string,string,string,string)\":{\"details\":\"Add new timeline event for survey changes\",\"params\":{\"details\":\"Detailed description of the event\",\"eventType\":\"Type of event (AwardDeclared, Compensated, etc.)\",\"landType\":\"Land classification\",\"ownerId\":\"Current owner ID\",\"surveyNumber\":\"The survey number\"}},\"createSurveyBlock(string,string,string,string,string,string)\":{\"details\":\"Create initial survey block with all current data\",\"params\":{\"awardData\":\"Award and compensation data\",\"jmrData\":\"JMR measurement data\",\"landRecordData\":\"Land record details\",\"landType\":\"Land classification\",\"ownerId\":\"Current owner ID\",\"surveyNumber\":\"The survey number\"}},\"generateSurveyDataHash(string,string,string,string,string,string,uint256)\":{\"details\":\"Generate comprehensive hash from all survey number related data\",\"params\":{\"landArea\":\"Area of land\",\"landType\":\"Type of land\",\"location\":\"Location details\",\"ownerId\":\"Owner ID\",\"projectDetails\":\"Project information\",\"surveyNumber\":\"The survey number\",\"timestamp\":\"Current timestamp\"},\"returns\":{\"dataHash\":\"The generated hash\"}},\"getContractStats()\":{\"details\":\"Get contract statistics\",\"returns\":{\"activeOfficers\":\"Number of active officers\",\"totalOfficers\":\"Total number of registered officers\",\"totalRecords\":\"Total number of land records\",\"totalSurveys\":\"Total number of unique survey numbers\"}},\"getCurrentHash(string)\":{\"details\":\"Get the current hash for a survey number\",\"params\":{\"surveyNumber\":\"The survey number to query\"},\"returns\":{\"currentHash\":\"The current hash\"}},\"getCurrentTimelineHash(string)\":{\"details\":\"Get current timeline hash for a survey number\",\"params\":{\"surveyNumber\":\"The survey number\"},\"returns\":{\"currentHash\":\"Current timeline hash\"}},\"getLandRecord(string)\":{\"details\":\"Get all land records for a specific survey number with timeline\",\"params\":{\"surveyNumber\":\"The survey number to query\"},\"returns\":{\"currentHashes\":\"Array of current hashes\",\"dataHashes\":\"Array of data hashes\",\"metadata\":\"Array of metadata strings\",\"officers\":\"Array of officer addresses\",\"recordTypes\":\"Array of event types\",\"timestamps\":\"Array of timestamps\"}},\"getOfficerInfo(address)\":{\"details\":\"Get officer information\",\"params\":{\"officerAddress\":\"The address of the officer\"},\"returns\":{\"designation\":\"Officer designation\",\"district\":\"Officer district\",\"isActive\":\"Whether officer is active\",\"name\":\"Officer name\",\"registrationDate\":\"When officer was registered\",\"taluka\":\"Officer taluka\"}},\"getRecordCount(string)\":{\"details\":\"Get the total number of records for a survey number\",\"params\":{\"surveyNumber\":\"The survey number to query\"},\"returns\":{\"count\":\"Total number of records\"}},\"getSurveyData(string)\":{\"details\":\"Get current survey data for a survey number\",\"params\":{\"surveyNumber\":\"The survey number to query\"},\"returns\":{\"data\":\"The current survey data\"}},\"getSurveyIntegrityStatus(string)\":{\"details\":\"Get integrity status for a survey number\",\"params\":{\"surveyNumber\":\"The survey number\"},\"returns\":{\"compromiseReason\":\"Reason for compromise if any\",\"isIntegrityValid\":\"Whether survey integrity is valid\",\"lastChecked\":\"When integrity was last checked\"}},\"getSurveyTimeline(string)\":{\"details\":\"Get complete timeline for a survey number\",\"params\":{\"surveyNumber\":\"The survey number\"},\"returns\":{\"details\":\"Array of event details\",\"eventHashes\":\"Array of event hashes\",\"eventIndexes\":\"Array of event indexes\",\"eventTypes\":\"Array of event types\",\"landTypes\":\"Array of land types\",\"officers\":\"Array of officer addresses\",\"ownerIds\":\"Array of owner IDs\",\"timestamps\":\"Array of timestamps\"}},\"getTimelineCount(string)\":{\"details\":\"Get timeline count for a survey number\",\"params\":{\"surveyNumber\":\"The survey number\"},\"returns\":{\"count\":\"Number of timeline events\"}},\"invalidateRecord(string,uint256)\":{\"details\":\"Emergency function to invalidate a record (only owner)\",\"params\":{\"blockNumber\":\"The block number to invalidate\",\"surveyNumber\":\"The survey number\"}},\"isAuthorizedOfficer(address)\":{\"details\":\"Check if an address is an authorized officer\",\"params\":{\"officerAddress\":\"The address to check\"},\"returns\":{\"isAuthorized\":\"Whether the address is authorized\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerOfficer(address,string,string,string,string)\":{\"details\":\"Register a new officer\",\"params\":{\"designation\":\"The designation of the officer\",\"district\":\"The district where the officer is posted\",\"name\":\"The name of the officer\",\"officerAddress\":\"The address of the officer\",\"taluka\":\"The taluka where the officer is posted\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setOfficerStatus(address,bool)\":{\"details\":\"Change officer status (active/inactive)\",\"params\":{\"isActive\":\"The new status\",\"officerAddress\":\"The address of the officer\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateLandRecord(string,string,string,string,string,string,string,string)\":{\"details\":\"Update land record with comprehensive data and new hash\",\"params\":{\"eventType\":\"The type of event (JMR_Measurement_Uploaded, Notice_Generated, etc.)\",\"landArea\":\"Area of land\",\"landType\":\"Type of land\",\"location\":\"Location details\",\"metadata\":\"Additional metadata about the event\",\"ownerId\":\"Owner ID\",\"projectDetails\":\"Project information\",\"surveyNumber\":\"The survey number of the land parcel\"}},\"verifyRecord(string,uint256)\":{\"details\":\"Verify if a specific record is valid\",\"params\":{\"blockNumber\":\"The block number to verify\",\"surveyNumber\":\"The survey number to verify\"},\"returns\":{\"isValid\":\"Whether the record is valid\"}},\"verifySurveyIntegrity(string,string)\":{\"details\":\"Verify survey integrity by comparing database hash with blockchain hash\",\"params\":{\"databaseHash\":\"Hash from database\",\"surveyNumber\":\"The survey number\"},\"returns\":{\"isCompromised\":\"Whether data integrity is compromised\",\"reason\":\"Reason for compromise if any\"}}},\"title\":\"LandRecordsContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LandRecordsContract.sol\":\"LandRecordsContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/LandRecordsContract.sol\":{\"keccak256\":\"0xc8488dffdf227a0def4e3749bf42380019f7e5aa16775fa37f8fc75fb43b5c8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56bae0f85a1b8fb200f98f70b700c84d0d33761d059ed71a8fdfbed0739d256b\",\"dweb:/ipfs/QmU7gq55jPoxYtgGSYZwqTQozGu2bhxZznfGkFTREumRim\"]}},\"version\":1}"}}}}}